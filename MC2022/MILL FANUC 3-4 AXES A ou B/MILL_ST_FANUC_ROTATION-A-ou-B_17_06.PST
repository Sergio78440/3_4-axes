[POST_VERSION] #DO NOT MOVE OR ALTER THIS LINE# V24.00 P0 E1 W24.00 T1635327049 M24.00 I0 O0
scustpost_revision    : "22.1706"  #:= Revision number for use by Resellers or customers.
# ----------------------------------------
# - REALISE PAR                	--> FS
# ---------------------------------------- config PP
# - TYPE PP                 	--> FRAISAGE
# - NOMBRE d'AXES            	--> 4
# - AXES                     	--> A ou B
# - TYPE DE LANGAGE         	--> FANUC
#            VERSION            --> 18 ...
# ---------------------------------------- client / infos machine
# - CLIENT                    	-->  
# - NON MACHINE                	--> 
# - AXE ROTATIF(1)            	--> A/B
# ----------------------------------------

[STARTBIN]
#property of ficam, Eric Dauvilliers, e.dauvilliers@ficam.com, +33 (0)2 37 26 28 10

#region possibilites_PP
# ---------------------------------------- infos complEmentaires / config PP
# - RESTRICTIONS                --> OUI - numéro de clé/en durée/version MC
# - ENTETEs
#                   ANCIENNE    --> OUI
#                   NOUVELLE    --> OUI
#         OP MC COMMENTAIRE     --> OUI
# - LECTURE INFOS ARMOIRE       --> OUI
# - LECTURE INFOS MACHINE       --> OUI
# - ORIGINES                    --> OUI
# - INSPECTION D'OUTIL          --> OUI
# - ARROSAGES VX                --> NON
# - AVANCES EN VARIABLES        --> OUI
# - OUTILS EN VARIABLES         --> OUI
# - APPEL OUTILS SUIVANT EN NOM --> OUI
# - CYCLES PALPAGES             --> OUI
# - SOUS-PROGRAMMES
#                       en Z    --> OUI
#                translation    --> OUI
#                   Rotation    --> OUI
#                     Miroir    --> OUI ?
# - SUBSTITUTION D'AXES			--> OUI
# - TEXTES AVANT/AVEC/APRES 	--> NON / NON a completer
# ---------------------------------------- infos complEmentaires
# - SIMULATION ISO				--> NON
# - PERCAGES AVANCé				--> NON
# - PERC. TRES PROFOND          --> OUI
# - MODIFICATION AUTO DU NOM    --> OUI	- F12345.NC ou 12345-NH.NC ou F12345-NH.NC
# - OUVERTURE D'UN AUTRE EDITEUR--> OUI
# - AFFICHAGE DU TEMPS D'USINAGE
# 					PAR OUTIL 	--> NON
#						TOTAL	--> NON
# - ARRET COMTROLE BRIS D'OUTIL	--> OUI
# - CYCLE TEST BRIS D'OUTIL		--> NON
# - NOMs PROGRAMMES/SP "O"-":"	--> OUI 
# ---------------------------------------- INFOS

#REGLAGE_DEBUG
Mode_reglage_PP = 0       		# 2= Affiche les valeurs en cours de réglage pour info 
								# 1= affiche toutes les valeurs pour info
affiche_prmcodes = 0     		# 1= Affiche les prmcode$

# ----------------------------- Restrictions #0124
# 1=actif    0=inactif
num_clEe_DEALER	: 104632		# Sergio = 104632	--> débloque toutes les restrictions
#
restric_version_MC    	: 0     # 0/1	1=actif    0=inactif
restric_version_num    	: 21    # 21=2019    22=2020
restric_num_clEe    	: 0     # 0/1	1=actif    0=inactif
num_clEe_client        	: 0     # numEro de la clEe atribuEe
#
restric_durEe        	: 0     # 0/1	1=actif    0=inactif
jour_                	: 23    # jour limite
mois_                	: 10    # mois limite
annEe_                	: 19    # annEe limite --> 20= 2020
#
#region Historique_modifs_versions
# -   DESCRIPTION DES MODIFICATIONS           -
# mi2 utilisé pour ne pas degager en Z avant rotation plateau
# mi3 utilisé pour ne pas bloquer le diviseur
# Workof (n°de Décalage) de 54 a 59  (0 pour 54 1 pour 55 etc...) et 59.1P1 P2 apres
# ecriture des parametres dans NCI et du fichier OPS (pour lire les infos de surep)
# creation des blocs pour afficher les surepS
# creation de l'affichage des types de correction
# gestion du pmx en 4 axes
# lecture de la def armoire pour :
#                   l'extension de l'iso
#                   les arcs
#                   les commentaires
#                   la preparation de l'outil suivant
# Lecture de la def machine pour :
#                   Le nom de la machine
#                   Le nombre d'axes rotatif (1 seul supporté)
#                   Le sens de rotation de l'axe rotatif
# ---------------------------------------------------------------------------------------------------------
#0003 le 18 06 07 Pour afficher dans la liste "outil à fileter"
#0025 le 18 06 07 - Affichage des commentaires de début d'OP en entete Prog. (Commentaire usinage dans de la BIBLI)
#  "    "   " - variable "entete_questions" 0 = pas de questions PST (entete en fichier texte), 1 = questions PST
#0026 le 18 06 07 - Pour afficher entete avec "OP de Modification" (pour morceau de programme)
#0027 le 18 06 07 - Pour afficher dans la liste le texte des fraises de formes ex:"FR A GRAVER"
#0030 le 18 06 07 - Pour Gerer les num. prog. ISO FORMAT: F=Fraisage ou T=Tournage, Num d'article,- Indice plan,-
#           Num d'op,- Initiales Machine    ex: F016230-02-1-HE.H
#           possibilité de revenir à l'ancienne numérotation "change_nom" = 0 ou 1
#0039 le 18 06 07 - pour mise à niveau avec les Modifs F.S.
#0040 le 18 06 07 - Modifs suite passage VX
#0041 le 21 06 07 - Pour utiliser le 4x avec l'OP commentaire
#0042 le 03 10 07 - Pour que les "tempo" soient compatibles
#0043 le 24 09 07 - Ajout de l'affichage d'un incrément d'OP pour chaque outil
#0044 Le 25 10 07 - Ajout pour poser la question 4x oui/non sur OP Modif.
#0045 le 27 02 08 - Afficher ou non le nom du groupe
#0046 le 27 02 08 - Modif pour G54 à G59 & G54.1 P1 à P49 suivant décallages MC
#0047 le 28 02 08 - Ajout pour les palpages
#0048 Le 01 03 08 - Ajout 1=Validation/0=dévalidation des dégagements en Z avant appel d'outil
#0049 le 12 03 08 - Ajout pour l'affichage des XY Z apres rotation
#0050 le 10 06 08 - Ajout pour afficher les outils en parametres avec option
#                   Valider / dévalider les parametres
#0051 le 18 07 08 - Modif pour d'esactiver l'affichage des outils en parametres
#                   depuis MC - mi4 = 1, Validé / mi4 = 0, dévalidé
#0052 le 22 07 08 - Modif pour ne pas afficher le taraudage avec brise copeaux
#0053 le 01-12-14 - Gestion de l'arret machine "M0" et rotation broche

#0066 Le 03 02 09 - Ajout pour l'affichage des fonctions "M"
#0067 Le 13 03 09 - force l'affichage de X et Y avec la correction de rayon

#0070 Le 17 11 09 - Ajout pour afficher le "commentaire" des décallages d'origines.
#0071 Le 21 09 10 - Modif pour gerer les calculs de positions après rotation par le sous-prog
#0072 Le 02 02 11 - Ajout pour faire du perçage 4 axes continu
#0073 Le 31 08 11 - Ajout pour afficher G54,G55... sur des répétitions d'usinage en transformé

#0079 Le 03 10 13 - Ajout pour afficher un message si les plans n'ont pas l'origine de base
#0080 Le 24 10 13 - Ajout pour afficher un message s'il y a différents RUD

#0085 Le 28 11 13 - Ajout pour afficher le MINI MAXI "Z" dans chaque outil

#0090 Le 13-03-14 - Ajout pour ne pas faire d'erreur sur LE PAS DU FILETAGE à la fraise"
#0091 Le 17-03-14 - Ajout pour les perçages très profond avec trous d'huile
#0092 LE 19-03-14 - Ajout pour afficher la valeur du vrai filetage à la fraise
#0093 le 21-03-14 - Ajout pour verifier si l'outil et l'opération ont le meme PAS
#0097 le 17-07-14 - Ajout pour afficher un message si le num. d'outil est different du num "H" ou "D"
#0098 le 31-07-14 - Ajout pour afficher un message si la ROTATION NE CORRESPOND PAS A LA POSSIBILITEE CN
#0099 le 01-12-14 - Ajout pour vérifier si l'avance de filetage à la fraise est TROP importante
#0100 le 03-02-15 - Ajout pour gerer la rotation avec les cycles de perçage profond
#0101 le 09-03-15 - Ajout pour afficher le nom du porte outil
#0102 le 24-03-15 - Ajout pour afficher UN MESSAGE S'IL N'Y A PAS DE VALEUR D'AVANCE
#0103 le 26-03-15 - Ajout pour pouvoir controler l'état des plaquettes/outil

#0120 le 15-04-16 - modif pour supprimer la virgule pour les entetes
#0121 le 28-09-17 - Ajout pour utiliser ou pas les NOMs d'outils en ENTETE à la place des valeurs géométriques d'outils
#0122 le 05-03-18 - Ajout pour utiliser ou pas les NOMs d'outils en APPEL à la place des valeurs géométriques d'outils

#0199 Le 16 12 10 - Ajout pour activer ou non l utilisation des origines par rotation
#0200 Le 05 03 08 - Ajout pour gerer les erreurs entre MC et le PST ex: G41 dans les cercles, taraudage sans le G84...
#0300 le 13 01 08 - Ajout Pour Gerer les num. prog. ISO FORMAT: F=Fraisage ou T=Tournage, Num d'article,- Indice plan,-
#           Num d'op,- Initiales Machine    ex: F016230-02-1-HE.H   **en commentaire** et le **PR0000---** en nom de fichier
#	  Le 16-06-22 - Passage en PP STANDARD 
#endregion
#endregion

#region reglages_PP switches
s_nom_machine_entete : "MACHINE: xxxxxxx"

# ----- dEgagements au changement d'outil, rotations d'axes et inspection de plaquettes
type_deg	: 1		# 1 = G28 G91 ... ; G90 				
					# 2 = G53 
					# 0 = G0 Z... ;  X... Y...	#VALEURS ABSOLU OPERATIONS MASTERCAM
					
S_macro_deg : "M130 (RET. PT CHANG. OUTIL)"				# NOM de la macro de dégagement si active			
# configuration des dEgagements
# --------------------------------  0=nom  1=Z  2=Z-X  3=Z-Y  4=Z-X-Y  5=Z-XY	6=MACRO_CN
deg_debut   = 1     				# Degagement au debut du prog 
deg_outil	= 6	    				# Degagement au changement d'outil          	          	
deg_4_axes 	= 1						# Degagement au changement de position en 4 axes 
									# 0 = VALEURS MC DE L'OPERATION 
deg_inspection_plaq = 3     		# Degagement l'outil lors de l'inspection de l'état de l'outil
deg_fin     = 3     				# Degagement en fin de programme
deg_apres_outil		= 1				# >0 = Affichage des dégagements apres l'appel de l'outil "sécurité" lors du démarrage à X outil 
	         
# en 3 axes
degageX    = -1						# Valeur de degagement en X pour l'appel d'outil 
degageY    = 200  					# "	Y "
degageZ    = -1  					# "	Z "

# en 4 axes	--> ENTRE 2 opérations		SI "deg_4_axes" = 0 valeur X/Y & Z = à la valeur SECURITE de l'opération MASTERCAM
degageX4   = -1 					# Valeur de degagement en X avant rotation
degageY4   = -1  					# "	Y "
degageZ4   = -1 					# "	Z " 

# 	SI "deg_inspection_plaq " = 0 valeur X/Y & Z = à la valeur SECURITE de l'opération MASTERCAM
deg_insp_X = -1 					# Valeur de degagement en X avant inspection de l'état de la plaquette 
deg_insp_Y = -1  					# "	Y " 
deg_insp_Z = -1						# "	Z " 

#------------------------------------------------------------------------------------------------------------------
Cycles_palpage_YN	= no$  	# activation ou pas de l'utilisation des cycles de palpages "BASICs" (en perCages)
change_nom  		= 0     # 1 = nomination des programmes avec un préfix "PF" + "numARTICLE" + "INDICE" + "CODE_CN"  = PF15662-A-2-HE.H ////	0 = NOM DANS MC	
output_z    		= yes$  # Output Z Min and Z Max des parcours (yes or no)
program_stop    	= 1     # Stop au changement d'outil 0=NON, 1=M00, 2=M01
entete_questions	= 0 	# 0 = pas d'entEte
                        	# 1 = entEte suivant OP MC TEXTE
                        	# 2 = Nouvelle entEte questions
                        	# 3 = Ancienne entEte questions
#Outils ----------------------------------------
Type_appel_outil	= 3		# 1 = NUMERO de l'outil 					"T1010...
							# 2 = NOM de l'outil 						"FRAISE D..."
							# 3 = VARIABLE suivie du NUMERO de l'outil 	"T#... (FR. CA. D=8.)
							
Type_infos_outil	= 4		# 1 = NOM de l'outil "texte NOM" --> strtool$
							# 2 = Infos géométrique réelle de l'outil
							# 3 = NOM MC de l'outil et Infos géométrique réelle de l'outil
							# 4 = NOM de l'outil "texte NOM" & Infos géométrique réelle de l'outil --> = 1 + 2
							
Position_info_outil = 1		# 1 = Affichage AVANT l'appel de l'outil
							#		Nxx T2 M6
							# 2 = Affichage APRES l'appel de l'outil														
#prEparation de l'outil SUIVANT
bldnxtool$  		= 0     # 0 = n'affiche pas la préparation de l'outil suivant
							# 1 = affiche
type_prep_outil  	= 0    	# 0 = Pas de prEparation du 1er outil
                     		# 1 = PrEparation A chaque outil (ptlchg$)
                     		# 2 = PrEparation A chaque outil et A LA FIN (peof)	
# Déchargement de l'outil en broche							
decharge_outil_fin	= 1		# 1 = affiche un "T0M6" à la fin											

lire_def_machine 	= 1   	# 1 = Lire les valeurs de la def machine / armoire --> AXES/ARCs ... 0 = suivant les données du PP 
#infos communes AVEC LECTURE DEFINITION de la CN 			et SWITCH sans lecture de la DEFINITION de la CN
useaxe      		: -9999 	# -9999 = mode AUTO (DEF MACHINE) -- (utiliser l'axe A/B 1=oui 0=non)
sens_A_B        	: 1     	# pour inverser les calculs de l'axe A/B -1
diviseur    		: -1    	# diviseur tourne autour de X=1-->A autour de Y=2-->B // DEF MACHINE=-1
Systeme_rot_plans	: 3 		# SystEme de gestion des différentes valeurs lors d'une rotation
								# 0 = pas de calculs --> origine gEnEralement au centre de la palette
								# 1 = calculs AUTO "G68" --> origine oU on veut
								# 2 = utilise le sous-programme O8000 pour calculer automatiquement les origines pour chaque face 
									# utilise_O8000 --> G54 au dEbut et ensuite G55 calculE, Exemple : G54 G90 B122.; M98 P8000 ...
									# Fichier contenant le O8000 à integrer dans la CN et valider
								# 3 = un origine par angle de rotation dEfini par l'opérateur --> G54,G55 ...
#
rot_AB_un_sens  	= 0			# 0126 sens AB 	0 = libre (en +/-) 	1 = SEULEMENT dans le sens + pour certaines CNs
bloque      		= 0     	# 1 pour Ecrire M10 M11 (blocage/dEblocage du diviseur)    : 0 pour ne pas ecrire M10 M11		

See_tool_time 		: yes$  	# affiche le temps pour chaque outil
See_total_time 		: yes$   	# affiche le temps pour le programme complet
affiche_groupe 		: no$   	# 0/no$ = pas d'affichage des groupes d'usinage, 1/yes$ = affichage
numcoment   		: 0     	# Numeroter les lignes de commentaire 0 = nom 1 = oui
info_corr   		: 0     	# afficher le type de correction
info_surep  		: 1     	# afficher les surepaisseurs xy et z
use_progno  		: 0     	# Ecrire le NC sous forme O0123.nc  = 1 ou TOTO.NC = 0
entete      		: 1     	# Poser les questions pour l'entete
Liste_outils		: yes$  	# A préviligier pour activer la liste d'outils au "tooltable$"  			
tooltable$  		: 1     	# creation liste outil en entete
								# Toujours ACTIVE pour lire d'autres infos depuis le PWRTT$
								# Output tool table  0=no, 1=before header, 2=after header
                    			# 3= Pre-read, call the pwrtt postblock
bloque      		: 0     	# pour ecrire M10 M11 (blocage diviseur)    :=0 pour ne pas ecrire M10 M11
outils_param 		: 0    		# 0051 pour Valider / dévalider l'affichage des outils en parametres
util_x_ori     		: 0  		# 0199 utiliser les origines par orientation 0 = NON, 1 = OUI
nom_outils_ENTETE 	= 0   		# 0121 utiliser ou pas les NOMs d'outils en ENTETE à la place des valeurs géométriques d'outils 1=NOMS 0=VALEURS OUTILS
ugv 				= -1		# si UGV = -1 --> non utilisé  0 = UTILISE
CN_textes 			= 1   		# Autorise les commentaires texte
Nom_porte_outil_entete = 1		# Affiche le nom du porte outil avec la liste des outils en entête, s'il y en a un
compteur_opErations    = 1  	# Affiche le compteur d'opérations --> ( OP.: 1 - 1/3 )

#divers
# ZONE de FORMULES  si : uniquement au dédut si = mise a jour systématique
#sub_level$  : 1          #Enable automatic subprogram support
#subprg$     : yes$
#extprg$     : yes$
#sextext$  "tool"
#mergesub$   : no$
no$         = 0
get_1004$   : 1     # Find gcode 1004 with getnextop?
rpd_typ_v7$ : 0     # Use Version 7 style contour flags?
getnextop$  : 1     # autorise la commant nextop nextccomp etc
spaces$     : 1     # nbr d'espace entre les mots
strtool_v7$ : 2     # autorise la lecture des commentaires de la bibiotheque outil
skp_lead_flgs$  : 1 # Do NOT use v9 style contour flags
ncldr$      : 20    # nbr de zero de queue utilisés pour la fonction "fleader"
ldrcode$    : 65
nobrk$      : no$   # ne pas décomposer en xy pui z les mouvements en rapid
cc_1013$    : 0     # pour connaitre cc dans appel outil
opcode$     : 1
gcode$      : -1
progname$   : 1  	# force le nom du nci en majuscule
Type_progno = 2		# 1 = "Oxxxx"	2 = ":xxxx"
#endregion

#region debug_tolerances
#--------------------------------------------------------------------------------------------------------
#   DEBUG POST PRO
bug1$     : 2       # 0 = pas voir le NC  1 = Visu du NC en lecture - 2 = visu du NC en edit
bug2$     : 60      # numéro de colonne pour l'affichage du bloc en cour de traitement
bug4$     : 1       # numero de ligne du nci traité
whatno$   : yes$    # Ignore whatline branches to plin1 etc.?
#--------------------------------------------------------------------------------------------------------
#   TOLERANCES POST PRO ...
linktolvar$    	: 1  #Associer les variables de tolérance X metrique au variable english
#linklvar$  	: 1  # UTILISE LES USECANDRILL POUR LES LCANDRILL
linkplnvar$    	: 0  #Associer les variables spécifiques plan Xy POUR TOUS LES PLAN YZ XZ
linklvar$      	: 1  #Associer les variables spécifiques X Tournage AU FRAISAGE UTILISE LES USECANDRIL POUR LES LCANDRILL
cant_tlchng$   	: 1  #Ignorer entrée de texte programmé au changement avec tlchng_aft?
newglobal$     	: 1  #Activer la vérification d'erreur pour les variables globales?
#endregion

#region valeurs_initiales
# valeurs init ---------------
z_min$     		: 999
z_tmin     		: 999
z_max$     		: -999
z_tmax     		: -999
increment_op 	: 0
longTexte 		: 0    	# 0026
incremental 	: 0     # init en Absolue
decalage 		: 0
erreur 			: 0
nbr_combi 		: 0
compt_axes_rot 	: 0
palette 		: 0
axeA     		: 999  	# Inint de A
axeA1_dep 		: -999999
old_axeA 		: 0    	# Init de old_axeA
nbrtour 		: 0     # Init du nombre de tour realise
tolquestion 	: 0     # Init de tolquestion
degage_ap_out 	: 1
rot_tlchg_zero  : 0
num 			: 0
old_op_id 		: -99999
palpeur   		: 0
palpage   		: 0
_scycle 		: 0
increment_op_outil 	: 1
#vtol$      	: 0.01
rotation_axe 	: -9999
rotation_A     	: -9999
rotation_B     	: -9999
write_ops    	: 0     #Write NC operation information (True/False)

Z_dir        	: 0     #Z Axis direction flag

rot_on_x     	: 1     #SET_BY_MD Default Rotary Axis Orientation
                     	#0 = Off (no rotary), 1 = About X, 2 = About Y, 3 = About Z
axis_label   	: 0     #Axis label - 1=X,2=Y,3=Z
rot_zero 		: 0    	#Rotary zero degree position
rot_dir			: 0  	#Rotary direction
rot_index    	: 0 	#Index or continuous
rot_angle    	: 0 	#Index step
rot_type     	: 0		#Rotary type
min_speed    	: 50 	#Minimum spindle speed
maxfrinv_m   	: 0		#Maximum feedrate - inverse time - metric - Minimum value from MD as this is inverse time
maxfrdeg     	: 0		#Maximum feedrate deg/min
maxfeedpm_m  	: 0		#Limit for feed in mm/min

# WORKPIECE variables - used to define the stock for FANUC graphics / simulation on control
stock_cyl_axis 	: 0     #Stock cylinder axis 0=X,1=Y,2=Z
stock_shape    	: 0     #Stock shape from toolpath group parameters. 0=Rectangular/Box, 1=Cylinder

srot_label 		: ""  	#Rotary Axis label (Generally A, B or C) - Not yet available.
s_axe_brut_cyl	: ""	#Axe du brut cylindrique

#temps
fr_rapid_mach   : 12000 # Machine Rapid feedrate
tlchg_time  	: 0  	# Tool Change Time (Minutes) OK VALEUR DANS LA CN
time_factor 	: 100  	# Cycle time percentage factor CORRECTION en %
tol       		: 0.5   # Tolerance for feed rates set to zero
Feed_time    	: 0     # Feed time
Rapide_time    	: 0     # Rapid time
Long       		: 0     # Length for calculation
Delta_X        	: 0     # Delta x
Delta_Y        	: 0     # Delta y
Delta_Z        	: 0     # Delta z
temps_4_axes	: 0		# Usin à plat =0, dégagements position = 1, usinages continus = 2
#endregion

#region affectations_valeurs
xp 			= xnci$
yp 			= ynci$
#zp			 = z 		# znci Z filetage fr d'après NCI
zp 			= znci$ 	# 0033 Pour 1ère position en 5x c.
xrp 		= xr$
yrp 		= yr$
zrp 		= zr$
xinc 		= xabs
yinc 		= yabs
zinc 		= zabs
axeA1_depi 	= axeA1_dep
axeAi 		= axeA    	# A absolue en substitution
A_posi 		= A_pos  	# A incremental en substitution
zdevi 		= zdev    	# Z pour continue substitutuion en INCREMENTAL
surep3d 	= surep
sub_trnsx$	: -99999
sub_trnsy$	: -99999
sub_trnsz$	: -99999
m7$        	: 999
m8$        	: 999
#endregion

#region formats
# - FORMATS DES VARIABLES
# --------------------------------------------------------------------------
# Format statements - n=non modale, l=leading(devant), t=trailing(derriEre), i=inc, d=delta
# --------------------------------------------------------------------------
fs  1  1.9lt    # Format avec toute la precision pour les variableS internes de mp
fs  2  1.3      # format d'affichage a 3 chifres max pour les variables affichées
fs  3  1.3n     # idem mais non modale
fs  4  1 0      # 1 chiffre mini avant virgule  pas de virgule pas de chiffre apres
fs  5  1 0n     # idem mais non modale
fs  6  4 0ln    # 4 chiffres avant pas de virgule pas de chiffre apres non modal force 0 de tete
fs  7  1 3t     # 1 chiffre mini avant virgule  pas de virgule 3 apres force 0 de queue non modal.
fs  8  1.3ln    # 1 chiffre avant la vigule met . 3 chiffres apres virgule non modal force 0 de tete
fs  9  1 0n     # pour liste outil
fs  10 1.3n     # pour liste outil
fs  11 1.3i     # force 1 chiffre avant virgule met . 3 chiffres apres virgule en incremental
fs  12 1.3ni
fs  13 3 0ln

fs  15 1.9l  
#endregion

#region formats_assignements
#------------------------------------------------------------------------------------------------------------------
#   AFFECTATION DES VARIABLES FLAG
fmt     4 numcoment     	# flag pour Numeroter les lignes de commentaire
fmt     1 CN_textes     	# flag pour textes
fmt     1 nbr_car       	# nombre de carracteres maxi dans les connemtaires
fmt     1 old_comm_cnt  	# nombre d'enregistrement dans buffeur commentaires
fmt     1 info_corr     	# flag pour correction outil
fmt     1 info_surep    	# flag pour surep
fmt     1 old_spaces    	# memo de spaces
fmt     1 old_omitseq   	# memo de omiseq
fmt     4 entete        	# Variable utilisée pour générer l'entete
fmt     4 numerote      	# Variable numerote utilisée pour numéroter ou non les lignes
fmt     4 nom_outils_ENTETE #0121
fmt     4 Type_appel_outil  #0122
fmt 	3 entete_     
fmt 	3 entete_questions
fmt 	2 change_nom   
fmt 	2 affiche_groupe 	#0045
fmt     4 liste_textes
fmt      	4 deg_debut
fmt      	4 deg_outil
fmt      	4 deg_4_axes
fmt      	4 deg_fin
fmt      	4 deg_inspection_plaq
fmt  "X"    4 degageX
fmt  "Y"    4 degageY
fmt  "Z"    4 degageZ
fmt  "X"    4 degageX4
fmt  "Y"    4 degageY4
fmt  "Z"    4 degageZ4
fmt  "X"    4 deg_insp_X
fmt  "Y"    4 deg_insp_Y
fmt  "Z"    4 deg_insp_Z
fmt      	4 deg_apres_outil
fmt			4 type_deg
fmt			4 old_type_deg	#memo old_deg 
#compteurs ops
fmt  "- " 	2 increment_op
fmt  "/" 	4 nbr_opErations
fmt         4 increment_op_outil         
fmt         4 num_op_outil            
fmt         4 old_op_id	# Memo de l'operation
#------------------------------------------------------------------------------------------------------------------
#   AFFECTATION DES VARIABLES MP
fmt     	1 gcode$        # Gcode pst
fmt     	1 x$        	# XYZ pst
fmt     	1 y$
fmt     	1 z$
fmt     	1 xr$       	# XYZ rapide pst
fmt     	1 yr$
fmt     	1 zr$
fmt     	1 i$        	# IJK centre des arcs pst
fmt     	1 j$
fmt     	1 k$
fmt     	1 arcrad$   	# Valeur du rayon pst
fmt     	1 t$        	# numéro d'outil pst
fmt     	1 next_tool$    # numéro suivant pst
fmt         1 nom_outil     	#0121
fmt     	1 first_tool$   # numéro du premier outil pst
fmt     	1 tloffno$  	# Correcteur de Diamentre pst
fmt     	1 tlngno$   	# Correcteur de Longueur pst
fmt     	1 tldia$    	# diamétre outil pst
fmt     	1 cc_computer$  # correction ordinateur
fmt     	1 cc_pos$   	# correction Armoire
fmt     	1 fr$       	# avance pst
fmt     	1 fr_pos$   	# AVANCE TRAVAIL au point pst
fmt     	1 ss$       	# vitesse de broche pst
fmt  "N" 	4 n$       		# numérotetion des blocs a chaque ligne
fmt  "O" 	6 progno$  		# Numéro de programme pst
fmt  ":" 	4 progno_  		# Numéro de programme pst
fmt  "G" 	4 cc$      		# valeur de la correction dans NCI
fmt     	1 coolant$  	# Lubrification 0 1 2 3 arret axe buse les deux
fmt     	1 mi2$      	# mi2 utilise pour degagement en Z avant rotation plateau
fmt     	1 mi3$      	# mi3 utilise pour ne pa rebloquer le plateau
fmt     	1 ugv       	# flag pour ecriture de G8 P1 ou G8 P0
fmt     	1 op_id$    	# Numero de l'operation du gestionaire PST
#------------------- PERCAGES ------------------------------------------
fmt    		1 depth$     	# profondeur percage pst
fmt    		1 refht$     	# Garde pour percage pst
fmt    		1 initht$    	# Plan de sécu percage pst
fmt    		1 frplunge$  	# Avance percage pst
fmt    		1 dwell$     	# Tempo pour percage pst
fmt  "D" 	3 peckclr$  	# garde d'approche rapide dans les débourrage pst
fmt  "Q" 	3 peck1$   		# Pas Z du premier débourrage pst
fmt  "Q" 	3 peck2$    	# Pas Z des débourrages suivants
fmt  "Q" 	3 shftdrl$  	# valeur de retrait du grain de la barre d'allsage
fmt  "Q" 	3 retr$     	# valeur de remonté relative en rapide dans les debourages en G1 G0
#0072---------------- PERCAGE 4 AXES *CYCLE CONTINU*-----------------------
fmt    		1 rotdia$    	# diam de sbstitution
fmt    		1 rotaxis$   	# type de substitution
fmt  "v" 	1 v$
fmt  "w" 	1 w$
fmt  		4 HV
fmt  		4 old_HV
fmt "DR"	4 drill4axes
fmt "X" 	2 tox4$
fmt "Y" 	2 toy4$
fmt "Z" 	2 toz4$
fmt "VX" 	1 vx
fmt "VY" 	1 vy
fmt "VZ" 	1 vz
fmt "VX2_" 	1 vx2
fmt "VX2_" 	1 vx2_h
fmt "VY2_" 	1 vy2
fmt "VZ2_" 	1 vz2
fmt "Z"		2 zinitht
fmt "VEC" 	1 longvec
fmt "OX" 	2 old_tox4
fmt "OY" 	2 old_toy4
fmt "OZ" 	2 old_toz4

fmt  "X" 	8 xrp
fmt  "Y" 	8 yrp
fmt  "Z" 	8 zrp
fmt  "X" 	8 xp
fmt  "Y" 	8 yp
fmt  "Z" 	8 zp

fmt  "X" 	8 x_h
fmt  "Z" 	8 y_h
fmt  "Y" 	8 z_h
fmt  "X" 	8 xr_h
fmt  "Z" 	8 yr_h
fmt  "Y" 	8 zr_h

fmt  "X" 	1 old_x_h
fmt  "Z" 	1 old_y_h
fmt  "Y" 	1 old_z_h
fmt  "Y" 	2 zinitht_h
#------------------- SOUS PROG ------------------------------------------
fmt     	1 sub_prg_no$   # Numéro de sous-programe interne en Z
fmt     	1 main_prg_no$  # Numéro de sous prog interne en transformation
fmt  "X" 	2 sub_trnsx$	# decalage en X pour G52 en usinage transformer translation
fmt  "Y" 	2 sub_trnsy$	# decalage en Y pour G52 en usinage transformer translation
fmt  "Z" 	2 sub_trnsz$   	# decalage en Z pour G52 en usinage transformer translation
#------------------------------------------------------------------------------------------------------------------
#   AFFECTATION DES VARIABLES NC
#------------------- POSITIONS ------------------------------------------
fmt  "X" 2 xabs         # XYZ en Absolue pour NC
fmt  "Y" 2 yabs
fmt  "Z" 2 zabs

fmt  "X" 11 xinc        # XYZ en incremental pour NC
fmt  "Y" 11 yinc
fmt  "Z" 11 zinc

fmt "px" 2 old_x        # ancien XYZ du NC
fmt "py" 2 old_y
fmt "pz" 2 old_z

fmt  "I" 2 iabs         # IJK centre des arcs pour NC en G90
fmt  "J" 2 jabs
fmt  "K" 2 kabs

fmt  "I" 2 iinc         # ijk centre des arcs pour NC en G91
fmt  "J" 2 jinc
fmt  "K" 2 kinc
fmt  "R" 3 rayon        # valeur de rayon de l'arc pour NC
#------------------- OUTILS ------------------------------------------
fmt  "T" 	5 outil            	# numéro d'outil appele pour NC
fmt  "T" 	5 outil_suivant    	# numéro de l'outil suivant pour NC
fmt      	5 nbroutil          # nombre d'outil du changeur de la def machine
fmt  "D" 	4 correcteur_D     	# Correcteur de Diametre pour NC
fmt      	4 correcteur_H      # Correcteur de Longueur pour NC
fmt  "H" 	4 old_correcteur_H
fmt  		2 old_t

#0050
fmt     	5 outil_param               #0050
fmt     	5 outil_suiv_param          #0050
fmt     	4 correcteur_D_param        #0050
fmt     	4 old_correcteur_D_param    #0050
fmt     	4 old_correcteur_D          #0050
fmt     	4 correcteur_H_param        #0050
#
fmt  "DIAM " 	2 diam_outil   	# diamétre outil pour NC
fmt  "F" 		4 avance       	# avance pour NC

fmt  "S" 		4 ssa          	# Vitesse de broche affiché
#ssa = abs(ss$)         		#0100 vitesse de broche en valeur absolue
fmt  "S" 		4 _ssa         	#0091
fmt  "S" 		4 old_ss       	# memo de la vitesse de broche précédente
fmt     		4 lubrif    	# gestion de la lubrification pour NC
fmt     		4 old_lubrif    # gestion de la lubrification pour NC
fmt     		3 type_comp     # type de correction
# -------------------------LECTURE DES PARAMETRES DE SUREP ET DE TYPE DE CORRECTION--------------------------------------------
fmt "SUREP. XY" 8 surep    		# Surep au rayon
fmt "SUREP. Z"  8 surepl    	# Surep en Z
fmt "SUREP. 3D" 8 surep3d  		# Surep en usinage 3D
fmt  			8 old_surep    	# Surep au rayon
fmt  			8 old_surepl   	# Surep en Z
fmt  			8 old_surep3d  	# Surep en usinage 3D
fmt "SUREP.XY 3D = " 	8 surep_OP3D_XY
fmt "SUREP.Z 3D = "  	8 surep_OP3D_Z
#
fmt "R" 		2 result
fmt     		5 prognosav     # Mémo du Numéro de programe
fmt     		1 debut         # flag pour debut de programme
fmt 			5 degage_ap_out 	#0048
fmt 			4 rot_tlchg_zero  	#0049

fmt  "X" 		2 x_
fmt  "Y" 		2 y_
fmt  "Z" 		2 z_
#------------------- NUMEROTATION ------------------------------------------
fmt  "N" 		4 num          	# numero de bloc sur ligne appel outil si pas de numerotation des lignes
fmt    			1 last_op_id 	# Derniere operation
#------------------- ORIGINES D'USINAGE ------------------------------------------
fmt "G" 		4 origine      	# origine d'usinage G54 a G59 pour NC
fmt "G54.1 P"  	4 originebis    # origine d'usinage G54.1 P1 à G54.1 P49 pour NC
fmt "G" 		4 old_origine   # Stocage de la valeur precedente de origine d'usinage
fmt    			4 workofs$           
fmt    			4 oldworkofs         
fmt "G" 		4 g_wcs         # WCS G address
fmt " " 		2 mr4$ 
#0079
fmt 			2 Val_origine_Z
fmt 			2 Val_origine_Y
fmt 			2 Val_origine_X
fmt 			2 Old_Val_origine_Z
fmt 			2 Old_Val_origine_Y
fmt 			2 Old_Val_origine_X                        
#---------------------- SOUS PROG ------------------------------------
fmt "inc" 	1 incremental     	# mode incremental ou Absolue
fmt     	1 memo_incremental  # memeo du mode incremental ou Absolue
fmt "O" 	6 debsousprog      	# Numéro du premier sous programe
fmt "#100="	4 nprincipal  		# memo du numero de ligne du prog principal
fmt "P" 	5 subprognum       	# numero du sous-programe pour l'appel
fmt "O" 	4 numsubprog       	# Numéro entete de sous-programme
fmt ":" 	4 numsubprog_       # Numéro entete de sous-programme
fmt     	5 nomsubprog        # Numéro n'entete de sous-programe
fmt "DEC" 	2 decalage       	# flag pour savoir si on a ecrit un G52
fmt     	4 Type_progno
#------------------- PERCAGES/PALPAGES ------------------------------------------
fmt  "Z" 	2 prof_abs  			# profondeur de percage en ABS
fmt  "Z" 	2 prof_inc    			# profondeur de percage en INC
fmt  "R" 	2 garde_abs 			# Garde pour percage en ABS
fmt  "R" 	2 garde_inc   			# Garde pour percage en INC
fmt  "F" 	3 pas      			# valeur calculé du pas pour taraudage rigide
fmt     	2 typcycle  		# variable mise a 1 lors des percages pour afficher l'intitulé du cycle
#cycle de percage profond
fmt "F" 9 f_p_profond   #0091
fmt "Z" 2 z_dep_p_prof  #0091
fmt "Z" 2 depth_        #0091
fmt "Z" 2 tosz_         #0091
fmt "Z" 2 initht_       #0091
fmt "Z" 2 refht_        #0091
fmt     2 drlcst7       #0091
#palpages
#fmt     3 var_palp  	#0047
fmt  "U" 2 u_palpage    #0047
fmt  "V" 2 v_palpage
fmt  "X" 2 x_palpage
fmt  "Y" 2 y_palpage
fmt  "Z" 2 z_palpage
fmt  "W" 4 w_palpage
fmt  "D" 2 d_palpage
fmt  "A" 2 a_palpage
fmt  "B" 2 b_palpage
fmt  "K" 2 k_palpage
fmt      4 palpage
fmt      4 _scycle
fmt  "F" 3 err_pas  	#0200
fmt  "P" 4 tempo
#-------------------- Axe A  ------------------------------------------
fmt  		3 useaxe       	# flag pour utiliser le 4eme axe
fmt  "B" 	2 axeA         	# POSITION pour rotation plateau en ABS
fmt  "B"   	11 axeAi       	# POSITION pour rotation plateau en INCREMENTAL
fmt  "S" 	2 sens_A_B     	# pour inverser le sens de l'axe
fmt  "A" 	2 A_pos        	# rotation pour continue substitutuion en ABS
fmt  "A"   	11 A_posi      	# rotation pour continue substitutuion en INCREMENTAL
fmt     	1 bloque        # pour gestion M10 M11
fmt     	9 outils_param  #0050
fmt     	9 outil_paramT1 #0050
fmt  "Z" 	2 zdev         	# Z pour continue substitutuion en ABS
fmt  "Z" 	11 zdevi       	# Z pour continue substitutuion en INCREMENTAL
fmt     	1 old_rotaxis   # memo de rotaxis$
fmt "A"  	2 old_axeA     	# memo de l ancien A
fmt "Sens" 	2 sensA      	# sens de rotation de A
fmt  "A" 	2 epsi         	# Delta de rotation de l'axe A
fmt  "Ntr"  2 nbrtour      	# nombre de tour realise
fmt     	3 tolquestion   # flag utilisé pour poser la question de tolérance de developpé q'une fois
fmt  "A" 	1 axeA_cont
fmt  "A" 	1 axeA1
fmt  "A" 	1 axeA2
fmt  "X" 	1 new_x
fmt  "Y" 	1 new_y
fmt  "Z" 	1 new_z
fmt  "A" 	1 delta_axeA1
fmt  "A" 	1 axeA1_dep
fmt  "A" 	11 axeA1_depi
fmt  "A" 	1 old_axeA1
fmt     	1 debutpmx  	# flag debut prog pmx
fmt     	9 util_x_ori    # 0199

fmt 	2   pas_filetage    #0090
#0085 -----------------------------------------------
fmt  "X" 2 x_tmin # Total x_min
fmt  "X" 2 x_tmax # Total x_max
fmt  "Y" 2 y_tmin # Total y_min
fmt  "Y" 2 y_tmax # Total y_max
fmt  "Z" 2 z_tmin # Total z_min
fmt  "Z" 2 z_tmax # Total z_max
fmt  "Z" 2 min_depth# Tool z_min
fmt  "Z" 2 max_depth# Tool z_max
# Parametres de DEF MACHINE-------------------------------
fmt    1 type_composant     # type de composant
fmt    1 compt_axes_rot     # compteur d'axes rotatif
fmt    3 erreur             # numero d'erreur
fmt    3 testerreur4        # flag pour erreur 4
fmt    1 diviseur           # Axe de l'axe rotatif
fmt    1 old_syncaxis       # memo du numero de combinaison d'axes
fmt    1 nbr_combi          # Nombre de combinaison d'axes
fmt    1 palette            # flag pour machine avec palette
fmt    1 fmaxi              # avance maxi de la machine
fmt    1 fmini              # avance mini de la machine
fmt    1 nbr_outil          # nombre d'outils maxi
# Axes Pwrtt$ --> lecture avant traitement parcours
fmt    1 rotation_axe
fmt    1 rotation_A
fmt    1 rotation_B
# time
fmt   15 long_feed        			# Feed cut length
fmt   15 long_rapide    			# Rapid length
fmt   15 total_part_time    		# Total part time
fmt "time_OP :" 	15 Tot_time_op 	# Total operation time
fmt "total_time :"  15 time_total	# Total time programme
fmt "OPs_time :"  	15 time_OPs		# Time operations
fmt    4 Time_hrs        			# Time in hours
fmt    4 Time_min        			# Time in minutes
fmt    4 Time_sec        			# Time in seconds
#fmt    8 avance_time      			# Feedrate
fmt   13 pas_time					# taraudage
#time
fmt "périmètre"    	15 perimetre
fmt "Delta_X"  		15 Delta_X
fmt "Delta_Y"  		15 Delta_Y
fmt "Delta_Z"  		15 Delta_Z
fmt    	  			3 division 
#endregion

#region Buffer	
# --------------------------------------------------------------------------
#0085 Buffer 5 - Min / Max
# --------------------------------------------------------------------------
b5_gcode 	: 0
b5_zmin  	: 0
b5_zmax  	: 0
rc5     	: 2
wc5     	: 1
size5   	: 0
fbuf 5 0 3 0 0          #Min / Max
#endregion

#region strings
#--------- DEFINITION DES STRING -----------------------
svide 				: ""       	# STRING Vide utilisée pour faire des comparaisons
space 				: " "       # STRING pour forcer un espace
sdcom				: "("     	# STRING de debut de commentaire
sfcom   			: ")"     	# STRING de fin de commentaire
sg43 				: "G43"  	# STRING de prise de correction en Z
snomgroupe_op 		: ""   		# STRING du nom du groupe d'opération
snomgroupe_op_old 	: ""   		# STRING de l'ancien nom du groupe d'opération
s_machine 			: ""   		# STRING du nom de la machine ****VALEUR DANS MC****
spalette 			: "PALETTE"	# STRING du nom palette
s_axe_rot_label 	: ""     	# Nom de l'axe rotatif (ABC)
s_axe_rot_A     	: "A"
s_axe_rot_B     	: "B"
scomentsprog 		: ""    	# STRING du commentaire pour le titre du sous prog
sguillemet 			: ""  		#0040
Sold_snom_RUD 		: ""   		#0080
snom_RUD 			: ""
sinfo_origine 		: ""
sguillemet 			= no2asc(34) #0040 
#endregion

#region questions_NOUVEAU_ANCIEN
#region NOUVEAU
# QUESTIONS ENTETE ----------------------------------------------------
svide2 : ""
# A modifier si besoin
s_com_open : "("    # Caractere de DEBUT de commentaire
s_com_close : ")"	# Caractere de FIN de commentaire

# Questions UNIQUEMENT des STRINGS NON VIDES !!
s_text_question_1 : "CLIENT"
s_text_question_2 : "DESIGNATION PIECE"
s_text_question_3 : "NUMERO DU PLAN"
s_text_question_4 : "INDICE DU PLAN"
s_text_question_5 : "NUMERO D'OPERATION"
s_text_question_6 : "ORIGINE PIECE"
s_text_question_7 : "PHASE"
s_text_question_8 : "COMMENTAIRE"
s_text_question_9 : "X :"
s_text_question_10 : "TOTO"
s_text_question_11 : ""
s_text_question_12 : ""
s_text_question_13 : ""
s_text_question_14 : ""
s_text_question_15 : ""
s_text_question_16 : ""
s_text_question_17 : ""
s_text_question_18 : "Numero de programme //snouv_nom// existant, ENTREZ UN NOUVEAU NUMERO"
s_text_question_19 : ""	# exemple : "TOLERANCE CORDALE POUR DEVELOPPE"    #plus utilisé
s_text_question_20 : "VEUILLEZ ENTRER UN NUMERO DE PROGRAMME"
#----
s_question_1 : s_text_question_1
s_question_2 : s_text_question_2
s_question_3 : s_text_question_3
s_question_4 : s_text_question_4
s_question_5 : s_text_question_5
s_question_6 : s_text_question_6
s_question_7 : s_text_question_7
s_question_8 : s_text_question_8
s_question_9 : s_text_question_9
s_question_10 : s_text_question_10
s_question_11 : s_text_question_11
s_question_12 : s_text_question_12
s_question_13 : s_text_question_13
s_question_14 : s_text_question_14
s_question_15 : s_text_question_15
s_question_16 : s_text_question_16
s_question_17 : s_text_question_17
s_question_18 : s_text_question_18
s_question_19 : s_text_question_19
s_question_20 : s_text_question_20

#----
fq 1 s_question_1 "//s_text_question_1//"
fq 2 s_question_2 "//s_text_question_2//"
fq 3 s_question_3 "//s_text_question_3//"
fq 4 s_question_4 "//s_text_question_4//"
fq 5 s_question_5 "//s_text_question_5//"
fq 6 s_question_6 "//s_text_question_6//"
fq 7 s_question_7 "//s_text_question_7//"
fq 8 s_question_8 "//s_text_question_8//"
fq 9 s_question_9 "//s_text_question_9//"
fq 10 s_question_10 "//s_text_question_10//"
fq 11 s_question_11 "//s_text_question_11//"
fq 12 s_question_12 "//s_text_question_12//"
fq 13 s_question_13 "//s_text_question_13//"
fq 14 s_question_14 "//s_text_question_14//"
fq 15 s_question_15 "//s_text_question_15//"
fq 16 s_question_16 "//s_text_question_16//"
fq 17 s_question_17 "//s_text_question_17//"
fq 18 s_question_18 "//s_text_question_18//"
fq 19 s_question_19 "//s_text_question_19//"
fq 20 Var_2_question "//s_text_question_20//"
#
#fq 25 Var_2_question "Numero de programme //snouv_nom// existant, ENTREZ UN NOUVEAU NUMERO"
# Nombre de questions jusqu'a  25 maxi

# ICI Questions avec valeurs numériques
fmt 2 Var_1_question
fmt 2 Var_2_question
Var_1_question : -1
Var_2_question : 1
#...

p_questions_entete
    # A enrichir si besoin --> apres Q13
    if s_text_question_1 <> svide2, q1
    if s_text_question_2 <> svide2, q2
    if s_text_question_3 <> svide2, q3
    if s_text_question_4 <> svide2, q4
    if s_text_question_5 <> svide2, q5
    if s_text_question_6 <> svide2, q6
    if s_text_question_7 <> svide2, q7
    if s_text_question_8 <> svide2, q8
    if s_text_question_9 <> svide2, q9
    if s_text_question_10 <> svide2, q10
    if s_text_question_11 <> svide2, q11
    if s_text_question_12 <> svide2, q12
    if s_text_question_13 <> svide2, q13

    s_question_1 = ucase(s_question_1)
    s_question_2 = ucase(s_question_2)
    s_question_3 = ucase(s_question_3)
    s_question_4 = ucase(s_question_4)
    s_question_5 = ucase(s_question_5)
    s_question_6 = ucase(s_question_6)
    s_question_7 = ucase(s_question_7)
    s_question_8 = ucase(s_question_8)
    s_question_9 = ucase(s_question_9)
    s_question_10 = ucase(s_question_10)
    s_question_11 = ucase(s_question_11)
    s_question_12 = ucase(s_question_12)
    s_question_13 = ucase(s_question_13)

    # Pour toute string a convertir en valeur numerique --> faire la meme chose pour d'autres si besoin
	#Var_1_question = rpar(s_question_19, 1)    # convertir la valeur texte en valeur numerique
    Var_2_question = rpar(s_question_20, 1)    # convertir la valeur texte en valeur numerique

    schange_nom_fichier = s_question_20    # dans le "Pbloc" --> "pnom_nc" peut-etre modifier le nom de la string --> test si fichier existant

    spathnc$ = ucase(spathnc$)
    stck_matl$ = ucase(stck_matl$)
    snamenc$ = ucase(snamenc$)

    spaces$ = 0
    #s_com_open, "DATE LE ", date$," A ", time$, s_com_close, e$
    #s_com_open, "DESSIN MASTERCAM - ", smcname$, s_com_close, e$
    #s_com_open, "NC FILE - ", *spathnc$, *snamenc$, *sextnc$, s_com_close, e$
    #s_com_open, "MATIERE - ", *stck_matl$, s_com_close, e$
    #s_com_open, "NOM DU PROGRAMME - ", sprogname$, s_com_close, e$
    #n$, " ", e$
    spaces$ = 1
    if s_text_question_1 <> s_question_1, n$, s_com_open, s_text_question_1, "-", s_question_1, s_com_close, e$, longTexte = 1
    if s_text_question_2 <> s_question_2, n$, s_com_open, s_text_question_2, "-", s_question_2, s_com_close, e$, longTexte = 1
    if s_text_question_3 <> s_question_3, n$, s_com_open, s_text_question_3, "-", s_question_3, s_com_close, e$, longTexte = 1
    if s_text_question_4 <> s_question_4, n$, s_com_open, s_text_question_4, "-", s_question_4, s_com_close, e$, longTexte = 1
    if s_text_question_5 <> s_question_5, n$, s_com_open, s_text_question_5, "-", s_question_5, s_com_close, e$, longTexte = 1
    if s_text_question_6 <> s_question_6, n$, s_com_open, s_text_question_6, "-", s_question_6, s_com_close, e$, longTexte = 1
    if s_text_question_7 <> s_question_7, n$, s_com_open, s_text_question_7, "-", s_question_7, s_com_close, e$, longTexte = 1
    if s_text_question_8 <> s_question_8, n$, s_com_open, s_text_question_8, "-", s_question_8, s_com_close, e$, longTexte = 1
    if s_text_question_9 <> s_question_9, n$, s_com_open, s_text_question_9, "-", s_question_9, s_com_close, e$, longTexte = 1
    if s_text_question_10 <> s_question_10, n$, s_com_open, s_text_question_10, "-", s_question_10, s_com_close, e$, longTexte = 1
    if s_text_question_11 <> s_question_11, n$, s_com_open, s_text_question_11, "-", s_question_11, s_com_close, e$, longTexte = 1
    if s_text_question_12 <> s_question_12, n$, s_com_open, s_text_question_12, "-", s_question_12, s_com_close, e$, longTexte = 1
    if s_text_question_13 <> s_question_13, n$, s_com_open, s_text_question_13, "-", s_question_13, s_com_close, e$, longTexte = 1
    #n$, s_com_open, "*****************************", s_com_close, e$

#endregion
#region ANCIEN
#  ----------QUESTIONS------------------
spiece 		: ""
snumplan 	: ""
sindiceplan : ""
squi 		: ""
sclient 	: ""
sorx 		: ""
sory		: ""
sorz 		: ""
sor_A_B 	: ""
sorc 		: ""
remplace 	: 1
use_axeA 	: 0

fmt 2 remplace

sclient = ucase(sclient)
spiece = ucase(spiece)
snumplan = ucase(snumplan)
sindiceplan = ucase(sindiceplan)
sorx = ucase(sorx)
sory = ucase(sory)
sorz = ucase(sorz)
sor_A_B = ucase(sor_A_B)

#fq 1 spiece "Nom de la piece"
#fq 2 snumplan "Numero du plan"
#fq 3 squi "Nom du programmeur"
#fq 4 sclient "Nom du client"
#fq 5 sorx "Origine en X"
#fq 6 sory "Origine en Y"
#fq 7 sorz "Origine en Z"
#fq 8 sor_A_B "Origine en A"
#fq 9 sorc "Origine en C"
#fq 10 schange_nom_fichier "Numéro de programme //snouv_nom// existant, ENTREZ UN NOUVEAU NUMERO"#0030 progno
#fq 11 remplace "Numéro de programme //snouv_nom// existant, LE REMPLACER ?      0 pour NON - 1 pour OUI"#0030
#fq 12 use_axeA "UTILISER L'AXE A (0=NON 1=OUI)"
#fq 13 sindiceplan "Indice du plan"
#fq 14 useaxe "(pour OP modif) UTILISER L'AXE A ?  0 pour NON 1 pour OUI"
#fq 15 vtol$    "TOLERANCE CORDALE POUR DEVELOPPE"    #plus utilisé
#endregion
#endregion

#region tableaux
#--------- DEFINITION DES TABLEAUX DE STRING -----------------------
# erreurs
serr0   : "err0"
serr1   : "ERREUR - LA FONCTION Ecriture de l'information CN d'opération DOIT ETRE VALIDE DANS LA DEFINITION D'ARMOIRE"
serr2   : "ERREUR - CE POST PRO NE SUPPORTE Q'UN SEUL AXE ROTATIF - VERIFIER LA DEF MACHINE ET LA COMBINAISON D'AXE"
serr3   : "ERREUR - CE POST PRO NE SUPPORTE Q'UNE SEULE COMBINAISON D'AXE PAR PROGRAMME - VERIFIER LA COMBINAISON D'AXE DES OPERATIONS"
serreur : ""
fstrsel serr0 erreur serreur 4 -1
#-------------------------------------------------------
# Mode Absolue ou incremental
sinc00  : "G90"       # Mode Absolue
sinc01  : "G91"       # Mode incremental
sinc02 	: ""
sinc_abs : ""
fstrsel sinc00 incremental sinc_abs 3 -1
#-------------------------------------------------------
# Affectation de G0 ... dans sgcode en fonction du GCODE
sg00    : "G0"       # Rapide
sg01    : "G1"       # travail
sg02    : "G2"       # arc horaire
sg03    : "G3"       # arc trigo
sq04    : "G4"       # tempo
sg05    : "G80"      # annulation Cycle Fixes
sgcode 	: ""
fstrsel  sg00 gcode$ sgcode 6 -1
#-------------------------------------------------------
# Affectation des plans d'usinage 
spl00   : "G17"     # plan XY
spl01   : "G19"     # plan YZ
spl02   : "G18"     # plan XZ
spl03 	: ""
splcode : ""
fstrsel  spl00 plane$ splcode 4 -1
#-------------------------------------------------------
# Blocage déblocage 4ieme Axe
sblo0 	: ""           # pour pas de blocage ni deblocage
sblo1   : "M10"   # blocage axe A
sblo2   : "M11"   # déblocage axe A
sblo3 	: ""           # pour Frein axe A
sbloque : ""
fstrsel sblo0 bloque sbloque 4 -1
#-------------------------------------------------------
# Rotation broche
sm_00    : "M4"
sm_01    : "M5"
sm_02    : "M3"
sm_03    : "M14"
sm_04    : "M15"
sm_05    : "M13"
sm_06    : "M24"
sm_07    : "M25"
sm_08    : "M23"
sm_09    : "M34"
sm_10    : "M35"
sm_11    : "M33"
spdlon 	: ""
spdlsel = fsg3(ss$)
#spdlsel = fsg3(ss)+(coolant*3)
fstrsel  sm_00 spdlsel spdlon 12 -1
#-------------------------------------------------------
# Table de l'affichage du type de corection
stc0   : "CORRECTION AUCUNE"
stc1   : "CORRECTION ARMOIRE DROITE"
stc2   : "CORRECTION ARMOIRE GAUCHE"
stc3   : "CORRECTION ORDINATEUR DROITE"
stc4   : "CORRECTION AUCUNE"
stc5   : "CORRECTION USURE DROITE"
stc6   : "CORRECTION USURE GAUCHE"
stc7   : "CORRECTION USURE INVERSE DROITE"
stc8   : "CORRECTION USURE INVERSE GAUCHE"
stype_comp : ""
fstrsel  stc0 type_comp stype_comp 9 -1
#-------------------------------------------------------
#Drill variables
drlgsel     :  -1   #Drill Select Initialize
drillref    : 0     #Select drill reference
peckacel$   : 0     #Fractional percent to reduce peck2 when usecan.. : no
drlgcode    : 0     #Save Gcode in drill   
sav_dgcode  : 0     #Drill gcode saved 
# Canned drill cycle string select
sg81    G81     #drill      - no dwell 
sg81d   G82     #drill      - with dwell 
sg83    G83     #peck drill - no dwell 
sg83d   G83     #peck drill - with dwell 
sg73    G73     #chip break - no dwell 
sg73d   G73     #chip break - with dwell 
sg84    G84     #tap        - right hand
sg84d   G74     #tap        - left hand
sg85    G85     #bore #1    - no dwell 
sg85d   G89     #bore #1    - with dwell 
sg86    G86     #bore #2    - no dwell 
sg86d   G86     #bore #2    - with dwell 
sgm1    G76     #misc #1    - no dwell
sgm1d   G76     #misc #1    - with dwell
sgm2    G81     #misc #2    - no dwell
sgm2d   G82     #misc #2    - with dwell
sgdrill         #Target for string

fstrsel sg81 drlgsel sgdrill 16 -1
#-------------------------------------------------------
# Reference dEpart de perCages
sg98    : "G98"      #Reference INIT/SECU
sg99    : "G99"      #Reference DEPART
sgdrlref : ""        

fstrsel sg98 drillref sgdrlref 2 -1
#-------------------------------------------------------
#   Tables de parametres
# POUR GERER CES PARAMETRES EN VX IL FAUT VALIDER L ECRITURE DANS LA DEF ARMOIRE
# DANS FICHIERS - ECRITURE DE L'INFO CN D'OPERATION
# --------------------------------------------------------------------------
fprmtbl 1	5          #3 lecture des parametres de surep pour contour et 3D
    10010	surep      		# surep R
    10068	surepl     		# surep Z
    10100	_scycle    		# 0047
	12665	surep_OP3D_XY 	#= rpar(sparameter$, 1) 
	12666	surep_OP3D_Z 	#= rpar(sparameter$, 1) 

fprmtbl 2	1          # lecture des parametres de surep pour surfacage
    12068  	surepl       	# surep en Z

fprmtbl 19000   2    #Table Number, Size
    19133   stock_shape     #0=RECTANG. 1=CYLIND. 2=SOLIDE 3=FICHIER STL
    19135   stock_cyl_axis  #Stock cylinder axis 0=X,1=Y,2=Z
#endregion

#region commentaires
#------------------- GESTION DES COMMENTAIRES ---------------------------------------
s_m0	: "M0"             #0053
fmt   	3  posi_M_zero

pcomment$   # Gestion des commentaires dans le prog
    #if entete = 0, pcomment2   # commentaires des usinages
    #else,      pcomment3   # commentaires d'entete de prog
    pcomment2

#pcomment_end$  # post traitement des commentaires
    #if entete = 1, comm_cnt$ = old_comm_cnt            		# pour pouvoir relire les commentaires apres appel de comment dans pheader

pcomment2       #Affichage des commentaire des usinages
    scomm$ = ucase (scomm$)                             		# focer en majuscules
    scomentsprog = svide                                		# mise a zero du commentaire de sous prog
    if CN_textes <> 0, [
        spaces$ = 0                             				# suprimer les espaces
        if numcoment = 0, omitseq$ = 1                      	# si pas de numero de bloc pour commentaires enlever les numeros de bloc
        if debut = 1, [
            #if gcode$ = 1051, n$, sdcom, scomm$, sfcom, e$    	# Nom Machine
            #if gcode$ = 1053, n$, sdcom, scomm$, sfcom, e$  	# Nom du Groupe Machine
            #if gcode$ = 1052, n$, sdcom, scomm$, sfcom, e$  	# Commentaire de groupe Machine
            #if gcode$ = 1054, n$, sdcom, scomm$, sfcom, e$     # Descripteur de fichier
            ]
        if gcode$ = 1005, n$, sdcom, scomm$, sfcom, e$      	# Usinage commentaire - en commentaire
        #if gcode$ = 1006, n$, scomm$, e$                   	#0066 Usinage commentaire - en code
        if gcode$ = 1007, n$, sdcom, scomm$, sfcom          	# Entree Manuelle - en commentaire avec le mouvement sans e$
        #if gcode$ = 1008, n$, sdcom, scomm$, sfcom, e$      	# Commentaire d'operation	
		if gcode$ = 1008,   [    								# commentaire d'opération AVEC LE NUMERO D'OPERATION 
	        if num_op_outil = 1,	[
	            n$, sdcom, "OP.: ", *increment_op_outil, " - ", scomm$, sfcom, e$
	            ]
	        if num_op_outil = 0, n$, sdcom, scomm$, sfcom, e$ #0043
	        num_op_outil = 0
	        ] 
        if gcode$ = 1008, scomentsprog = scomm$             	# Nom du sous-prog.
        if entete_ = 0 & gcode$ = 1006,  [   #0053
            p_m_zero
            n$, scomm$, e$              						#Usinage commentaire - en code
            ]
        if entete_ = 0 & gcode$ = 1006, n$, scomm$, e$          #Usinage commentaire - en code
        if entete_ = 1 & gcode$ = 1006 & scomm$ <> svide, ptextentete       #0025 pour informer l'entete prog.
        if gcode$ = 1026, scomm$
        spaces$ = old_spaces                                	# rappel des espaces
        omitseq$ = old_omitseq                              	# rappel des numero de bloc
        ]

#---------Entree Manuelle - en code avec le mouvement sans e$
pcomment3   # Affichage des commentaires d'entete de prog
    if gcode$ = 1054, [
        scomm$ = ucase (scomm$)
        n$, sdcom, scomm$, sfcom, e$                # Descripteur de fichier
        ]
    old_comm_cnt = comm_cnt$

p_m_zero    #0053
    posi_M_zero = strstr(s_m0, scomm$)

pnomgroupe  # Affichage du nom du groupe d'operation
    if affiche_groupe = 1,	[
        if snomgroupe_op <> svide & CN_textes <> 0 & snomgroupe_op <> snomgroupe_op_old,
            [
            spaces$ = 0                                         # suprimer les espaces
            if numcoment = 0, omitseq$ = 1                      # si pas de numero de bloc pour commentaires enlever les numeros de bloc
            n$, sdcom, "*", snomgroupe_op, "*", sfcom, e$       # nom du groupe d'operation
            spaces$ = old_spaces                                # rappel des espaces
            omitseq$ = old_omitseq                              # rappel des numero de bloc
            snomgroupe_op_old = snomgroupe_op                   # memo du nom du groupe d'operation
            ]
        ]
#endregion

#region restrictions
#0124
#strings
s_coordonnees           : "VEUILLEZ CONTACTER LA SOCIETE FICAM M. Dauvilliers Eric, e.dauvilliers@ficam.com, +33 (0)2 37 26 28 10"
s_erreur_version_MC     : "Ce POST-PROCESSEUR NE PEUT ETRE UTILISE AVEC CETTE VERSION DE MASTERCAM "
s_limite_utilisation    : "ATTENTION **CE POST-PRO n'est valide que jusqu'au :" #0102
s_erreur_num_clee       : "VOTRE NUMERO DE CLEE NE PERMET PAS D'UTILISER CE POST-PROCESSEUR, VEUILLEZ CONTACTER "
s_annEe                 : ""

#pour calculs
Val_annEe_limite		: 0
Val_mois_limite			: 0
Val_Jour_limite			: 0
Val_year_				: 0
Val_month_				: 0
Val_day_				: 0

#formats
fmt     	4    restric_version_MC    	# 0/1
fmt     	4    restric_num_clEe    	# 0/1
fmt     	4    restric_durEe        	# 0/1
fmt "-"    	4    jour_                	# jour limite
fmt "-"    	4    mois_                	# mois limite
fmt "-"    	4    annEe_                	# annEe limite
fmt     	4    num_clEe_client

p_restriction_PP
    if sim_no$ <> num_clEe_DEALER,   # CLEE autorisEe
        [
        #restriction VERSION MASTERCAM
        if restric_version_MC = 1, [    #pour info 21 = version MC2019
            if vers_no$ <> restric_version_num, [
                result = mprint(vers_no$)
                result = mprint(restric_version_num)
                result = mprint(s_erreur_version_MC)
                result = mprint(s_coordonnees)
                exitpost$
                ]
            ]
        #restriction en durEe
        #year$ --> 20= 2020
        if restric_durEe = 1,    [
            # "VOIR: ", *year$, *annEe_, *month$, *mois_, *day$, *jour_, e$
			# calcul en jours "du jour ACTUEL"
			Val_year_ = year$ * 100
			Val_month_ = month$ * 30
			Val_day_ = Val_year_ + Val_month_ + day$ # totaux en jours du jour actuel
			# calcul en jours "du jour LIMITE"
			Val_annEe_limite = annEe_	* 100
			Val_mois_limite	= mois_ * 30
			Val_Jour_limite = Val_annEe_limite + Val_mois_limite + jour_ 	
					  
            if Val_day_ > Val_Jour_limite, [                     	
                result = mprint(s_limite_utilisation)
                result = mprint(jour_)
                result = mprint(mois_)
                annEe_ = annEe_ + 2000
                result = mprint(annEe_)
                result = mprint(s_coordonnees)
                exitpost$
                ]			
            ]
        #restriction en numero de clEe
        #sim_type$
        if sim_no$ = num_clEe_DEALER, ex$   # CLEE autorisEe
        if sim_no$ <> num_clEe_client & restric_num_clEe = 1, [
            result = mprint(s_erreur_num_clee)
            result = mprint(s_coordonnees)
            exitpost$
            ]
        ]
#endregion

#region pprep_ lecture def armoire et traitememt au debut
pprep$      # affectation des variables avant debut traitememt post pro
	#seqmax$ = seqmax$ - 200        #  se reserver les 200 dernier numero de ligne pour faire les sous prog
    #debsousprog = seqmax$          # memo du num de premier sous prog
    rd_mch_ent_no$ = -1    			# forcer la lecture de toute la def machine -1 que la combinaison d'axe -2 que la base machine 0
    rd_cd$                  		# lecture de la def armoire
    rd_md$                  		# lire la definition machine
    rd_mch_ent_no$ = 0          	# pour lire les infos de base de la machine
	rd_tlpathgrp$      				# Lecture des éléments dans "param_read$. outils- BRUT" 
    if write_ops = 0, erreur = 1    # Write NC Operation information MUST be enabled in CD
      !erreur
      !serreur
    if erreur <> 0, [
        result = mprint(serreur, 2)
        exitpost$
        ]
    #0040 bloc init post pro en remplacement de la def armoire
    #pdebug
	if lire_def_machine = 0, p_force_config_pp #0123
	smcpath$ = ucase (smcpath$)     # convertir en MAJUSCULES les noms
    smcname$ = ucase (smcname$)
    smcext$ = ucase(smcext$)
    snamepst$ = ucase (snamepst$)
    snamenc$ = ucase (snamenc$)
		
	#   UTILISER LES CYCLES MACHINE ou DECOMPOSITION en G1 G0
	# ATTENTION !!!!! PRENDS LE DESSSUS SUR LA DEFINITION DE L'ARMOIRE
	usecandrill$ = yes$   	# utiliser cycle percage lamage
	usecanpeck$  = yes$   	# utiliser cycle debourrage
	usecanchip$  = yes$   	# utiliser cycle brise copeaux
	usecantap$   = yes$   	# utiliser cycle taraudage
	usecanbore1$ = yes$   	# utiliser cycle alesage a l'alesoir
	usecanbore2$ = yes$   	# utiliser cycle alesage a la barre
	usecanmisc1$ = yes$		# utiliser cycle divers 1
	usecanmisc2$ = yes$    	# utiliser cycle divers 2

pdebug
    err_file$ = 4
    bug2$ = 60
    fastmode$ =0
	
psynclath$      #Read NCI Axis-Combination (950) line
	#if lire_def_machine = 1, plireaxes    # axes valeur de la def_machine
	plireaxes   #Set rotary switches by reading machine def parameters
	#Rotaxtyp = 1 sets initial matrix to top
	#Rotaxtyp = -2 sets initial matrix to front
	#rotaxtyp$ = 4 donne les valeurs XYZ par rapport au RUD utilisé QUEL QUE SOIT LE PLAN
	#                    XYZ A plat
	#                    XZY EN FACE...
	#if vmc, rotaxtyp$ = one
	#else, rotaxtyp$ = -2

p_force_config_pp
    #REGLAGE ARCS
    # The following three initializations are used for full arc and helix arc output when the CD
    # is set to output R or signed R for arcs
	# 1 = IJ(DELTA DEPART-->Centre du Cercle) ou 5 = R(Rayon du Cercle)
    arctype$     	= 1    #Arc center type XY plane 1=abs(IJ), 2=St-Ctr, 3=Ctr-St, 4=unsigned inc., 5=rayon, 6=rayon non signé
    arctypexz$   	= 1    #Arc center type XZ plane 1=abs(IJ), 2=St-Ctr, 3=Ctr-St, 4=unsigned inc., 5=rayon, 6=rayon non signé
    arctypeyz$   	= 1    #Arc center type YZ plane 1=abs(IJ), 2=St-Ctr, 3=Ctr-St, 4=unsigned inc., 5=rayon, 6=rayon non signé

    breakarcs$  	= 1    # Break arcs, 0 = no, 1 = quadrants, 2 = 180deg. max arcs
    do_full_arc$ 	= 0    # Allow full circle output? 0=no, 1=yes; 1 POUR LE FILETAGE A LA FRAISE (SUR 360DEG)
    helix_arc$   	= 1    # Support helix arc output, 0=no, 1=all planes, 2=XY plane only
    arccheck$       = 1
    #Blocs
    seqmax$        	= 99999
    omitseq$       	= yes$    # no$ = forcer la numerotation des blocs de 10 en 10	yes$ = pas de numérotation
#endregion

#region lubrifications
sav_coolant  	: 0 # Coolant saved
sav_coolant_on 	: 0 # XCoolant saved
# --------------------------------------------------------------------------
#0040 Coolant output code selection for X style coolant
# Note: To enable X style coolant, click on the General Machine Parameters icon
#   in the Machine Definition Manager, Coolant tab, disable first check box
#   Output of X style coolant commands in this post is controlled by pcan, pcan1, & pcan2
scool50    : "M8 ( BUSE ON)"                		#Coolant 1 on value
scool51    : "M8-9"                				#Coolant 1 off value
scool52    : "M51 ( AIR ON)"                		#Coolant 2 on value
scool53    : "M51-9"                 				#Coolant 2 off value
scool54    : "M7 ( ARROSAGE AU CENTRE ON)"    	#Coolant 3 on value
scool55    : "M7-9"   							#Coolant 3 off value
scool56    : "M8(Coolant4=ON)"    				#Coolant 4 on value
scool57    : "M9"   							#Coolant 4 off value
scool58    : "M8(Coolant5=ON)"    				#Coolant 5 on value
scool59    : "M9"   							#Coolant 5 off value
scool60    : "M8(Coolant6=ON)"    				#Coolant 6 on value
scool61    : "M9"   							#Coolant 6 off value
scool62    : "M8(Coolant7=ON)"    				#Coolant 7 on value
scool63    : "M9(Coolant7=OFF)"   				#Coolant 7 off value
scool64    : "M8(Coolant8=ON)"    				#Coolant 8 on value
scool65    : "M9(Coolant8=OFF)"   				#Coolant 8 off value
scool66    : "M8(Coolant9=ON)"    				#Coolant 9 on value
scool67    : "M9(Coolant9=OFF)"   				#Coolant 9 off value
scool68    : "M8(Coolant10=ON)"   				#Coolant 10 on value
scool69    : "M9(Coolant10=OFF)"  				#Coolant 10 off value
scoolantx : ""                    				#Target for string

fstrsel scool50 coolantx scoolantx 20 -1

#X coolant has the option - First coolant off command shuts off ALL coolant options
sall_cool_off  : "M09" #Coolant off command output with all_cool_off
# --------------------------------------------------------------------------
#0040 Define coolant binary value for X style coolant
flktbl  2       20      #Lookup table definition - table no. - no. entries
        1       50      #Coolant 1 on value
        2       51      #Coolant 1 off value
        4       52      #Coolant 2 on value
        8       53      #Coolant 2 off value
        16      54      #Coolant 3 on value
        32      55      #Coolant 3 off value
        64      56      #Coolant 4 on value
        128     57      #Coolant 4 off value
        256     58      #Coolant 5 on value
        512     59      #Coolant 5 off value
        1024    60      #Coolant 6 on value
        2048    61      #Coolant 6 off value
        4096    62      #Coolant 7 on value
        8192    63      #Coolant 7 off value
        16384   64      #Coolant 8 on value
        32768   65      #Coolant 8 off value
        65536   66      #Coolant 9 on value
        131072  67      #Coolant 9 off value
        262144  68      #Coolant 10 on value
        524288  69      #Coolant 10 off value

#Lubrification Classique et VX
#   Gestion lubrif -0 arret -1 axe outil -2 buse -3 les deux separés du M3 M4
p_lubrif_ON
    lubrif = coolant$
    if v9_coolant & tool_op$ <> 114, 	[
        if lubrif > 0,	[
            #if old_lubrif = 0, "M8"
            if lubrif = 1 & old_lubrif <> 1, coolantx = 0, scoolantx
			if lubrif = 2 & old_lubrif <> 2, coolantx = 2, scoolantx
            if lubrif = 3 & old_lubrif <> 3, coolantx = 4, scoolantx
			old_lubrif = lubrif
            ]
        else, if old_lubrif = -1, scool50, lubrif = 1, old_lubrif = 1  #FORCE M08 si pas de lubrif d'actif
        ]  
	if v9_coolant = 0, pcan1_cool #X style coolant

pinsp_cool_on   # LUBRIFICATION APRES l' "INSPECTION OUTIL"
      coolant_on = sav_coolant_on
      if v9_coolant, [coolant$ = sav_coolant], e$
      if coolant_on,
        [
        local_int = zero
        coolantx = zero
        while local_int < 20 & coolant_on > 0,
          [
          coolantx = and(2^local_int, coolant_on)
          local_int = local_int + one
          if coolantx > zero,
            [
            coolantx = local_int - one
            p_bloc_O, n$, *scoolantx, e$ #X style coolant on after tool inspection
            ]
          coolantx = zero
          ]
        ]

p_lubrif_OFF
    #if lubrif_complex_on = 1 | tool_op$ = 114, p_lubrif_OFF_VX   # on arrete tout les arrosages
    if v9_coolant & tool_op$ <> 114,     [
		if old_lubrif = 1, coolantx = 1, n$, scoolantx, e$
        if old_lubrif = 2, coolantx = 3, n$, scoolantx, e$
		if old_lubrif = 3, coolantx = 5, n$, scoolantx, e$
        old_lubrif = 0
        ]
	if v9_coolant = 0, pcool_off

pcool_off  #All Coolant off
      sav_coolant = coolant$ #Save V9 coolant
      sav_coolant_on = coolant_on #Save X coolant
      coolant$ = zero
#      if nextop$ = 1003, #Uncomment this line to leave coolant on until eof unless
        [                 #  explicitely turned off through a canned text edit
        if all_cool_off, [
          #all coolant off with a single off code here
          if coolant_on, p_bloc_O, n$, sall_cool_off, e$
          coolant_on = zero
          ]
        else, [
          local_int = zero
          coolantx = zero
          while local_int < 20 & coolant_on > 0, [
            coolantx = and(2^local_int, coolant_on)
            local_int = local_int + one
            if coolantx > zero, [
              coolantx = local_int
              p_bloc_O, n$, scoolantx, e$
              ]
            coolantx = zero
            ]
          coolant_on = zero
          ]
        ]
#endregion

#region Motion output components
# --------------------------------------------------------------------------
# Motion output components
# --------------------------------------------------------------------------
bloc_O         : 0     	#Block delete active

p_bloc_O            	#Canned text - bloc OPTIONNEL
      if bloc_O, '/'

p_f_bloc_O           	#Force - le bloc OPTIONNEL
      "/"
#endregion

#region Textes_et_arrosages
#Define Constants
m_one        = -1
zero         = 0
one          = 1
two          = 2
three        = 3
four         = 4
five         = 5
c9k          = 9999

#Coolant variables for X style coolant
cant_pos     : 0     #Read from current canned text (cant_pos1 - cant_pos20)
coolant_bin  : 0     #Binary value for current coolant command
coolant_on   : 0     #Binary value holding the sum of all coolants currently on
coolantx     : 0     #Selector variable for coolant string selector
local_int    : 0     #Local variable for output of coolant off commands
result2      : 0     #Return value for functions
suppress     : 0     #Flag used to suppress redundant coolant on commands
all_cool_off : 0     #SET_BY_MD - First coolant off command shuts off ALL coolant options
v9_coolant   : 0     #SET_BY_MD - Use V9 coolant options - read from General Machine Parameters

# --------------------------------------------------------------------------
#String and string selector definitions for NC output
# --------------------------------------------------------------------------
#Address string definitions
strm         : "M"
strn         : "N"
stro         : "O"
strp         : "P"
srad         : "R"
srminus      : "R-"
sblank       : ""

#Cantext string definitions (spaces must be padded here)
sm00         : "M00"
sm01         : "M01"	
strtextno    : ""
strcantext   : ""

# GESTION DES TEXTES OPTIONNELS
s_texte_0	 : ""
s_texte_1    : "M0" 					#N° 1                 		
s_texte_2    : "M1" 					#N° 2                 				
s_texte_3    : "; BLOC OPTIONNEL ON"                		
s_texte_4    : "; BLOC OPTIONNEL OFF"                 				
s_texte_5    : "; REPRISE"  
s_texte_6    : "; ZONE 1"                		
s_texte_7    : "; ZONE 2"                				
s_texte_8    : "; EBAUCHE"                		
s_texte_9    : "; FINITION"                 				
s_texte_10   : "; AJOUTER LES BRIDEs"
s_texte_11   : "; ENLEVER LES BRIDEs" 	#N° 11            				 	
s_liste_textes : ""                    				

fstrsel s_texte_0 liste_textes s_liste_textes 11 -1

#s_texte_12   : "BLOC OPTIONNEL ON"		#N° 1101  
#s_texte_13   : "BLOC OPTIONNEL OFF"	#N° 1102                  				
#s_texte_14   : "REPRISE"                		
#s_texte_15   : "BLOC OPTIONNEL OFF"                 				
#s_texte_16   : "REPRISE"  
#s_texte_17   : "ZONE 1"                		
#s_texte_18   : "ZONE 2"                				
#s_texte_19   : "EBAUCHE"                		
#s_texte_20   : "FINITION"				#N° 1109
#s_texte_20   : "FINITION"				#N° 1110 ... 1119   

# --------------------------------------------------------------------------
# Insertion des Textes / ARROSAGES
# --------------------------------------------------------------------------
pcan            #Insertion des Textes - LIGNE D'AVANT 
      strcantext = sblank
      if cant_no$ > zero,
        [
        if Mode_reglage_PP = 1, "PCAN : ", *cant_no$, e$
		if cant_pos1$ = zero | cant_pos1$ = three, pcant_1
        if cant_pos2$ = zero | cant_pos2$ = three, pcant_2
        if cant_pos3$ = zero | cant_pos3$ = three, pcant_3
        if cant_pos4$ = zero | cant_pos4$ = three, pcant_4
        if cant_pos5$ = zero | cant_pos5$ = three, pcant_5
        if cant_pos6$ = zero | cant_pos6$ = three, pcant_6
        if cant_pos7$ = zero | cant_pos7$ = three, pcant_7
        if cant_pos8$ = zero | cant_pos8$ = three, pcant_8
        if cant_pos9$ = zero | cant_pos9$ = three, pcant_9
        if cant_pos10$ = zero | cant_pos10$ = three, pcant_10
        if cant_pos11$ = zero | cant_pos11$ = three, pcant_11
        if cant_pos12$ = zero | cant_pos12$ = three, pcant_12
        if cant_pos13$ = zero | cant_pos13$ = three, pcant_13
        if cant_pos14$ = zero | cant_pos14$ = three, pcant_14
        if cant_pos15$ = zero | cant_pos15$ = three, pcant_15
        if cant_pos16$ = zero | cant_pos16$ = three, pcant_16
        if cant_pos17$ = zero | cant_pos17$ = three, pcant_17
        if cant_pos18$ = zero | cant_pos18$ = three, pcant_18
        if cant_pos19$ = zero | cant_pos19$ = three, pcant_19
        if cant_pos20$ = zero | cant_pos20$ = three, pcant_20
		if strcantext <> sblank, p_bloc_O, n$, strcantext, e$
        strcantext = sblank
        ]

pcan1           #Insertion des Textes - AVEC LA LIGNE 
      strcantext = sblank
      if cant_no$ > zero,
        [
        if Mode_reglage_PP = 1, "PCAN1 1: " *cant_no$, ": ",
		if cant_pos1$  = one, pcant_1
        if cant_pos2$  = one, pcant_2
        if cant_pos3$  = one, pcant_3
        if cant_pos4$  = one, pcant_4
        if cant_pos5$  = one, pcant_5
        if cant_pos6$  = one, pcant_6
        if cant_pos7$  = one, pcant_7
        if cant_pos8$  = one, pcant_8
        if cant_pos9$  = one, pcant_9
        if cant_pos10$ = one, pcant_10
        if cant_pos11$ = one, pcant_11
        if cant_pos12$ = one, pcant_12
        if cant_pos13$ = one, pcant_13
        if cant_pos14$ = one, pcant_14
        if cant_pos15$ = one, pcant_15
        if cant_pos16$ = one, pcant_16
        if cant_pos17$ = one, pcant_17
        if cant_pos18$ = one, pcant_18
        if cant_pos19$ = one, pcant_19
        if cant_pos20$ = one, pcant_20
		]
	  if cstop$, strcantext = strcantext + sm00
      if cgstop$, strcantext = strcantext + sm01
      #Output of strcantext occurs at the end of the output line

pcan1_cool      #Insertion des Textes AVEC l'ARROSAGE - ***SUR LA LIGNE***
	  if cant_no$ > zero,
        [
        if Mode_reglage_PP = 1, "pcan1_cool : ", *cant_no$, "--", *cantext$, *tool_op$,    
		if cant_pos1$  = four, pcant_1
        if cant_pos2$  = four, pcant_2
        if cant_pos3$  = four, pcant_3
        if cant_pos4$  = four, pcant_4
        if cant_pos5$  = four, pcant_5
        if cant_pos6$  = four, pcant_6
        if cant_pos7$  = four, pcant_7
        if cant_pos8$  = four, pcant_8
        if cant_pos9$  = four, pcant_9
        if cant_pos10$ = four, pcant_10
        if cant_pos11$ = four, pcant_11
        if cant_pos12$ = four, pcant_12
        if cant_pos13$ = four, pcant_13
        if cant_pos14$ = four, pcant_14
        if cant_pos15$ = four, pcant_15
        if cant_pos16$ = four, pcant_16
        if cant_pos17$ = four, pcant_17
        if cant_pos18$ = four, pcant_18
        if cant_pos19$ = four, pcant_19
        if cant_pos20$ = four, pcant_20
        ]
		
pcan2           #Insertion des Textes - APRES LA LIGNE
      strcantext = sblank
      if cant_no$ > zero,
        [
        if cant_pos1$ = two | cant_pos1$ = five, pcant_1
        if cant_pos2$ = two | cant_pos2$ = five, pcant_2
        if cant_pos3$ = two | cant_pos3$ = five, pcant_3
        if cant_pos4$ = two | cant_pos4$ = five, pcant_4
        if cant_pos5$ = two | cant_pos5$ = five, pcant_5
        if cant_pos6$ = two | cant_pos6$ = five, pcant_6
        if cant_pos7$ = two | cant_pos7$ = five, pcant_7
        if cant_pos8$ = two | cant_pos8$ = five, pcant_8
        if cant_pos9$ = two | cant_pos9$ = five, pcant_9
        if cant_pos10$ = two | cant_pos10$ = five, pcant_10
        if cant_pos11$ = two | cant_pos11$ = five, pcant_11
        if cant_pos12$ = two | cant_pos12$ = five, pcant_12
        if cant_pos13$ = two | cant_pos13$ = five, pcant_13
        if cant_pos14$ = two | cant_pos14$ = five, pcant_14
        if cant_pos15$ = two | cant_pos15$ = five, pcant_15
        if cant_pos16$ = two | cant_pos16$ = five, pcant_16
        if cant_pos17$ = two | cant_pos17$ = five, pcant_17
        if cant_pos18$ = two | cant_pos18$ = five, pcant_18
        if cant_pos19$ = two | cant_pos19$ = five, pcant_19
        if cant_pos20$ = two | cant_pos20$ = five, pcant_20
		if Mode_reglage_PP = 1, "pcan2 ", *cant_no$, e$
        if strcantext <> sblank, p_bloc_O, n$, strcantext, e$
        strcantext = sblank
        ]

pcant_1         #Insertion du Texte
      cant_pos = cant_pos1$
      cantext$ = cant_val1$
      pcant_out

pcant_2         #Insertion du Texte
      cant_pos = cant_pos2$
      cantext$ = cant_val2$
      pcant_out

pcant_3         #Insertion du Texte
      cant_pos = cant_pos3$
      cantext$ = cant_val3$
      pcant_out

pcant_4         #Insertion du Texte
      cant_pos = cant_pos4$
      cantext$ = cant_val4$
      pcant_out

pcant_5         #Insertion du Texte
      cant_pos = cant_pos5$
      cantext$ = cant_val5$
      pcant_out

pcant_6         #Insertion du Texte
      cant_pos = cant_pos6$
      cantext$ = cant_val6$
      pcant_out

pcant_7         #Insertion du Texte
      cant_pos = cant_pos7$
      cantext$ = cant_val7$
      pcant_out

pcant_8         #Insertion du Texte
      cant_pos = cant_pos8$
      cantext$ = cant_val8$
      pcant_out

pcant_9         #Insertion du Texte
      cant_pos = cant_pos9$
      cantext$ = cant_val9$
      pcant_out

pcant_10        #Insertion du Texte
      cant_pos = cant_pos10$
      cantext$ = cant_val10$
      pcant_out

pcant_11        #Insertion du Texte
      cant_pos = cant_pos11$
      cantext$ = cant_val11$
      pcant_out

pcant_12        #Insertion du Texte
      cant_pos = cant_pos12$
      cantext$ = cant_val12$
      pcant_out

pcant_13        #Insertion du Texte
      cant_pos = cant_pos13$
      cantext$ = cant_val13$
      pcant_out

pcant_14        #Insertion du Texte
      cant_pos = cant_pos14$
      cantext$ = cant_val14$
      pcant_out

pcant_15        #Insertion du Texte
      cant_pos = cant_pos15$
      cantext$ = cant_val15$
      pcant_out

pcant_16        #Insertion du Texte
      cant_pos = cant_pos16$
      cantext$ = cant_val16$
      pcant_out

pcant_17        #Insertion du Texte
      cant_pos = cant_pos17$
      cantext$ = cant_val17$
      pcant_out

pcant_18        #Insertion du Texte
      cant_pos = cant_pos18$
      cantext$ = cant_val18$
      pcant_out

pcant_19        #Insertion du Texte
      cant_pos = cant_pos19$
      cantext$ = cant_val19$
      pcant_out

pcant_20        #Insertion du Texte
      cant_pos = cant_pos20$
      cantext$ = cant_val20$
      pcant_out

pcant_out       #Canned text - build the string for output
	#Assign string select type outputs
	if Mode_reglage_PP = 1, "cantext 1 : ", *cantext$, " : ", *cant_pos, e$
	if cant_pos < three, #cant_pos indicates canned text output
        [
        if cantext$ = three, bloc_O = one
        if cantext$ = four, bloc_O = zero
        #Build the cantext string
        if cantext$ = one, strcantext = strcantext + sm00
        if cantext$ = two, strcantext = strcantext + sm01
        if cantext$ > four, [								#-----------LISTE DE TEXTES 
		  strtextno = no2str(cantext$)	  
          #strcantext = strcantext + strm + strtextno 	 
		  liste_textes = cantext$ #strtextno	  
		  strcantext = s_liste_textes #LISTE DE TEXTES
		  #strcantext
		  #*cant_pos, "XXXX",
		  if cant_pos = 1, s_liste_textes										#AVEC
		  if cant_pos = 0 | cant_pos = 2, n$, s_liste_textes, s_com_close, e$	#AVANT et APRES
          ]
        ]
	else, #cant_pos indicates coolant output --> ARROSAGES SI cant_pos > 2
        [
		#"ici1 ", e$
		coolant_bin = flook (two, cantext$) #Create binary value for each coolant using lookup table
        if frac(cantext$/two),  # ARROSAGES **OFF** 
			[
			if all_cool_off, [
				if coolant_on, p_bloc_O, n$, sall_cool_off, e$
				coolant_on = zero
				]
			else, [
				#"ici2 ", e$
				if coolant_on > 0, [
					  #"ici3 ", e$
					  coolant_on = coolant_on - coolant_bin/2 #Odd = off command, subtract appropriate binary value.
					  coolantx = cantext$ - 50                #Create a coolantx value for string select
					  p_bloc_O, n$, *scoolantx, e$
					  ]
				]
			]
		else, [                    # ARROSAGES **ON**         #Even = on command
			#Determine if this coolant is already on
			local_int = zero
			coolantx = zero
			suppress = zero
			while local_int < 20 & coolant_on > 0, [
				result2 = and(2^local_int, coolant_on)
				local_int = local_int + one
				if result2 = coolant_bin, suppress = one
				]
			if suppress <> 1, [ #Don't output an on code for a coolant that is already on
				if Mode_reglage_PP = 1, "cantext 2: ", *cantext$, e$
				#"ici4 ", e$
				coolant_on = coolant_on + coolant_bin 	#Maintain binary sum of all coolants currently on
				coolantx = cantext$ - 50              	#Create a coolantx value for string select
				if cant_pos = four, *scoolantx        	#Coolant "AVEC"
				else, p_bloc_O, n$, *scoolantx, e$  	#Coolant "AVANT" ou "APRES"
				]
			]
		]

#endregion

#region Temps
p_Transf_hr_min_sec # Convert minutes to hr/min/sec format
	Time_hrs = int ( Tot_time_op / 60 )
	Time_min = int ( Tot_time_op - Time_hrs * 60 )
	Time_sec = ( Tot_time_op - Time_hrs * 60 - Time_min ) * 60

p_tool_time   # Total tool times and call conversion routine
	Tot_time_op = Feed_time + Rapide_time
	Tot_time_op = Tot_time_op * time_factor / 100
	p_Transf_hr_min_sec
	total_part_time = Tot_time_op + total_part_time + tlchg_time
	p_time_total

p_time_total
	time_OPs = Tot_time_op + time_total
	time_total = time_total + time_OPs
	if Mode_reglage_PP = 1, "	VOIR times:", *Tot_time_op, *time_total, *time_OPs, e$ 
	
p_calc_long_time      # Distance calculations
   	tlrad$ = 0
	if temps_4_axes = 1, [
		if Mode_reglage_PP = 1, "	Voir 4 axes DEG:", e$
		if deg_4_axes <> 0, [	# AVEC ROTATIONS/DEGAGEMENTS XYZ HOME ...
			gcode$ = 0
			if degageX = -1, x$ = xh$, else, x$ = degageX 
			if degageY = -1, y$ = yh$, else, y$ = degageY
			if degageZ = -1, z$ = zh$, else, z$ = degageZ
			Delta_X = x$ - old_x
			Delta_Y = y$ - old_y
			Delta_Z = z$ - old_z
			]
		]
	if temps_4_axes = 2, [
		if Mode_reglage_PP = 1, "	Voir 4 axes USI:", e$
		temps_4_axes = 0
		]
	if temps_4_axes = 0, [	# SANS ROTATIONS/DEGAGEMENTS XYZ HOME ... 		
		Delta_X = x$ - old_x
		Delta_Y = y$ - old_y
		Delta_Z = z$ - old_z
		]
   	if gcode$ = 0 | gcode$ = 1, [   
	   Long = sqrt ( Delta_X^2 + Delta_Y^2 + Delta_Z^2 )
	   if sgcode = sg00, ptime_R
	   if sgcode = sg01, ptime_L
	   ]
	if gcode$ = 2 | gcode$ = 3, [
		ptime_C 
		Long = perimetre
		ptime_L
		]
	if Mode_reglage_PP = 1, [
		"	VOIR old XYZ ", *old_x, *old_y, *old_z, e$
		"	VOIR:", *Delta_X, *Delta_Y, *Delta_Z, *Long, "mm", e$
		"	VOIR_cumul_long_feed:", *long_feed, "DELTA : ", *long, "mm", e$
		"	VOIR_cumul_time_feed:", *Feed_time, "DELTA : ", e$
		"	VOIR_cumul_long_rapide:", *long_rapide, "DELTA : ", e$
		"	VOIR_cumul_time_rapide:", *Rapide_time, "DELTA : ",  "val rapide CN :", *fr_rapid_mach, e$
		]
   	
ptime_L     # Feed time and length calc
    avance = fr_pos$
    if avance < tol, avance = tol
    if opcode$ = 3 & drillcyc$ = 3, pfrtap
    long_feed = long_feed + Long
    Feed_time = Feed_time + Long / avance
 
ptime_R     # Rapid time and length calc
	long_rapide = long_rapide + Long
	Rapide_time = long_rapide / fr_rapid_mach
	
ptime_C		#calcul du périmètre
	if (x$ <> old_x)  & (y$ <> old_y), [
		perimetre = ((2*pi$*arcrad$)/360) * sweep$ * -1 
		if Mode_reglage_PP = 1, "	VOIR1: ", *perimetre, "ANGLE: ", *sweep$, e$
		]
	else, [
		if breakarcs$ = 0, division = 0
		if breakarcs$ = 1, division = 4
		if breakarcs$ = 2, division = 2
		perimetre = (2*pi$*arcrad$) / division	# OK contour à 360°
		if Mode_reglage_PP = 1, "	VOIR_10: ", *perimetre, e$
		] 
	
pfrtap
	if tldia$ = 2, pas_time = 0.4  
	if tldia$ = 2.5, pas_time = 0.45
	if tldia$ = 3, pas_time = 0.5
	if tldia$ = 4, pas_time = 0.7
	if tldia$ = 5, pas_time = 0.8
	if tldia$ = 6, pas_time = 1
	if tldia$ = 8, pas_time = 1.25
	if tldia$ = 10, pas_time = 1.5
	if tldia$ = 12, pas_time = 1.75
	if tldia$ = 14, pas_time = 2
	if tldia$ = 16, pas_time = 2
	if n_tap_thds$ <> 0, pas_time = n_tap_thds$
	avance = (abs(ss$) * pas_time)
	#plunge = (abs(ss$) * pas_time)
#endregion

#region pmachineinfo_ lecture des parametres de def armoire et def machine
# Machine Definition Parameters
fprmtbl 17000   11   #13 Table Number, Size
#   Param   Variable to load value into
	17391   axis_label   #Axis label - 1=X,2=Y,3=Z	
    17397   srot_label   #Rotary Axis label (Generally A, B or C) - Not yet available.
	17401   rot_zero     #Rotary zero degree position	
	17402   rot_dir      #Rotary direction
	17408   rot_index    #Index or continuous
    17409   rot_angle    #Index step
    17410   rot_type     #M3/M4 Rotary type	
    17605   min_speed    #50 tr/min Minimum spindle speed	
    #17066   maxfrinv_m  #Maximum feedrate - inverse time - metric - Minimum value from MD as this is inverse time
    #17992   maxfrdeg     #Maximum feedrate deg/min
	17063   maxfeedpm_m  #Limit for feed in mm/min
    17101   all_cool_off #First coolant off command shuts off ALL coolant options
    17102   v9_coolant   #Use V9 coolant option

fprmtbl 18000   2           # Lecture des Param de def armoire
    18171   write_ops       # Autoriser l'ecriture de l'information CN d'operation
    18458   CN_textes           # Nombre de caracteres pour les commentaires
    #18713   sous_prog_type  # type de merge des sous prog (0 apres prog principal 1 avant)
    #18705   cor_arc         # compensation sur les arcs autorisee
	
#---------------- BLOCS DE DEF MACHINE ET DEF ARMOIRE ---------------------------------
pmachineinfo$    # lecture des parametre de def armoire et def machine
    #rd_md is used to call pmachineinfo postblock and read the parameters of the selected axis
    #combination machine entity set in rd_mch_ent_no
    #rd_cd is used to call pmachineinfo postblock and read the active control definition parameters
    #rd_tlpathgrp is used to call pmachineinfo postblock and read the active toolpath group parameters

	if affiche_prmcodes = 1, "-->pmachineinfo DONNEES MACHINE ", ~prmcode$, "=", sparameter$, e$        # pour afficher tous les parametres

	#if prmcode$ = 18171, *prmcode$, "ecriture ops =", sparameter$, e$
	#if prmcode$ = 18458, "nombre de caracteres de commentaire",  sparameter$, e$
	#if prmcode$ = 17401, *prmcode$, "position 0", "=", sparameter$, e$         # Position angle 0 deg  +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9
	#if prmcode$ = 17398, *prmcode$, "=", sparameter$, e$
	#if prmcode$ = 17201, *prmcode$, "nom de l'element =", sparameter$, e$

	if prmcode$ = 17063, fmaxi = rpar(sparameter$, 1)               # avance maxi en G1
    if prmcode$ = 17062, fmini = rpar(sparameter$, 1)               # avance mini en G1
	if prmcode$ >= 17000 & prmcode$ < 18000, result = fprm(17000)   # Run the parameter table for Machine Definition Parameters
	if prmcode$ >= 18000 & prmcode$ < 19000, result = fprm(18000)   # Lecture de la table de parametre Control Definition
	if prmcode$ >= 19000 & prmcode$ < 19900, result = fprm(19000)   # Run the parameter table for Toolpath Group Parameters
	if prmcode$ = 17012, s_machine = ucase(sparameter$)             # Nom de la machine
	if prmcode$ = 17201,        [               					# nom du composant
        if ucase(sparameter$) = spalette, palette = 1       		# si c'est une palette, activer la gestion de palette
        ]
	if prmcode$ = 19958,        [               					# type de composant  5 = axe rotatif
        type_composant = rpar(sparameter$, 1)
	        if type_composant = 5,  [               				# si c'est un axe rotatif
	        useaxe = 1
	        compt_axes_rot  = compt_axes_rot + 1            		# compter le nombre d'axes rotatif
	        ]
	    ]
    # AXE DE ROTATION UTILISé --> la configuration machine doit Etre dEfinie correctement
	#Direction de l'axe Z - Vers Y = ROTATION AXE A / Vers X = ROTATION AXE B
      if prmcode$ = 17392 & axis_label = 3, [
        Z_dir = rpar(sparameter$, 1)  #Z axis direction - +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9
        if Z_dir <> 3 & Z_dir <> 9, #vmc = 0   #0 = Horizontal Machine, 1 = Vertical Mill
        else, #vmc = 1
        ]	
	if prmcode$ = 17399,    [                   					# AXE ROTATIF - +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9
        diviseur = rpar(sparameter$, 1)
        if diviseur > 3, diviseur = diviseur - 6        			# ne garder que x y z
        ]
	if prmcode$ = 17402,    [                   					# sens de l'axe rotatif 0=trigo 1=horaire
        sens_A_B= rpar(sparameter$, 1)
        if sens_A_B = 0, sens_A_B = 1                   			# variable sens pour le post pro
        else, sens_A_B = -1
        ]
	  if prmcode$ = 17598,      [               					# nombre d'outils du changeur de la def machine
	    nbroutil = rpar(sparameter$, 1)
	    ]
    #if prmcode$ = 17397, s_axe_rot_label = sparameter$             # NOM de l'axe rotatif (ABC)
    if prmcode$ = 17932, s_axe_rot_label = sparameter$              #17391 AXE rotatif (ABC) (NOM DE L'axe -- PAS le LABEL)
	
	if prmcode$ = 17921, fr_rapid_mach = rpar(sparameter$, 1)     	# ou 17925 avance rapide de la machine     
	if prmcode$ = 17597, [
        tlchg_time = rpar(sparameter$, 1)    						# temps de changement d'outil de la machine
        tlchg_time = tlchg_time / 60
        ]
		
plireaxes   # Lecture des parametres de la combinaison d'axes uniquement
    #"plireaxes", e$
    if syncaxis$ <> old_syncaxis, [
        compt_axes_rot = 0
        erreur = 0
        ]
    rd_mch_ent_no$ = syncaxis$      			# pour avoir les infos de la conbinaison d'axe utilisée
    #rd_mch_ent_no$ = -2            			# forcer la lecture de toute la def machine -1 que la combinaison d'axe -2 que la base machine 0
    #rd_cd$                 					# lecture de la def armoire
    if lire_def_machine = 1, rd_md$          # lecture de la def machine
    result = nwadrs(s_axe_rot_label, axeA)      # affectation du nom de l'axe rotatif en ABS
	#s_axe_rot_label = "I" + s_axe_rot_label    # affectation du nom de l'axe rotatif en INC
    #result = nwadrs(s_axe_rot_label, axeAi)    # affectation du nom de l'axe rotatif en INC
    p_test_machine
    old_syncaxis = syncaxis$

p_test_machine    # verif de la def machine
    #*nbr_combi, "---------", e$
    if nbr_combi > 1, erreur = 3        # le pst ne supporte q'une combinaison d'axe par programme
    if compt_axes_rot > 1, erreur = 2       # le pst ne supporte q'un axe rotaif
    #if write_ops = 0, erreur = 1        # Write NC Operation information MUST be enabled in CD
    #p_erreur

p_erreur
    !erreur
    !serreur
    if erreur <> 0, [
        if erreur = 4 & testerreur4 = 0, [
            serreur2 = serreur + no2str(increment_op_outil)
            result = mprint(serreur2, 3)
            if result = 3, serreur2 , e$, exitpost$ 	# abandonner
            if result = 4, serreur2                 	# recommencer
            if result = 5, testerreur4 = 1             	# ignorer
            ]
        if erreur <> 4, [
            result = mprint(s_erreur_nbr_axes_rot, 2)
            exitpost$
            ]
        ]

p_affiche_infos_config_armoire
    #affichage des prmcode$
    if Mode_reglage_PP = 2, [
        "***INFOS DONNEES -CONFIG DE LA MACHINE-***", e$
        "fmaxi: ", *fmaxi, e$
        "fmini: ", *fmini, e$
        "smachine: ", s_machine, e$
        "spalette: ", spalette, e$
        "type_composant ", *type_composant, e$
        "MACHINE : diviseur +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9: : ", *diviseur, e$
        "sens de l'axe rotatif 0=trigo 1=horaire: ", *sens_A_B, e$
        "nbr_outil: ", *nbr_outil, e$
        "s_axe_rot_label NOM: ", s_axe_rot_label, e$
        ]
#endregion

#region pparameter_ lecture parametres d'OP				
pparameter$
    #rd_params is used to call pparameter postblock and read the parameters of the operation specified in rd_param_op_no
    if affiche_prmcodes = 1, "-->pparameter DONNEES OPERATIONS ", ~prmcode$, "=", ~sparameter$, e$        #0040 pour afficher tous les parametres

    #if prmcode$ = 18171, *prmcode$, "ecriture ops =", sparameter$, e$
    #if prmcode$ = 18458, "nombre de caracteres de commentaire",  sparameter$, e$
    #if prmcode$ = 19958, *prmcode$, "type de composant", "=", sparameter$, e$  # type de composant 5 = axe rotatif
    #if prmcode$ = 17399, *prmcode$, "AXE DE L'AXE ROTATIF", "=", sparameter$, e$   # AXE ROTATIF - +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9
    #if prmcode$ = 17402, *prmcode$, "sens de laxe", "=", sparameter$, e$       # sens de l'axe rotatif 0=trigo 1=horaire
    #if prmcode$ = 17401, *prmcode$, "position 0", "=", sparameter$, e$         # Position angle 0 deg  +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9
    #if prmcode$ = 17398, *prmcode$, "=", sparameter$, e$
    #if prmcode$ = 17201, *prmcode$, "nom de l'element =", sparameter$, e$

    if prmcode$ = 10030, avance = rpar(sparameter$, 1)
	#if prmcode$ = 10031, fplongee = rpar(sparameter$, 1)
	if prmcode$ = 10100, _scycle = rpar(sparameter$, 1)
    if prmcode$ = 12194, pas_filetage = rpar(sparameter$, 1)   	#0090 "valeur du pas du filetage à la fraise"
    if prmcode$ = 15163, Val_origine_Z = rpar(sparameter$, 1)   #0079 "valeur de l'origine MC en Z"
    if prmcode$ = 15164, Val_origine_Y = rpar(sparameter$, 1)   #0079 "valeur de l'origine MC en Y"
    if prmcode$ = 15165, Val_origine_X = rpar(sparameter$, 1)   #0079 "valeur de l'origine MC en X"
	#if prmcode$ = 15346, Type_Comp_OP = rpar(sparameter$, 1)    # Type de compensation outil par OP / 0=ORDI 1=ARMOIRE 2=USURE 3=USURE inverse 4=SANS 

    if prmcode$ = 20002, smanu = sparameter$        			#0001
    if prmcode$ = 20002, long_smanu = strlen(smanu)
    if prmcode$ = 20003, smand = ucase(sparameter$) 			# smontage
    if prmcode$ = 20004, paramT1 = rpar(sparameter$, 16)  		# lecture des parametres d'outil
    if prmcode$ = 20007, paramT20 = rpar(sparameter$, 11)   	# lis les param. avec l'épaisseur
    if prmcode$ = 20018, snomgroupe_op = ucase (sparameter$)    # Lecture du nom de groupe d'usinage
    if prmcode$ = 20011, sinfo_origine = sparameter$    		#0070
    if prmcode$ = 20014, snom_RUD = sparameter$         		#0080
	
	#if prmcode$ = 40270, fmicro_remontee = rpar(sparameter$, 1) #0095
	
	if opcode$ <> 19, result = fprm (1)                 		# lecture des parametres de surep pour surfacage
    if opcode$ = 19, result = fprm (2)                  		# lecture des parametres de surep pour contour et 3D

#endregion

#region sous_programmes
#---------------- BLOCS DE TRAITEMENT DES SOUS-PROG EN Z ---------------------------------
psub_call_s$       # appel sous prog en Z
    !sub_prg_no$                			# mise a jour du numero interne de sous prog en Z
    subprognum = debsousprog + sub_prg_no$  # affectation du numero de sous prog en Z
    nprincipal = n$  + seqinc$      		# memo du numero de ligne pour le rappel dans le sous-programme
    #*nprincipal, e$            			# affecation du parametre CN pour memo du numéro de ligne
    subprognum = (progno$ *100) + subprognum
    n$, "M98", subprognum, e$       		# appel du sous prog
    nprincipal = n$             			# memo du numero de ligne pour le prog principal

psub_st_s$    # écriture de l'entete de sous prog en Z
	!sub_prg_no$                			# mise a jour du numero interne de sous prog en Z
	numsubprog = debsousprog + sub_prg_no$  # affectation du numero de sous prog en Z
	nomsubprog = numsubprog                 # affectation du nom de sous prog en Z
	memo_incremental = incremental          # memorisation du mode ABS INC Actuel
	incremental = sub_inc$          		# Sous prog en incremental ou absolue
	numsubprog = (progno$ *100) + numsubprog
	#n$ = 10                 				# numero de ligne de sous prog
	#"%", e$
	numsubprog_ = numsubprog
	if incremental = 1, p_casse_modalite    # casser la modalité xyz pour les sous prog en relatif
	p_casse_modalite_avance         		# casser la modalité le l'avance pour les sous prog
	omitseq$ = 1                			# pas du numero de ligne pour les sous prog
	if CN_textes <> 0,   [          		# entete avec commentaires
        old_spaces = spaces$
        spaces$ = 0
        if scomentsprog <> svide, [
			if Type_progno = 1, *numsubprog		# Oxxxx 
			if Type_progno = 2, *numsubprog_	# :xxxx
				space, sdcom, scomentsprog, sfcom, e$
			]
        else, [               				# entete sans commentaires     
			if Type_progno = 1, *numsubprog, e$		# Oxxxx 
			if Type_progno = 2, *numsubprog_, e$	# :xxxx 
	        ]
        spaces$ = old_spaces
        n$, sdcom, snomprogentete, sfcom, e$
        n$, sdcom, *snom_entete, sfcom, e$
        n$, "( SOUS-PROGRAMME EN -Z-)", e$
        ]
	else,   [               				# entete sans commentaires     
		if Type_progno = 1, *numsubprog, e$		# Oxxxx 
		if Type_progno = 2, *numsubprog_, e$	# :xxxx 
        ]
	n$, sdcom, strtool$, sfcom, e$
	n$, *sinc_abs, e$                 		# écrire si sous prog en ABS ou INC
	gcode$ = 5      						# pour forcer l'ecriture de code G du premier bloc du sous prog
	!gcode$

psub_end_s$    # fin sous prog en Z
    incremental = memo_incremental  # rappel du mode INC ABS precedent
    n$, *sinc_abs, e$
    #n, "M99", "P#100", e$          # fermeture de sous prog
    n$, "M99", e$               	# fermeture de sous prog
    n$, " ", e$
    n$, " ", e$
    omitseq$ = old_omitseq
    n$ = nprincipal             	# recuperation du numero de ligne pour prog principal

#-------------------------BLOCS DE TRAITEMENT DES SOUS PROG EN TRANSFORMER ---------------------------
ptranslation    # pour usinage transformer en translation
	#sub_trnstyp$, sub_trnmthd$, sub_trnsx$, sub_trnsy$, sub_trnsz$, sub_nxt_t$, sub_nxt_h$, sub_nxt_tid$, sub_mny_t$, e
	#wdum2$, wdum3$ , "----", rcc_flg$, sub_prg_no$, subout$, sub_level$, absinc$, e
	if sub_trnsx$ = 0 & sub_trnsy$ = 0 & sub_trnsz$ = 0,   [   # si pas de decalage, ne rien faire

		]
	else, [                         # si decalage, ecriture du G52
		memo_incremental = incremental
		incremental = 0
		n$, " ", e$
		n$, *sgcode, *sinc_abs, *xrp, *yrp, e$
		#n$, "(FAIRE UN DECALGE G52)", e
		#n$, sinc_abs, "G52", *sub_trnsx$, *sub_trnsy$, *sub_trnsz$, e$   # ecriture des valeur de decalage d'origine
		decalage = 1                            # memo de mise en place de decalage pour l'annuler
		incremental= memo_incremental
		n$, sinc_abs, e$
		]

psub_mirror     #Mirror start code, user
	#Mirror Y axis
	#if sub_trnmthd$, pbld, n$, *sgabsinc, strns_mir_on, *sub_trnsx$, e$
	#Mirror X axis
	#else, pbld, n$, *sgabsinc, strns_mir_on, *sub_trnsy$, e$
	n$, " A CREER -SOUS PROG MIRROIR-", e$

psub_rotate     #Rotate start code, user
    #n$, *sgcode, *sinc_abs, *sub_trnsx$, *sub_trnsy$,
    #[absinc$ = one], *sgabsinc, e$
    memo_incremental = incremental
    incremental = 0
    n$, " ", e$
    n$, *sgcode, *sinc_abs, *xrp, *yrp, e$
    #n$, "(FAIRE UN DECALGE G52)", e
    #n$, sinc_abs, "G52", *sub_trnsx$, *sub_trnsy$, *sub_trnsz$, e$   # ecriture des valeur de decalage d'origine
    decalage = 1                            # memo de mise en place de decalage pour l'annuler
    incremental= memo_incremental
    n$, sinc_abs, e$

p_type_sous_prog
	n$, "( APPEL SOUS-PROGRAMME )", e$
	if sub_trnstyp$ = 0, n$, "( TRANSFORMATION PAR MIRROIR )", e$
	if sub_trnstyp$ = 1, n$, "( TRANSFORMATION PAR ROTATION )", e$
	if sub_trnstyp$ = 2, n$, "( TRANSFORMATION PAR ECHELLE )", e$
	if sub_trnstyp$ = 3, n$, "( TRANSFORMATION PAR TRANSLATION )", e$

psub_call_mm$     # appel sous prog en transformation pour outils multiples
	#"appel sous prog en transformation pour outils multiples", e$
	!main_prg_no$                    				# mise a jour du numero interne de sous prog en transformation pour outils multiples
	subprognum = debsousprog + main_prg_no$ +100   	# affectation du numero de sous prog
	nprincipal = n$  + seqinc$      				# memo du numero de ligne pour le rappel dans le sous-programme
	if sub_trnstyp$ = 3 , ptranslation       		# si on fait de la translation aller avant dans bloc ecriture decalage origine
	if sub_trnstyp$ = 2 , psub_mirror
	if sub_trnstyp$ = 1 , psub_rotate
	p_type_sous_prog
	n$, "( AVEC OUTILS MULTIPLES )", e$
	n$, "M98", subprognum, e$       				# appel du sous prog
	nprincipal = n$             					# memo du numero de ligne pour le prog principal
	#n$, "(PASSE ", sub_sec_no$, "SUR ", sub_totl_no$, sfcom, e$
	#  "Subprogram number ", sub_op_id$, e$
	#  "Actual operation ID", sub_grp_id$, e$
	#  "Transform/non-transform indicator", sub_ref_id$, e$
	#  "Iteration counter", sub_sec_no$, e$
	#  "Total number of instances", sub_totl_no$, e$

psub_call_m$   # appel sous prog en transformation pour outil unique
	#"appel sous prog en transformation", e$
	# main_prg_no$, sub_prg_no$, sub_ref_id$, sub_op_id$, sub_grp_id$, sub_trns_id$, sub_sec_no$, sub_totl_no$, sub_chn_no$, sub_inc$, e$
	#*main_prg_no$, e$
	!main_prg_no$              						# mise a jour du numero interne de sous prog en transformation pour outils multiples
	subprognum = debsousprog + main_prg_no$ +100   	# affectation du numero de sous prog
	if sub_trnstyp$ = 3 , ptranslation  			# si on fait de la translation aller avant dans bloc ecriture decalage orignie
	if sub_trnstyp$ = 2 , psub_mirror
	if sub_trnstyp$ = 1 , psub_rotate
	nprincipal = n$  + seqinc$      				# memo du numero de ligne pour le rappel dans le sous-programme
	p_type_sous_prog
	n$, "( AVEC UN SEUL OUTIL )", e$            	# affecation du parametre CN pour memo du numéro de ligne
	n$, "M98", subprognum, e$       				# appel du sous prog
	nprincipal = n$             					# memo du numero de ligne pour le prog principal

	# n$, "(PASSE ", sub_sec_no$, "SUR ", sub_totl_no$, sfcom, e$
	#  "Subprogram number ", sub_op_id$, e$
	#  "Actual operation ID", sub_grp_id$, e$
	#  "Transform/non-transform indicator", sub_ref_id, e$
	#  "Iteration counter", sub_sec_no$, e$
	#  "Total number of instances", sub_totl_no$, e$

psub_end_m_r$    # bloc system non explique dans doc des PST (a voir)

psub_st_m$    # entete sous prog en transformation
    !main_prg_no$                   		# mise a jour du numero interne de sous prog en transformation pour outils multiples
    numsubprog = debsousprog + main_prg_no$ +100    # affectation du numero de sous prog
    nomsubprog = numsubprog                 # affectation du nom de sous prog en Z
    memo_incremental = incremental          # memorisation du mode ABS INC Actuel
    incremental = sub_inc$                  # Sous prog en incremental ou absolue
    #n$ = 10                                # numero de ligne de sous prog
    #"%", e$
	numsubprog_ = numsubprog
    if incremental = 1, p_casse_modalite    # casser la modalité pour les sous prog en relatif
    p_casse_modalite_avance                 # casser la modalité le l'avance pour les sous prog
    omitseq$ = 1                            # pas du numero de ligne pour les sous prog
    if CN_textes <> 0,   [                      # entete avec commentaires
        old_spaces = spaces$
        spaces$ = 0
        if scomentsprog <> svide, [
			if Type_progno = 1, *numsubprog		# Oxxxx 
			if Type_progno = 2, *numsubprog_	# :xxxx
				space, sdcom, scomentsprog, sfcom, e$
			]
        else, [               				# entete sans commentaires     
			if Type_progno = 1, *numsubprog, e$		# Oxxxx 
			if Type_progno = 2, *numsubprog_, e$	# :xxxx 
	        ]
        n$, sdcom, snomprogentete, sfcom, e$
        n$, sdcom, *snom_entete, sfcom, e$
        n$, "(SOUS-PROGRAMME PAR -TRANSFORMATION-)", e$
        spaces$ = old_spaces
        ]
    else,       [               			# entete sans commentaires
        if Type_progno = 1, *numsubprog, e$		# Oxxxx 
		if Type_progno = 2, *numsubprog_, e$	# :xxxx 
        ]
    n$, sdcom, strtool$, sfcom, e$
    n$, *sinc_abs, e$           			# ecrire si sous prog en ABS ou INC
    gcode$ = 5              				# pour forcer l'ecriture de code G du premier bloc du sous prog
    !gcode$
    #sub_op_id, sub_prg_no, e$

psub_end_m$   # fin sous prog en transformation
    incremental = memo_incremental      	# rappel du mode INC ABS precedent
    if incremental = 1 ,n$, "G90", e$
    #n, "M99", "P#100", e$          		# fermeture de sous prog
    n$, "M99", e$               			# fermeture de sous prog
    n$, " ", e$
    omitseq$ = old_omitseq
    n$ = nprincipal             			# recuperation du numero de ligne pour prog principal
#endregion 
	
#region CALCUL & AFFICHAGE EN POSITIONNE
prot$

prot1   # calcul de l'axe A en positionné
    @old_axeA, @nbrtour
    if diviseur = 1, axeA = atan2(m8$,m9$) + (360 * nbrtour)    # pour diviseur tourne autour de X
    if diviseur = 2, axeA = atan2(m7$,m9$) + (360 * nbrtour)    # pour diviseur tourne autour de Y
    axeA = axeA * sens_A_B                                      # prise en compte du sens de rotation
    epsi = axeA - old_axeA                      				# variation angulaire
    sensA = 0
    if epsi > 0, sensA = 1                      				# sens de la variation
    if epsi < 0, sensA = -1
    if Mode_reglage_PP = 1, n$, "epsi", *epsi, "sensA", *sensA, "nbrtour", *nbrtour, e$
    epsi = abs(epsi)
    @epsi, @sensA                               				# mise a jour
    if epsi > 180,  [                           				# optimisation de l'angle
        axeA = axeA - (360 * sensA)
        epsi = axeA - old_axeA
        sensA = 0
        if epsi > 0, sensA = 1
        if epsi < 0, sensA = -1
        ]
    nbrtour = int (axeA / 360)                  				# Calcul du nombre de tour
    if axeA >90, axeA = axeA - 360  
    #perreur_ANGLE_ROT   #0200
    perreur_ANGLE_ROT2  #0098
    if Mode_reglage_PP = 1,  "prot1-----valeur corrigee------", *old_axeA, *axeA,*epsi,*sensA,*nbrtour, e$

prot2   # affichage de l'angle au changement d'outil pour positionné
    Perreur_origine_plan    #0079
    Perreur_nom_RUD         #0080
    if useaxe <> 0, [       									# afficher les angles que si machine avec Axe A
        @old_axeA, @axeA        								# rappel
        #epsi = old_axeA - axeA 									# regarder si on tourne
        #epsi = abs(epsi)
        if Mode_reglage_PP = 1, n$, "PROT2", *old_axeA, *axeA, *epsi, e$
        #if epsi <> 0,    [      								# si ca tourne
	        bloque = 2              							# déblocage de l'axe A
	        n$, sbloque, e$
	        if mi3$ = 0, bloque = 1         					# preparer le blocage de l'axe A
			p_affiche_type_rot
			if Systeme_rot_plans = 1 | Systeme_rot_plans = 3, n$, poriusi, e$
	        n$, sbloque, e$     							# bloquer l'axe A
        #]
       ]
    old_axeA = axeA         # memo de la position de l'axe A affiché

prot3   # affichage de l'angle au changement d'outil nul pour positionné
    #!x$, !y$, !z$
    Perreur_origine_plan    #0079
    Perreur_nom_RUD         #0080
    if useaxe <> 0, [       								# afficher les angles que si machine avec Axe A
        @old_axeA, @axeA        							# rappel
        epsi = old_axeA - axeA  							# regarder si on tourne
        epsi = abs(epsi)
        if epsi <> 0,    [      							# si ca tourne
            rot_tlchg_zero = 1  #0049
            xabs = x$           							# reprendre les positions xyz avant le dégagement
            yabs = y$
            zabs = z$
            p_degage_4_axes        							# Dégagement machine avant la rotation de l'axe A
            bloque = 2          							# deblocage de l'axe A
            n$, sbloque, e$
            if mi3$ = 0, bloque = 1         				# preparer le blocage de l'axe A
			p_affiche_type_rot
            if Systeme_rot_plans = 1 | Systeme_rot_plans = 3, n$, poriusinul, e$
            n$, sbloque, e$  
			gcode$ = 0	
            if incremental = 0, [           				# Rappel des positions XYZ avant le dégagement
                #n$, sgcode, sinc_abs, *xabs, *yabs, e$
                #n$, sgcode, *zabs, e$
                #!x$, !y$, !z$
                ]
            ]
        ]
    old_axeA = axeA         								# memo de la position de l'axe A afficher
	
p_affiche_type_rot
	if Systeme_rot_plans = 0, [	#pas de calculs "TOUJOURS EN G54"
		if incremental = 0, n$, sgcode, sinc_abs, *axeA, !axeAi, e$	
	    else, n$, sgcode, sinc_abs, !axeA, *axeAi, e$
		] 
	if Systeme_rot_plans = 1, [	#PLANS "G68..."
		if incremental = 0, n$, sgcode, sinc_abs, "G68", *axeA, !axeAi, e$
	    else, n$, sgcode, sinc_abs, !axeA, "G68", *axeAi, e$
		] 
	if Systeme_rot_plans = 2, [	#SOUS-PROGRAMME de calcul --> usi en G55
		if incremental = 0, n$, sgcode, sinc_abs, *axeA, !axeAi, e$
	    else, n$, sgcode, sinc_abs, !axeA, *axeAi, e$
		n$, "M98 P8000", e$
		n$, "(G55 ACTIF)", e$
		] 
	if Systeme_rot_plans = 3, [	#1 ORIGINE PAR ANGLE
		if incremental = 0, n$, sgcode, sinc_abs, sdcom, *axeA, sfcom, !axeAi, e$
	    else, n$, sgcode, sinc_abs, !axeA, sdcom, *axeAi, sfcom, e$
		]
#endregion

#region calculs_et_affichage_rotations_en_continu_et_substitution
#------------------- 4 Axes continue en substitution d'axe ---------------------------------------
p_Apos  # calcul de l'axe A/B en substitution
    @x$, @y$
    if diviseur = 1, A_pos = (y$ * 360 / (pi$ * rotdia$)) * sens_A_B   	# pour 4eme axe autour de X (substituer Y)
    if diviseur = 2, A_pos = (x$ * 360 / (pi$ * rotdia$)) * sens_A_B   	# pour 4eme axe autour de Y (substituer X)
    if rot_AB_un_sens = 1, while A_pos < 0, A_pos = A_pos +360			#0126
    p_zdev          # calcul du Z en substitution

p_zdev  # calcul du Z en substitution
    @z$, @rotdia$
    zdev  = z$ +(rotdia$ /2)    # Z pour continue substitutuion en ABS
    zabs = zdev

p_Apos_affiche_subs  # affichage de l'angle au chg outil nul pour continue
    if useaxe <> 0, [
        @old_axeA, @axeA
        epsi = old_axeA - axeA
        epsi = abs(epsi)
           if epsi <> 0,    [
            p_degage_4_axes
            bloque = 2
            n$, sbloque, e$
            if incremental = 0, n$, sgcode, poriusi, sinc_abs, *axeA, !axeAi, sbloque, e$
            else, n$, sgcode, sinc_abs, poriusi, !axeA, *axeAi, sbloque, e$
            ]
        ]
    old_axeA = axeA

#------------------- 4 Axes continue en fonctions 5 Axes ---------------------------------------
paxeA   # Affichage de l'axe A
    #*old_axeA1, *axeA1
    delta_axeA1 = axeA1 - old_axeA1
    if delta_axeA1 >  180, delta_axeA1 = delta_axeA1 - 360
    if delta_axeA1 <  -180,delta_axeA1 = delta_axeA1 + 360
    axeA1_dep = axeA1_dep + delta_axeA1
    old_axeA1 = axeA1
    axeA = axeA1_dep * sens_A_B
    old_axeA = axeA
    nbrtour = int (axeA / 360) * sens_A_B
    if incremental = 0, axeA, !axeAi
    if incremental = 1, !axeA, axeAi

pcalculpmx  # Calacul de l'axe A
    #*x, *y, *z, *u, *v, *w, e$
    vx = u$ - x$
    vy = v$ - y$
    vz = w$ - z$
    if diviseur = 1, axeA1 = atan2(vy,vz) # on tourne autour de x
    if diviseur = 2, axeA1 = atan2(vx,vz) # on tourne autour de Y
    if axeA1 >  180, axeA2 = 360 - axeA1
    if axeA1 <= 180, axeA2 = axeA1 * -1
    if diviseur = 1, [          # on tourne autour de x
        new_x = x$
        new_y = z$*sin(axeA2) + y$*cos(axeA2)
        new_z = z$*cos(axeA2) - y$*sin(axeA2)
        ]
    if diviseur = 2, [          # on tourne autour de Y
        new_x = z$*sin(axeA2) + x$*cos(axeA2)
        new_y = y$
        new_z = z$*cos(axeA2) - x$*sin(axeA2)
        ]
    xabs = new_x
    yabs = new_y
    zabs = new_z

pmx$        # Gestion 4 axes continue avec fonction 5 axes
    if opcode$ = 16, ex$    #0072
    #*nextop$
    if debutpmx = 0,	[
        pcalculpmx
        if fr$ = -2, gcode$ = 0
        else, gcode$ = 1
        if gcode$ = 1,	[
            @xabs, @yabs, @old_x, @old_y
            if xabs <> old_x | yabs <> old_y, n$, sinc_abs, poriusinul, pcorr, sgcode, pxyz , paxeA, pfr,  e$
            else, n$, sinc_abs, poriusinul, sgcode, pxyz, paxeA, pfr,e$
            #n$, sinc_abs, poriusinul, pcorh, sgcode, pxyz, paxeA, pfr,  e$
            ]
        else,   n$, sinc_abs, sgcode, pxyz, paxeA, e$
        ]
    if debutpmx = 1, pmx_end$
    old_x = xabs
    old_y = yabs
    old_z = zabs

pmx_end$
    if opcode$ = 16, ex$    #0072
    if debutpmx = 1,	[
        pcalculpmx
        bloque = 2
        n$, "(POSITION ", paxeA, sfcom, e$
        n$, sbloque, e$
        gcode$ = 0
        n$, *sinc_abs, *sgcode, *axeA, e$
        n$, sinc_abs, *sgcode, "G17", poriusi, *xabs, *yabs , ssa, *spdlon, e$
        n$, sinc_abs, pcorh, sgcode, *zabs, e$
        !x$, !y$, !z$, !xr$, !yr$, !zr$
        p_modal
        old_x = xabs
        old_y = yabs
        old_z = zabs
        ]
    debutpmx = 0
#------------------- 4 Axes positionné ---------------------------------------
prot0$  #   Tool plan view matrix du gcode 1014
#endregion

#region approches_degagements	
#   Gestion du degagement de la machine au debut de prog
p_degage_debut       #   Gestion du degagement de la machine au debut de prog
    if deg_debut <> 0, [
	    gcode$ = 0              			# Degagement en Rapide
    	if deg_debut >= 1 & deg_debut < 6, n$, ptype_deg, *degageZ, e$   	# si degager en Z		# degager en Z
	    if deg_debut = 2 | deg_debut = 4, n$, ptype_deg, *degageX, e$  		# si degager en Z et X	# degager en X
	    if deg_debut = 3 | deg_debut = 4, n$, ptype_deg, *degageY, e$  		# si degager en Z et Y	# degager en Y
	    if deg_debut = 5, n$, ptype_deg, *degageX, *degageY, e$         	# si degager en Z et XY	# degager en X Y
        if deg_debut = 6, n$, S_macro_deg, e$, #n$, "autres fonctions apres MACRO", e$ 	# si Mode degagement uniquement en MACRO
		ptype_deg_Fin
		]
		
#   Gestion du degagement de la machine avant appel outil
p_degage_ptlchg     #   Gestion du degagement de la machine avant appel outil
    if deg_outil <> 0, [
	    gcode$ = 0              			# Degagement en Rapide
	    if deg_outil >= 1 & deg_outil < 6, n$, ptype_deg, *degageZ, e$            		# si degager en Z		# degager en Z
	    if deg_outil = 2 | deg_outil = 4, n$, ptype_deg, *degageX, e$ 				# si degager en Z et X	# degager en X
	    if deg_outil = 3 | deg_outil = 4, n$, ptype_deg, *degageY, e$ 	# si degager en Z et Y	# degager en Y
	    if deg_outil = 5, n$, ptype_deg, *degageX, *degageY, e$             			# si degager en Z et XY	# degager en X Y
        if deg_outil = 6, n$, S_macro_deg, e$, #n$, "autres fonctions apres MACRO", e$ 	# si Mode degagement uniquement en MACRO       
		ptype_deg_Fin
		]

#   Gestion du degagement de la machine fin de prog
p_degage_fin #   Gestion du degagement de la machine fin de prog
   	if deg_fin <> 0, [
		gcode$ = 0              			# Degagement en Rapide
	    if deg_fin >= 1 & deg_fin < 6, n$, ptype_deg, *degageZ, e$ 		# si degager en Z		# degager en Z
	    if deg_fin = 2 | deg_fin = 4, n$, ptype_deg, *degageX, e$    				# si degager en Z et X	# degager en X
	    if deg_fin = 3 | deg_fin = 4 | deg_fin = 6, n$, ptype_deg, *degageY, e$  	# si degager en Z et Y 	# degager en Y
	    if deg_fin = 5, n$, ptype_deg, *degageX, *degageY, e$              			# si degager en Z et XY # degager en X Y
        if deg_fin = 6, n$, S_macro_deg, e$, #n$, "autres fonctions apres MACRO", e$ 	# si Mode degagement uniquement en MACRO
		ptype_deg_Fin
		]

#   Gestion du degagement de la machine avant rotation plateau
p_degage_4_axes        #   Gestion du degagement de la machine avant rotation plateau
	if deg_4_axes <> 0, [
	    if mr1$ = 0, [
		    gcode$ = 0              		# Degagement en Rapide
			spaces$ = 0
		    #p_casse_modalite            	# casser la modalite pour rappel des XYZ
		    if deg_4_axes >= 1 & deg_4_axes < 6, n$, ptype_deg, *degageZ4, e$	# si degager en Z		# degager en Z
		    if deg_4_axes = 2 | deg_4_axes = 4, n$, ptype_deg, *degageX4, e$  	# si degager en Z et X 	# degager en X
		    if deg_4_axes = 3 | deg_4_axes = 4, n$, ptype_deg, *degageY4, e$  	# si degager en Z et Y	# degager en Y
		    if deg_4_axes = 5, n$, ptype_deg, *degageX4, *degageY4, e$          # si degager en Z et XY	# degager en X Y
		    if deg_4_axes = 6, n$, S_macro_deg, e$ #n$, "autres fonctions apres MACRO", e$ 	# si Mode degagement uniquement en MACRO
			ptype_deg_Fin
			]
	    if mr1$ > 0, n$, "G0Z", no_spc$, *mr1$, e$ 					#DEGAGEMENT ABSOLU Z de la VALEUR DANS mr1$ 
		if mr1$ < 0, n$, "G0G91Z", no_spc$, *mr1$, e$, n$, "G90", e$ 	#DEGAGEMENT INCREMENTAL Z de la VALEUR DANS mr1$  
		]
	else, gcode$ = 0, n$, "G0Z", no_spc$, *zr$, *sgcode, strcantext, e$				#Sinon valeur de sécu de la valeur de l'opération MC
	#time de dégagement au pt de sécu
	temps_4_axes = 1
	p_calc_long_time
	#time retour à la nouvelle position après la rotation
	if deg_4_axes <> 0, [	
		if degageX = -1, Delta_X = nextx$ - xh$, else, Delta_X = nextx$ - degageX 
		if degageY = -1, Delta_Y = nexty$ - yh$, else, Delta_Y = nexty$ - degageX 
		if degageZ = -1, Delta_Z = nextz$ - zh$, else, Delta_Z = nextz$ - degageX 
		p_calc_long_time
		]
	temps_4_axes = 0

#   Gestion du degagement de l'outil lors de l'inspection de l'état de la plaquette 
pdeg_inspection_plaquette
	if deg_inspection_plaq <> 0, [
	    gcode$ = 0              		# Degagement en Rapide
	    #p_casse_modalite            	# casser la modalite pour rappel des XYZ
	    if deg_inspection_plaq = 1, n$, ptype_deg, *deg_insp_Z, e$             					# si degager en Z		# degager en Z
	    if deg_inspection_plaq = 2 | deg_inspection_plaq = 4, n$, ptype_deg, *deg_insp_X, e$	# si degager en Z et X 	# degager en X
	    if deg_inspection_plaq = 3 | deg_inspection_plaq = 4, n$, ptype_deg, *deg_insp_Y, e$  	# si degager en Z et Y	# degager en Y
	    if deg_inspection_plaq = 5, n$, ptype_deg, *deg_insp_X, *deg_insp_Y, e$          		# si degager en Z et XY	# degager en X Y
	    if deg_inspection_plaq = 6, n$, S_macro_deg, e$, #n$, "autres fonctions apres MACRO", e$
		ptype_deg_Fin
		]
	else, gcode$ = 0, n$, "G0Z", no_spc$, *zr$, *sgcode, strcantext, e$	#Sinon valeur de sécu dans l'opération MC
	
ptype_deg
	if type_deg = 1, "G0G28G91"
	if type_deg = 2, "G0G53"
	
ptype_deg_Fin 
 	if type_deg = 1, n$, "G90", e$	
	if type_deg = 6, n$, "G90 (A VALIDER)", e$
#endregion

#region decallages_origines
#0046   Gestion des Origine d'usinages G54 a G59 et G54.1 P1 à G54.1 P49
poriusi     #0045
    @workofs$,@oldworkofs
    #n$, "gw", *g_wcs, e$
    #n$, "workofs", *workofs$, e$
    #n$, "oldworkofs", *oldworkofs, e$
    if workofs$ >0 & mr4$ = 1,	[
        g_wcs = workofs$ + 53
        if g_wcs = 54, *g_wcs
        if g_wcs > 54 & g_wcs < 60, *g_wcs
        if g_wcs > 59 & g_wcs < 108,
            [
            originebis = g_wcs - 59
            *originebis
            ]
        #oldworkofs = workofs$
        ]
    else, g_wcs = 54, *g_wcs
    if sinfo_origine <> svide,	[
        n$, "( INFO DECALAGE :)", e$ #0070
        sdcom, *sinfo_origine, sfcom, e$ #0070
        ]
    oldworkofs = workofs$
    if util_x_ori = 1, perreur_Aff_Ori  #0200 #0199
    #n$, "gw", *g_wcs, e$
    #n$, "workofs", *workofs$, e$
    #n$, "oldworkofs", *oldworkofs, e$

#   Gestion des G54 a 59 et G54.1 P1 à G54.1 P49 pour changement outil mul
poriusinul  #0045
    @workofs$, @oldworkofs
    #"nul  g..    ", *g_wcs, "  num   ", *workofs$,  "  mr  ", *mr4$,  "num prec", *oldworkofs, "FIN",
    if workofs$ <> oldworkofs,
        [
        if workofs$ >0 & mr4$ = 1,
            [
            g_wcs = workofs$ + 53
            if workofs$ <> oldworkofs & (g_wcs = 54), *g_wcs    #0073
            if g_wcs < 54, g_wcs = 54, *g_wcs, e$, n$, *sgcode, *xabs, *yabs, e$
            if g_wcs > 54 & g_wcs < 60, *g_wcs, e$, n$, *sgcode, *xabs, *yabs, e$
            if g_wcs > 59 & g_wcs < 108,
                [
                originebis = g_wcs - 59
                *originebis
                ]
            ]
        #else, n$, "G54", e$
        sdcom, *sinfo_origine, sfcom, e$    #0070
        oldworkofs = workofs$
        ]
    if util_x_ori = 1, perreur_Aff_Ori #0200

panulldecalageg52
    memo_incremental = incremental
    incremental = 0
    sub_trnsx$ = 0
    sub_trnsy$ = 0
    sub_trnsz$ =0
    n$, sinc_abs, "G52", *sub_trnsx$, *sub_trnsy$, *sub_trnsz$, e$
    decalage = 0
    incremental = memo_incremental
#endregion

#region corps_Pheader_a_Peof

#region Pbloc_appelEs	
# Convertir les arcs en lignes si travail en developpe
plinarc  # Convertir les G2 G3 en G1
    linarc$ = 1
    if tolquestion <> 1, q15
    tolquestion = 1
	
#   Gestion de la valeur de l'avance pour l'afficher
pfr     # avance sur contour
	avance = fr_pos$
	avance
	result = newfs (4, avance)  # affectation en format modal
	p_erreur_avanceS    #0102

pavanceperce    # Avance en percage
    #p_casse_modalite_avance                # pour forcer l'affichage de l'avance
    pfr                     # Affichage de l'avance

#   Gestion de la correction outil et du numéro de correcteur
pcorh       # Correction de longueur
    correcteur_H = tlngno$
    if outils_param = 0 & correcteur_H <> old_correcteur_H, #0050 sans les parametres
        [
        sg43, "H", *correcteur_H
        ]
    if outils_param = 1 & correcteur_H <> old_correcteur_H, #0050 avec les parametres
        [
        correcteur_H_param = correcteur_H
        correcteur_H_param = correcteur_H_param + 500
        sg43, "H", 35, *correcteur_H_param
        correcteur_H = correcteur_H_param
        ]
    old_correcteur_H = correcteur_H
    perreur_H   #0200

pcancelcc$  # Annulation de correction de rayon

# -------------------------LECTURE DES PARAMETRES DE SUREP ET DE TYPE DE CORRECTION--------------------------------------------
paramcomp   # Type de correction d'outil au changement d'operation
	if info_corr = 1 & op_id$ <> old_op_id  & CN_textes <> 0, [ # si afficher les infos de compesation et changement d'operation et texte supporté
		@cc_computer$, @cc_pos$                 # mise à jour des variables
		#cc_comp 41 42 0
		#cc_pos   1  2 0
		if cc_pos$ = 0  & cc_computer$ = 0,   type_comp = 0 #AUCUNE
		if cc_pos$ = 2  & cc_computer$ = 0,   type_comp = 1 #ARMOIRE DROITE
		if cc_pos$ = 1  & cc_computer$ = 0,   type_comp = 2 #ARMOIRE GAUCHE
		if cc_pos$ = 0  & cc_computer$ = 42,  type_comp = 3 #ORDINATEUR DROITE
		if cc_pos$ = 0  & cc_computer$ = 41,  type_comp = 4 #ORDINATEUR GAUCHE
		if cc_pos$ = 2  & cc_computer$ = 42,  type_comp = 5 #USURE DROITE
		if cc_pos$ = 1  & cc_computer$ = 41,  type_comp = 6 #USURE GAUCHE
		if cc_pos$ = 1  & cc_computer$ = 42,  type_comp = 7 #USURE INVERSE DROITE
		if cc_pos$ = 2  & cc_computer$ = 41,  type_comp = 8 #USURE INVERSE GAUCHE
		if opcode$ = 19, type_comp = 0              # mis sur aucune a la place d'ordinateur pour surfacage (bug)
		spaces$ = 0                     # suprimer les espaces
		if numcoment = 0, omitseq$ = 1              # si pas de numero de bloc pour commentaires enlever les numeros de bloc
		if opcode$ <> 3, n$, sdcom, stype_comp, sfcom, e$   # pour ne pas afficher les infos si percage
		spaces$ = old_spaces                    # rappel des espaces
		omitseq$ = old_omitseq                  # rappel des numeros de bloc
	    ]

paramsurep  # Affichage des surep au changement d'opération
	if info_surep = 1 & CN_textes <> 0, [   # si afficher les infos de compensation et changement d'operation et texte supporté #op_id$ <> old_op_id  &
		if surepl <> old_surepl | surep <> old_surep | surep3d <> old_surep3d, [
	        spaces$ = 0                         # suprimer les espaces
	        if numcoment = 0, omitseq$ = 1                  # si pas de numero de bloc pour commentaires enlever les numeros de bloc
	        # surep pour surfaçage
	        if opcode$ = 19, n$, sdcom, *surepl, sfcom, e$
	        # surep 2d
	        if opcode$ <> 3 & opcode$ < 5  & opcode$ <> 19, n$, sdcom, *surep, space, *surepl, sfcom, e$
	        # surep 3d
	        if opcode$ <> 3 & opcode$ >= 5 & opcode$ <> 19, n$, sdcom, *surep3d, sfcom, e$
	        ]	    
		if surep_OP3D_XY <> 0, n$, sdcom, *surep_OP3D_XY, sfcom, e$
		if surep_OP3D_Z <> 0, n$, sdcom, *surep_OP3D_Z, sfcom, e$		
		old_surep = surep
	    old_surepl = surepl
	    old_surep3d = surep3d
		]
		
#   Gestion des gammes de vitesse de broche
pgamme
    @ssa
    #if ssa < 1500, "M38"
    #else, "M39

#---------------------------------
P_f_val_origine_depart_idem #0079
    Old_Val_origine_Z = Val_origine_Z
    Old_Val_origine_Y = Val_origine_Y
    Old_Val_origine_X = Val_origine_X
    Sold_snom_RUD = snom_RUD    #0080"*

pugv_off  # arret pacro ugv
    if ugv = 1,  n$,"G8 P0",e$
    ugv = 0

pugv    # macro pour activation code ugv
    if opcode$ <> 3 & ugv = 0,	[
        n$,"G8 P1",e$
        ugv = 1
        ]
    if opcode$ = 3 & ugv = 1,	[
        n$,"G8 P0",e$
        ugv = 0
        ]	

p_rot_perc_profond  #0100 ROT BROCHE POUR PERCAGE PROFOND
   _ssa = ss$
   ssa = ssa * 0.1
   if ssa > 500, ssa = 500

p_compteur_opErations
	if compteur_opErations = 1, [
		if op_id$ <> old_op_id,	[
	        num_op_outil = 1
	        comment$
			increment_op = increment_op + 1
	        if num_op_outil = 1, n$, sdcom, "OP.: ", *increment_op_outil, *increment_op, no_spc$, *nbr_opErations, sfcom, e$, num_op_outil = 0
	        increment_op_outil = increment_op_outil + 1
	        ]
		]	
	#endregion

#region pheader
p_Type_appel_outil
	if Type_appel_outil	= 1, [
		nom_outil    		= 0    	# Affiche le NOM de l'outil
		outils_param 		= 0    	#0053 pour Valider / dévalider l'affichage des outils en parametres
		]
	if Type_appel_outil	= 2, [
		nom_outil    		= 1
		outils_param 		= 0
		]	
	if Type_appel_outil	= 3, [
		nom_outil    		= 0
		outils_param 		= 1
		]	
pheader$     # ENTETE DE PROGRAMME
	if Mode_reglage_PP = 1, [
		n$, *axis_label, *srot_label, *rot_zero, *rot_dir, *rot_index, *rot_angle, *rot_type, *min_speed, 
			*maxfrinv_m, *maxfrdeg, *maxfeedpm_m, *all_cool_off, *v9_coolant, e$
		]	
    compt_axes_rot = 0          						# pour remetre a zero le nombre d'axe rotatif avant la lecture de la conbinaison d'axe
    useaxe = 0
    if omitseq$ = 1, numcoment = 0      				# si pas de numero de bloc ne pas numeroter les commentaires	
    debut = 1               							# flag pour debut de prog
    p_Type_appel_outil
	old_omitseq = omitseq$          					# memo du mode de numerotation de ligne
    old_spaces = spaces$            					# memo du nombre d'espaces
	if progno$ = 0, [
	    #Var_2_question = rpar(s_question_20, 1)    	# convertir la valeur texte en valeur numerique
		#while Var_2_question = 0, q20           		# Question --> numéro de programme (MC=0)
		q20
		progno$ = Var_2_question
		]
	progno_ = progno$
	entete_ = 1 										#0025 --> on passe dans ENTETE
	p_affiche_infos_config_armoire
    "%", e$
    if CN_textes <> 0,  [                        		# Si la machine accepte les commentaires
        spaces$ = 0                             		# suprimer les espaces
        if numcoment = 0, omitseq$ = 1          		# si pas de numero de bloc pour commentaires enlever les numeros de bloc
        if change_nom = 1, [
            pnom_nc
            ptest_nom
            spaces$ = 0 
            snomprogentete = ucase(snomprogentete)
            #progno$, sdcom, snomprogentete, sfcom,e$  
            if Type_progno = 1, progno$, e$		# Oxxxx 
			if Type_progno = 2, *progno_, e$	# :xxxx                            
            n$, sdcom, snomprogentete, sfcom, e$
            sdcom, *snom_entete, sfcom, e$  			#0300  snom_entete,
            spaces$ = 1 
            ]
        else, [
			if Type_progno = 1, progno$		# Oxxxx 
			if Type_progno = 2, *progno_ 	# :xxxx 
				sdcom, sprogname$, sfcom, e$
			]
        ]
	if CN_textes = 1, [                      			# Si la machine accepte les commentaires  
		spaces$ = 1
		n$, "( *****************************)", e$
		n$, sdcom, s_nom_machine_entete, sfcom, e$
		n$, sdcom, "CREE LE ", date$, " A ", time$, sfcom, e$
		if entete_questions = 2, p_questions_entete 	# nouvelles questions d'entête
		if entete_questions = 3, [                   	# ANCIEN SYSTEME questions
	        q2, q3, q4, #, q8
	        n$, "( PAR . xxxx )", e$
	        n$, "( CLIENT  .", sclient, sfcom, e$
	        n$, "( PIECE   .", spiece, sfcom, e$
	        n$, "( NUMERO  .", snumplan, sfcom, e$
	        n$, "( INDICE PLAN  :", sindiceplan, sfcom, e$
	        n$, "( ORIGINE :             )", e$
	        n$, "( X .", sorx, sfcom, e$
	        n$, "( Y .", sory, sfcom, e$
	        n$, "( Z .", sorz, sfcom, e$
	        n$, "( A_B .", sor_A_B, sfcom, e$
	        n$, "( ORIENTATION PIECE )", e$
	        n$, "( )", e$
	        n$, "( *****************************)", e$
	        n$, "( )", e$
	        ]
		else, comment$	
		if entete_questions = 1, 	[
			if entete_ = 1 & longTexte = 0, 	[
				n$, "( ***************************** )", e$
				n$, "( *****OP POUR MODIF***** )", e$   #0026
				]
			]
		n$, "( *****************************)", e$
		spaces$ = 0		               
		n$, " ", e$                            
	    if tooltable$ <> 0, [
	        n$, sdcom, "LISTE OUTILS", sfcom, e$ 
	        if outils_param = 1,	[
	            n$, sdcom, "MODIFIER LES NUMEROS D OUTILS", sfcom, e$
	            n$, sdcom, "UNIQUEMENT DANS LA LISTE D OUTILS APRES LE =", sfcom, e$
	            n$, sdcom, "NE PAS MODIFIER LES -T H ET D- DANS LE PROGRAMME", sfcom, e$
	            n$, " ", e$
	            ]
	        ]
	    spaces$ = old_spaces        # rappel des espaces
	    omitseq$ = old_omitseq      # rappel des nummeros de bloc
	    ]
	else, [             # Si la machine n'accepte pas les commentaires, ne mettre que le numero
		if Type_progno = 1, progno$, e$		# Oxxxx 
		if Type_progno = 2, *progno_, e$	# :xxxx 
		]
#endregion

#region prEparation outils en NOM 
# Tool Preselect variables
next_tlchg_gcode   	: 0
is_next_tlchg_phys 	: no$
sinvalid          	= "-99999"
read_counter 		: 0     #Used as a counter in pstagetool
first_op_id  		: 0     #op_id$ for first operation
#strings
stoolname    		: ""    #Return string for functions
#sblank       		: ""
s_plus_outil 		: "-99999"
stoolname_err      	: "ERREUR - OUTIL APPELE SANS NOM." + no2asc(13) + no2asc(13) +
                       "See tool_as_name in pst to set tool call format and tool definition in operation to set tool name."
#endregion

#region appel_outils
pstagetool      #Pre-stage tools	#0001 en plus pour afficher le NOM DE L'OUTIL SUIVANT
    if bldnxtool$ = 1, [
        if nom_outil = 1,  #Tool call uses tool name
          [  
          if ttblend$,  #If this is the last toolchange of the program
            [
            if type_prep_outil = 1,  #stage first tool at last toolchange
              [
              first_op_id = streaminfo(1, 1)             #Get the operation ID for the first operation in the sequence
              stoolname = opinfo(10094, first_op_id, 1)  #Get the tool name for the first operation
              if stoolname = sblank, stoolname = "ERROR-BLANK_NAME"
              n$, 'TOOL DEF "', no_spc$, stoolname, no_spc$, '"', e$  #Stage first tool
              ]
            ]        
		  #else,  #stage tool at every toolchange
            #[
			next_tlchg_gcode = opinfo(92, 1)
            if next_tlchg_gcode = 1002, stoolname = opinfo(10094, 1)
            else,	[
            read_counter = 1
              is_next_tlchg_phys = no$
              while is_next_tlchg_phys = no$,
              [
              read_counter = read_counter + 1
                next_tlchg_gcode = opinfo(92, read_counter)
                if next_tlchg_gcode = 1000, is_next_tlchg_phys = no$
                else,
                  [
                  stoolname = opinfo(10094, read_counter)
                  is_next_tlchg_phys = yes$
                  ]
                ]
              ]
            if stoolname = sblank, stoolname = "ERREUR-OUTIL SANS NOM"
            if stoolname <> s_plus_outil, n$, 'TOOL DEF "', no_spc$, stoolname, no_spc$, '"',  e$  #Stage first tool
            #]
          ]
        ]
		
p_info_outils
	strtool$ = ucase(strtool$)
	spaces$ = 1
	if Type_infos_outil	= 1, n$, sdcom, strtool$, sfcom, e$
	if Type_infos_outil	= 2, n$, sdcom, ptype, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, sfcom, e$ 
	if Type_infos_outil	= 3, n$, sdcom, ptype, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, sfcom, e$
	if Type_infos_outil	= 4, n$, sdcom, strtool$, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, sfcom, e$
	spaces$ = 0

p_affiche_outil    # ecriture de l'appel outil pour psof et ptlchg
    num = num + 1
    pnomgroupe                              							# Nom du groupe d'operation
    P_f_val_origine_depart_idem 			#0079
    p_erreur_dif_T_H_D 						#0097
    perreur_pas_fil  						#0090
    if tool_typ$ = 5, ss$ = (abs(ss$))*-1   							# si taraud à gauche inverser le sens de broche
    ssa = abs(ss$)  						#0100
	n$, " ", e$
    if nextdc$ = 14, p_rot_perc_profond 								#0100 ROT BROCHE POUR PERCAGE PROFOND
	comment$
	#pcan
    if Position_info_outil = 1, p_info_outils
    #--------------- infos outil -------------------------------------------
    if CN_textes <> 0,  [                  			# si affichage des infos outil
        strtool$ = ucase (strtool$)             						# convertir en MAJUSCULES le nom outil
        spaces$ = 0                     
		if nom_outil = 1, [
            if strtool$ = svide, n$, sdcom, "ERREUR-OUTIL SANS NOM", sfcom, e$
            else, num, " T-A DEFINIR ", '"', *strtool$, '"', "M6", e$
			if rpd_typ$ <> 7 & bldnxtool$ = 1, pstagetool
            ]			
        if outils_param = 0 & nom_outil = 0, [  #0050 sans les parametres
			outil = t$
			outil_suivant = next_tool$
        	num, " ", *outil, "M6", e$			
	    	if rpd_typ$ <> 7 & bldnxtool$ = 1, n$, *outil_suivant, e$		
            #if smanu <> svide, n$, sdcom, "T", paramT1, ptype, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, *smanu, sfcom ,e$       #strtool$,
            #else,           n$, sdcom, "T", paramT1, ptype, *smatT,*paramT5, ptypeBoutT, pangleT, phauteurT, ppas, sfcom ,e$                    #strtool$,
            ]
        if outils_param = 1 & nom_outil = 0,  [ #0050 avec les parametres
			outil_param = t$
		    outil_suiv_param = next_tool$
		    outil_param = outil_param + 500
		    outil_suiv_param = outil_suiv_param +500
		    num, " T", 35, *outil_param, "M6", e$
		    if rpd_typ$ <> 7 & bldnxtool$ = 1, n$, "T", 35, *outil_suiv_param, e$
            #paramT1 = paramT1 + 500
            #if smanu <> svide, n$, sdcom, 35, paramT1, ptype, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, *smanu, sfcom ,e$        #strtool$,
            #else,           n$, sdcom, 35, paramT1, ptype, *smatT,*paramT5, ptypeBoutT, pangleT, phauteurT, ppas, sfcom ,e$                 #strtool$,
            ]	
        ]
	if Position_info_outil = 2, p_info_outils
	if deg_apres_outil > 0, [
		old_type_deg = deg_outil		# Memo Valeur
		deg_outil = deg_apres_outil		# Affectation pour Valeur deg. apres outil
		p_degage_ptlchg					# Retour suivant Valeur deg. apres outil
		deg_apres_outil = old_type_deg	# Réaffectation de la valeur de base
		]
	if CN_textes <> 0, paramcomp                        				# afficher le type de compensation
	if CN_textes <> 0, paramsurep                       				# afficher les surepaisseur
	pcan
	@_scycle
	if _scycle >= 8, [                    								#0047
	    n$, "M5 M9", e$ 
	    palpeur = 1
	    palpage = 1
	    ]
	if drillcyc$ <> 14, n$, *ssa, pgamme, *spdlon, e$, n$, p_lubrif_ON, e$    #0091 ROT BROCHE SAUF PERCAGE PROFOND
	comment$                                 
	debut = 0
	gcode$ = 5
	!gcode$
	if _scycle < 8, perreur_vit_broche
#endregion

#region psof_debut
psof0$       # DEBUT DE PROGRAMME pour T=0
    psof$

psof$        # DEBUT DE PROGRAMME
	P_f_val_origine_depart_idem 				#0079
	plireaxes                   				# Lecture des parametres de la combinaison d'axes uniquement
	if outils_param = 1,  [  					#0050 avec les parametres
	    spaces$ = 0
	    n$, " ", e$
	    n$,  sdcom, 35, "549 =X - X= NUMERO DU CORRECTEUR EN PLUS)", e$
	    n$,  "(--T -- NUM. OUTIL CONCERNE)", e$
	    spaces$ = 1
	    ]
	if tooltable$ <> 0 & CN_textes <> 0, [      # Si liste des outils et textes supportés
	    old_spaces = spaces$        			# Memo du nombre d'espaces
	    if numcoment = 0, omitseq$ = 1  		# Si pas de numero sur les commentaires
	    spaces$ = 0
	    n$, " ", e$                 
	    spaces$ = old_spaces
	    omitseq$ = old_omitseq
	    ]
    #0085
    ptravel
    pwritbuf5
    spaces$ = 0
    if output_z = yes$, n$, "(TRAVAIL MAX PIECE ", *z_tmax, sfcom, e$
    if output_z = yes$, n$, "(TRAVAIL MIN PIECE ", *z_tmin, sfcom, e$
    ## subout$ = 0
    gcode$ = 0
    plane$ = 3                  						# pour focer le rappel G17 G18 G19
    !plane$
    old_origine = -9999             					# pour forcer l'affichage du G54 au chg outil
    old_correcteur_H = -99999           				# pour forcer l'appel du G43
    incremental = 0                 					# Travail en Absolue
    n$, *sgcode, poriusi, "G90G40G80G98G17", e$    		# Initialisation de la machine
    incremental = 2                 					# pour re forcer l'affichage du mode Absolue
    !incremental
    incremental = 0
	p_degage_debut
    p_affiche_outil                       
    #0085
    if output_z = 1, preadbuf5
    if output_z = 1, n$, sdcom, "MAX OUTIL ", *max_depth, sfcom, e$
    if output_z = 1, n$, sdcom, "MIN OUTIL ", *min_depth, sfcom, e$
	p_compteur_opErations
    p_placement_apres_chang_outil                   	# AFFICHAGE DES MOUVEMENTS MACHINE
    if tool_op$ = 100, n$, "(PAS DU FILETAGE = ", *pas_filetage, sfcom, e$ #0092 affichage de la valeur du vrai filetage
    perreur_vit_broche
    pugv
    if opcode$ = 16, drill4axes = 1     #0072
#endregion

#region placement_apres_chang_outil
p_placement_apres_chang_outil   		# AFFICHAGE DES MOUVEMENTS MACHINE
    @rotaxis$                   		# mise a jour du type de substitution d'axe
    if nextop$ = 11,    [       		# si  4 axes avec fonction 5 axes
        gcode$ = 0              		# Force le gcode a 0 pour faire un G0 apres
        x$ = xr$
        y$ = yr$
        z$ = zr$
        axeA = 0
        axeA1_dep = 0
        old_axeA1 = 0
        debutpmx = 1            		# flag pour faire l'appel outil
        ]
    if nextop$ <> 11,   [   			# utilisation en positionné ou substitution
        gcode$ = 0                      # Force le gcode a 0 pour faire un G0 apres
        x$ = xr$                        # prise en compte de XYZ
        y$ = yr$
        z$ = zr$
        xabs = x$
        yabs = y$
        zabs = z$
        if rotaxis$ = 0,    [       									# 3 axes + diviser en positionne
            prot1                                   					# calcul rotation plateau
            old_axeA = -99999                       					# pour forcer l'affichage
            prot2                                   					# affichage de l'angle au chg outil
            n$, *sgcode, sinc_abs, "G17", poriusi, *xabs, *yabs, e$ #ssa, pgamme, *spdlon, e$
            n$, pcorh, *zabs, e$ 
            ]
        if rotaxis$ <> 0,   [           								# utilisation en substitution
            plinarc
            p_Apos
            bloque = 2
            if rotaxis$ = 1,  xabs = 0                  				# diviseur tourne autour de Y (X sbstitue)
            if rotaxis$ = 2,  yabs = 0                  				# diviseur tourne autour de X (Y sbstitue)
            n$, *sgcode, sinc_abs, "G17", poriusi, sbloque, *axeA, e$ 
            n$, sgcode, sinc_abs, *xabs, *yabs, e$ 						# ssa, pgamme, *spdlon, e$
            n$, pcorh, *zabs, e$ 
            ]
        p_modal                                 								# affectation en format modal
        !x$, !y$, !z$, !xabs, !yabs, !zabs, !xinc, !yinc, !zinc, !axeA, !axeAi  # mise à jour des positions affichées
        ]
    if tool_op$ = 100, n$, "(PAS DU FILETAGE = ", *pas_filetage, sfcom, e$ 		#0092 affichage de la valeur du vrai filetage
    perreur_vit_broche
    old_ss = ss$                # memo de la vitesse de broche
    old_op_id = op_id$          # memo du numero d'operation
    old_rotaxis = rotaxis$      # memo du type de substitution
    old_x = xabs                # memo X Y Z
    old_y = yabs
    old_z = zabs
    c_mmlt$         			# truc qui doit servire pour usinage transformé
    c_msng$
#endregion

#region ptlchg0	
ptlchg0$     # CHANGEMENT D'OUTIL NUL
    Perreur_nom_RUD         #0080
    perreur_pas_fil         #0090
    p_erreur_dif_T_H_D 		#0097
    memo_incremental = incremental              # memo du mode ABS INC actuel
    incremental = 0                 			# pour forcer le mode Absolue
    @rotaxis$, @old_rotaxis             		# mise a jour
    gcode$ = 0                      			# Force le gcode a 0 pour faire un G0 apres
    linarc$ = 0                 				# pour activer les G2 G3
    typcycle = 0                    			# variable mise a 1 lors des percage pour afficher l'intitulé du cycle
    pnomgroupe                  				# Nom du groupe d'operation
    comment$                    				# commentaires d'operation
    if posi_M_zero > 0,  [   					#0053
        n$, p_lubrif_ON , e$
        n$, *ssa, *spdlon, e$
        posi_M_zero = 0
        ]
    if CN_textes <> 0, paramcomp            		# afficher le type de compensation
    if CN_textes <> 0, paramsurep           		# afficher les surepaisseur
    if tool_typ$ = 5, ss$ = (abs(ss$))*-1       	# si tataud à gauche inverser le sens de broche
    if ss$ <> old_ss, n$, ssa, pgamme, *spdlon, e$  # si changement de vitesse de broche l'afficher
    if nextop$ = 11,   [       						# si  4 axes avec fonction 5 axes
        if op_id$ <> old_op_id,    [
            old_axeA1 = 0
            axeA1_dep = 0
            n$, poriusinul, e$          			# affichage de l'origine d'usinage
            ]
        ]
    if nextop$ <> 11, [                     		# utilisation en positionné ou substitution
        gcode$ = 0                  				# Force le gcode a 0 pour faire un G0 apres
        xabs = x$                   				# prise en compte de XYZ
        yabs = y$
        zabs = z$
        if rotaxis$ = 0, [          				# 3 axes + diviseur en positionné
            prot1                       			# calcul rotation plateau
            poriusinul  							# affichage de l'origine d'usinage
            prot3                       			# affichage de l'angle
			#n$, sg43, "H", *correcteur_H, *zabs, e$
        	]
        if rotaxis$ <> 0 & old_rotaxis = 0,  [      # si on passe de positionné a continue
            plinarc                                     					# Convertir les G2 G3 en G1
            p_Apos                                      					# calcul de l'axe A en substitution
            if rotaxis$ = 1,  xabs = 0                  					# diviseur tourne autour de Y (X sbstitue)
            if rotaxis$ = 2,  yabs = 0                  					# diviseur tourne autour de X (Y sbstitue)
            p_Apos_affiche_subs                              				# affichage de l'angle au chg outil nul pour continue/substitution
            n$, sgcode, sinc_abs, poriusinul, xabs, yabs, !xinc, !yinc, e$
            n$, sgcode, sinc_abs, zabs, !zinc, e$   
            p_modal                                 						# affectation en format modal
            !x$, !y$, !z$, !xabs, !yabs, !zabs, !xinc, !yinc, !zinc, !axeA, !axeAi  # mise à jour des positions affichées
            ]
        ]
    if opcode$ = 16, drill4axes = 1     #0072
    pugv
    incremental = memo_incremental  	# rappel du mode incremental ou absolue précédent
    old_ss = ss$                		# memo de la vitesse de broche
    old_op_id = op_id$          		# memo du numero d'operation
    old_rotaxis = rotaxis$      		# memo du type de substitution
    old_x = xabs                		# memo X Y Z
    old_y = yabs
    old_z = zabs
    c_mmlt$         					# truc qui doit servire pour usinage transformé
    c_msng$
#endregion

#region ptlchg
pspindle        #Spindle speed calculations for RPM
	ssa = abs(ss$)
	@old_ss 
	if ssa, [
		if ssa > maxss$, ssa = maxss$
		if ssa < min_speed, ssa = min_speed
		]
	spdlsel = fsg3(spdir$) 
	
pspindchng      #Spindle speed change
	if prv_spdlsel <> spdlsel & old_ss <> zero, p_bloc_O, n$, *sm_01, e$
	if old_ss <> ssa | prv_spdlsel <> spdlsel, [
		if ssa <> 0, [
	 		n$, ssa, e$
			]	
		if spdlsel <> 1, n$, *spdlon, e$
		old_ss = ssa
		]
	if tool_op$ <> 114, perreur_vit_broche
	!ssa, !spdlsel

ptoolend$        #End of tool path, before reading new tool data
    #time
	gcode$ = 0
	old_x = xh$ 
	old_y = yh$
	old_z = zh$
	p_calc_long_time
	!ssa, !spdlsel
		
ptlchg$      # CHANGEMENT D'OUTIL
	increment_op_outil = 1 #0043 
    p_lubrif_OFF, e$                  		# arret lubriff
    pas = 0
    #n$, "M5", e$ 
	pugv_off                 
    if decalage = 1, panulldecalageg52     # annuler les decalages d'origine
	p_degage_ptlchg
	#time
	p_tool_time
	if See_tool_time = yes$, n$, sdcom, "TEMPS DE L OUTIL= ", *Time_hrs, no_spc$, "H, ", *Time_min, no_spc$, "MIN, ", *Time_sec, no_spc$, "S", sfcom, e$
	long_feed = 0
	long_rapide = 0
	Feed_time = 0
	Rapide_time = 0
	Tot_time_op = 0
	#
    gcode$ = 0
	if program_stop = 1, pcan1, n$, sm00, e$
    if program_stop = 2, pcan1, n$, sm01, e$
    if nbrtour <> 0 ,   [           		# pour remise a zero du diviseur
        old_axeA = 0
        axeA = 0
        nbrtour = 0
        ]
    avance = -1                 			# pour rappel de l'avance sur le premier G1
    !avance
    plane$ = 3                  			# pour focer le rappel G17 G18 G19
    !plane$
    memo_incremental = incremental          # memo du mode incremental
    incremental = 2                 		# pour re forcer l'affichage du mode Absolue
    !incremental
    incremental = 0                 		# pour forcer le mode Absolue
    old_origine = -9999             		# pour forcer l'affichage du G54 au chg outil
    old_correcteur_H = -99999           	# pour forcer l'appel du G43
    linarc$ = 0                 			# pour activer les G2 G3
    typcycle = 0                    		# variable mise a 1 lors des percage pour afficher l'intitulé du cycle 
    p_affiche_outil                        	# APPEL OUTIL
    #0085
    spaces$=0
    if output_z = 1, preadbuf5
    if output_z = 1, n$, sdcom, "MAX OUTIL ", *max_depth, sfcom, e$
    if output_z = 1, n$, sdcom, "MIN OUTIL ", *min_depth, sfcom, e$
	p_compteur_opErations
    spaces$ = 0
    p_placement_apres_chang_outil           # AFFICHAGE DES MOUVEMENTS MACHINE
    incremental = memo_incremental          # pour revenir au mode precedent
    pugv
    if opcode$ = 16, drill4axes = 1     	#0072
    if tool_op$ = 100, n$, "(PAS DU FILETAGE = ", *pas_filetage, sfcom, e$ #0092 affichage de la valeur du vrai filetage
#endregion

#region peof_fin
peof0$
   peof$

peof$
	p_lubrif_OFF, e$                  		# Arret lubriff
	pugv_off
	#n$, "M5", e$                    		# Arret broche
	if decalage = 1 , panulldecalageg52     # Annuler les decalages d'origine
	gcode$ = 0                      		# Force le gcode a 0 pour faire un G0 apres
	incremental = 2                 		# pour re forcer l'affichage du mode Absolue
	!incremental
	incremental = 0                 		# pour forcer le mode Absolue
	p_degage_fin                			# Dégagement de la machine fin de prog
	if bldnxtool$ = 1 & type_prep_outil = 2,	[	
        if nom_outil = 1, [ 							# Tool call uses tool name
			first_op_id = streaminfo(1, 1)             	# Get the operation ID for the first operation in the sequence
			stoolname = opinfo(20001, first_op_id, 1)  	# Get the tool name for the first operation
			if stoolname = sblank, stoolname = "ERREUR-OUTIL SANS NOM"
			n$, 'TOOL DEF "', stoolname, '"', e$ 
			]
        if outils_param = 0 & nom_outil = 0, n$, "T", next_tool$, "M6", e$ 				#0053 sans les parametres
	    if outils_param = 1 & nom_outil = 0, n$, "T", 35, *outil_suiv_param, "M6", e$ 	#0053 AVEC les parametres
        ]	
    # Déchargement de l'outil en broche
	if bldnxtool$ <> 1 & type_prep_outil < 1 & decharge_outil_fin = 1,	[	
		if outils_param = 0 & nom_outil = 0, n$, "T0M6", e$ 
	    if outils_param = 1 & nom_outil = 0, outil_suiv_param = 0, n$, "T", 35, *outil_suiv_param, "M6", e$                  	
		]
	#time
	gcode$ = 0
	old_x = xh$ 
	old_y = yh$
	old_z = zh$
	p_calc_long_time
	p_tool_time
	if See_tool_time = yes$, n$, sdcom, "TEMPS DE L OUTIL= ", *Time_hrs, no_spc$, "H, ", *Time_min, no_spc$, "MIN, ", *Time_sec, no_spc$, "S", sfcom, e$
	#Tot_time_op = total_part_time * time_factor#/100
	p_Transf_hr_min_sec
	if See_total_time = yes$, [
		Time_hrs = int ( time_OPs / 60 )
		Time_min = int ( time_OPs - Time_hrs * 60 )
		Time_sec = ( time_OPs - Time_hrs * 60 - Time_min ) * 60
		n$, sdcom, "TEMPS TOTAL = ", *Time_hrs, no_spc$, "H, ", *Time_min, no_spc$, "MIN, ", *Time_sec, no_spc$, "S", sfcom, e$
		]
	#	
	if useaxe <> 0 & old_axeA <> 0,  [      # Remise a 0 de l'axe A si pas a Zero
	    axeA = 0               
	    prot2                   			# affichage de l'angle
	    ]
	plane$ = 3                  			# pour focer le rappel G17 G18 G19
	!plane$
	plane$ = 0
	n$, splcode, sinc_abs, e$           	# Plan XY mode Absolue
	comment$                    			# commentaires d'operation
	if palette = 1, n$, "M98", "P9901", e$  
	if palpage = 1,	[
		n$, "GOTO 9999", e$
		spaces$ = 0
		"N9998 ", 35, "3000=1 (MAUVAIS PALPAGE -PARCOUR SUP.)", e$
		spaces$ = 1
		"N9999", e$
		]
	n$, "M0", e$
	n$, "M99", e$                   		# fin de prog et rembobine au debut
	# Ajout pour les sous-programmes
	n$, " ", e$                   			# Sauter une ligne
	subout$ = 0                 			# Ecriture dan le NC
	mergeext$                   			# Merge les sous-prog
	mergesub$
	mergeaux$
	clearext$                   			# Effacer les sous-prog
	clearsub$
	clearaux$
	"%", e$                     			# fin de fichier
#endregion
#endregion

#region tool_inspection
ptool_insp      #0103   inspection des plaquettes/outil
    pdeg_inspection_plaquette
    if prmcode$ = 29999,  [  #seulement le commentaire dans le controle d'outil
        sparameter$ = ucase(sparameter$)
        n$, "M0 ;", sparameter$, e$
        ]
    else, n$, "M0", e$
    n$, "(CONTROLE DE L ETAT -PLAQUETTES-OUTIL-)", e$
    n$, *spdlon, e$
    old_lubrif = -1
    n$, p_lubrif_ON, e$
	!gcode$
#endregion

#region deplacements
pdwl_spd$        #Call from NCI gcode 4	*** ROTATION BROCHE / TEMPO / ARROSAGES
	pspindle
	comment$
	pspindchng	
	pcan
	if fmtrnd(dwell$), pcan1, p_bloc_O, "G4", no_spc$, dwell$, e$
	else, pcan1, p_bloc_O, #n$, strcantext, e$
	pcan2
	  
#----------------CORPS DU CODE ISO G1 G2 G3 G0 -------------------------
prapid$      # Ligne en rapide
    #"ICI AAA", e$
	p_calc_long_time 
	xabs = x$
    yabs = y$
    zabs = z$
    if rot_tlchg_zero = 1,  [    			#0049
        x_ = x$
        y_ = y$
        z_ = z$
        #pcan1, p_bloc_O, n$, sgcode, sinc_abs, x_, y_, p_lubrif_ON, strcantext, e$	   
        pcan1, p_bloc_O, n$, sgcode, sinc_abs, pxyz, p_lubrif_ON, strcantext, e$	
        rot_tlchg_zero = 0
        ]
    else, pcan1, p_bloc_O, n$, sgcode, sinc_abs, pxyz, e$   

pzrapid$     # Ligne Z en rapide
    #"ICI BBB", e$
	p_calc_long_time 
	if rot_tlchg_zero = 0, [              
        xabs = x$
        yabs = y$
        zabs = z$
        n$, sgcode, sinc_abs, pxyz, p_lubrif_ON, strcantext, e$	
        ]

plin$        # Ligne travail
	#"ICI CCC", e$
	p_calc_long_time 
	xabs = x$
	yabs = y$
	zabs = z$
	if cc$ = 41 | cc$ = 42, n$, *sgcode, sinc_abs, pcorr, pxyz, pcorrecteur_D, pfr, p_lubrif_ON, strcantext, e$	
	else, n$,  sgcode, sinc_abs, pcorr, pxyz, pfr, p_lubrif_ON, strcantext, e$	
	if rpd_typ$ = 7, ptool_insp     #0103   inspection des plaquettes/outil
	if tool_op$ = 114, p_lubrif_OFF

pz$      # z en avance TRAVAIL
    #"ICI DDD", e$
	p_calc_long_time 
    xabs = x$
    yabs = y$
    zabs = z$
    n$, sgcode, sinc_abs, pxyz, pfr, p_lubrif_ON, strcantext, e$	

pcir$        # Circulaire
	#"ICI EEE", e$
	p_calc_long_time 
    p_modal     #affectation en format modal
    xabs = x$
    yabs = y$
    zabs = z$
    if arctype$ >= 5, pcir_r, p_lubrif_ON, strcantext, e$	    # en R
    else, pcir_ij, p_lubrif_ON, strcantext, e$	           		# en IJ

pcir_r      # Circulaire G2 G3 G17 G18 G19 en R
    if arctype$ = 5 , rayon = arcrad$           # pour Rayon
    if arctype$ = 6 & abs(sweep$) <= 180 , rayon = arcrad$  # pour Rayon signé
    if arctype$ = 6 & abs(sweep$) > 180 , rayon = -arcrad$  # pour Rayon signé
    if plane$ = 0, p_casse_modalite_X, p_casse_modalite_Y
    if plane$ = 2, p_casse_modalite_X, p_casse_modalite_Z
    if plane$ = 1, p_casse_modalite_Y, p_casse_modalite_Z
    if plane$ = 0, n$, splcode, sinc_abs, *sgcode, pxyz, rayon, pfr   # plan XY
    if plane$ = 2, n$, splcode, sinc_abs, *sgcode, pxyz, rayon, pfr   # plan XZ
    if plane$ = 1, n$, splcode, sinc_abs, *sgcode, pxyz, rayon, pfr   # plan YZ

pcir_ij     # Circulaire G2 G3 G17 G18 G19 en IJ
    if plane$ = 0, p_casse_modalite_X, p_casse_modalite_Y
    if plane$ = 2, p_casse_modalite_X, p_casse_modalite_Z
    if plane$ = 1, p_casse_modalite_Y, p_casse_modalite_Z
    if plane$ = 0, n$, splcode, sinc_abs, *sgcode, pxyz, pijk, pfr
    if plane$ = 2, n$, splcode, sinc_abs, *sgcode, pxyz, pijk, pfr
    if plane$ = 1, n$, splcode, sinc_abs, *sgcode, pxyz, pijk, pfr
	
pijk        # ecriture des IJK pour G90 G91
    !i$, !j$, !k$
    if arctype$ = 1, [   # pour centre en absolue en G90
        iabs = i$
        jabs = j$
        kabs = k$
        iinc = i$ - prv_x$
        jinc = j$ - prv_y$
        kinc = k$ - prv_z$
        ]
    else,       [     # pour centre en relatif en G90
	    iabs = i$
	    jabs = j$
	    kabs = k$
	    iinc = i$
	    jinc = j$
	    kinc = k$
        ]
    if incremental = 0 & plane$ = 0 , *iabs, *jabs, !iinc, !jinc, !kinc
    if incremental = 0 & plane$ = 2 , *iabs, *kabs, !iinc, !jinc, !kinc
    if incremental = 0 & plane$ = 1 , *jabs, *kabs, !iinc, !jinc, !kinc
    if incremental = 1 & plane$ = 0 , !iabs, !jabs, *iinc, *jinc, !kinc
    if incremental = 1 & plane$ = 2 , !iabs, !kabs, *iinc, !jinc, *kinc
    if incremental = 1 & plane$ = 1 , !jabs, !kabs, !iinc, *jinc, *kinc
	
#   Gestion de la correction outil et du numéro de correcteur
pcorr   #0050
    if cc$ = 41, cc$
    if cc$ = 42, cc$
    if cc$ = 140 | cc$ = 40, "G40"
    if cc$ = 140, cc$ = -1
    !cc$
    if cc$ = 140, !correcteur_D
    if nextop$ = 11, cc$ = 0

pcorrecteur_D   #0050
    correcteur_D = tloffno$     # + nbroutil
    perreur_D
    if outils_param = 0,	[
        if correcteur_D <> old_correcteur_D, *correcteur_D
        old_correcteur_D = correcteur_D
        ]
    if outils_param = 1,	[
        correcteur_D_param = correcteur_D
        correcteur_D_param = correcteur_D_param +500
        p_erreur_dif_T_H_D   #0097
        #if correcteur_D_param <> old_correcteur_D_param, "D", 35, correcteur_D_param
        if correcteur_D_param <> old_correcteur_D_param, "D", 35, correcteur_D_param
        old_correcteur_D_param = correcteur_D_param
        ]

p_modal     # affectation en format modal X Y Z A garde profondeur ABS ET INC
	#"p_modal"
    result = newfs (2, xabs)
    result = newfs (11, xinc)
    result = newfs (2, yabs)
    result = newfs (11, yinc)
    result = newfs (2, zabs)
    result = newfs (11, zinc)
    result = newfs (2, axeA)
    result = newfs (11, axeAi)
    result = newfs (2, prof_abs)
    result = newfs (2, prof_inc)
    result = newfs (2, garde_abs)
    result = newfs (2, garde_inc)

p_casse_modalite_avance # casser la modalité de l'avance
    result = newfs (5, avance)

p_casse_modalite    # pour casser la modalité de Xabs et Xinc Yabs et Yinc Zabs et Zinc
    #"p_casse_modalite"
    p_casse_modalite_X
    p_casse_modalite_Y
    p_casse_modalite_Z
    p_casse_modalite_A

p_casse_modalite_X  # pour casser la modalité de Xabs et Xinc
    result = newfs (3, xabs)
    result = newfs (12, xinc)

p_casse_modalite_Y  # pour casser la modalité de Yabs et Yinc
    result = newfs (3, yabs)
    result = newfs (12, yinc)

p_casse_modalite_Z  # pour casser la modalité de Zabs et Zinc
    result = newfs (3, zabs)
    result = newfs (12, zinc)

p_casse_modalite_A  # pour casser la modalité de Zabs et Zinc
    result = newfs (3, axeA)
    result = newfs (12, axeAi)

p_casse_modalite_perce  # pour casser la modalité de prof_abs et prof_i garde_abs garde_i
    result = newfs (3, prof_abs)
    result = newfs (3, prof_inc)
    result = newfs (3, garde_abs)
    result = newfs (3, garde_inc)
#endregion

#region mouvements pxyz et 4 axes
pxyz        # ecriture des x, y, z en abs ou incremental pour corp ISO
    pxyz_new
    p_modal     # affectation en format modal
    !x$, !y$, !z$   # mise a jour xyz
    old_x = xabs    # memo des anciennes positions
    old_y = yabs
    old_z = zabs

pxyz_new    # ecriture des positions X Y Z et A pour XYZ CLASIQUE et substitution
    if rotaxis$ = 0, [    # XYZ CLASIQUE
        if incremental = 0,	[
            if cc$ = 41 | cc$ = 42 | cc$ = 140, *xabs, *yabs, zabs, !xinc, !yinc, !zinc #0067
            else, xabs, yabs, zabs, !xinc, !yinc, !zinc #xabs, yabs,
            ]
        else, !xabs, !yabs, !zabs, xinc, yinc, zinc         #pour 1er déplacement
        ]
	
	#POUR SUBSTITUTION "incrémental" ?	
    #if incremental = 0, xabs, yabs, axeA, zabs, !xinc, !yinc, !axeAi, !zinc
    #else, !xabs, !yabs, !axeA, !zabs, xinc, yinc, axeAi, zinc

    if rotaxis$ = 2, [    # SUBSTITUTION Y par A (diviseur tourne autour de X)
        p_Apos
		yabs = 0
		xabs = x$
        xabs, [if yabs <> old_y, yabs], zdev, A_pos, !yabs, !zabs     #, !xinc, !yinc, !zinc, !A_posi, !zdevi
        axeA  = A_pos
		old_y = 0
        old_axeA  = A_pos
        nbrtour = int (axeA / 360)
        ]
    if rotaxis$ = 1, [    # SUBSTITUTION X par A (diviseur tourne autour de Y)
        p_Apos
		xabs = 0
		yabs = y$
        [if xabs <> old_x, xabs], yabs, zdev, A_pos, !xabs, !zabs     #, !xinc, !yinc, !zinc, !A_posi, !zdevi
        axeA  = A_pos
		old_x = 0
        old_axeA  = A_pos
        nbrtour = int (axeA / 360)
        ]			
#endregion

#region erreurs
#0200-------------------------------------------------------------------------
serreur2        : "nbr_combi_axes > 1, qu'une combinaison d'axe par programme"
serreurTar      : "Erreur - Taraud avec un autre cycle"
serreurPalp1    : "ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"
serreurPalp2    : "ATTENTION SENS DE PALPAGE X ERRONE"
serreurPalp3    : "ATTENTION SENS DE PALPAGE Y ERRONE" # op_id$," AVEC OUTIL ",t$,e$
#serreurCC_Cor  "ATTENTION PRISE DE CORRECTION SUR UN CERCLE"
serreur_Aff_ORI : "ATTENTION INFORMER LES VALEURS D ORIGINE ET RELANCER LE PST"
serreur_ANGLE_ROT : "ATTENTION ANGLE DE ROTATION INFERIEUR A -90° OU SUPERIEUR A 90°"
serreur_ANGLE_ROT2 : "ATTENTION ANGLE DE ROTATION NE CORRESPOND PAS A LA POSSIBILITEE CN"
savert_taraud_brise_c : "ATTENTION AVERTISSEMENT : TARAUDAGE AVEC BRISE COPEAUX"
serreur_av_taraudage : "ATTENTION LE PAS A UNE VALEUR DECIMAL"
serreur_H_et_D      : "ATTENTION RENUMEROTER TOUT -outil et H/D DIFFERENTS"
serreur_vit_broche : "ATTENTION -BROCHE SANS VITESSE-"
serreurPalp4_1  : "ATTENTION IL MANQUE UNE LONGUEUR DE PALPAGE ORIGINE X/Y 2 FACES"
serreurPalp4_2  : "ATTENTION IL MANQUE LE TYPE DE PALPAGE ORIGINE X/Y 2 FACES"
s_erreur_origine_plan : "ATTENTION coordonnée de l'origine du plan incliné ne correspond à l'origine de base"  #0079
s_erreur_Nom_RUD : "ATTENTION *** RUDs DIFFERENTS dans un meme programme ****"  #0080
s_erreur_pas_fil : "ATTENTION RENSEIGNER LE PAS DU FILETAGE à la fraise"    #0090
#s_mess_per_prof : "ATTENTION METTRE S/10 SUR LE FORET TRES LONG. LE PP *10" #0091
#s_mess_per_prof2 : "ATTENTION METTRE -F- A LA BONNE VALEUR SUR LE FORET TRES LONG."#0092
#s_mess_per_prof3 : "ATTENTION -S- DE DEPART > 500 Tr/mn A MODIFIER DANS L'ISO !"#0092
s_erreur_pas_fil2 : "ATTENTION l'outil et l'opération non pas le meme PAS !" #0093
s_erreur_dif_T_H_D : "ATTENTION num. d'outil est different du num -H- ou -D- !" #0097
s_erreur_avance_fil : "ATTENTION l'avance de filetage à la fraise est TROP importante !" #0099
s_erreur_avanceS : "ATTENTION **INFORMER LA VALEUR DE --F-- DANS L OUTIL***" #0102
s_erreur_choix_axe : "ATTENTION **CE POST-PROCESSEUR N'EST PAS PREVU POUR CETTE ROTATION D'AXE !"
s_erreur_nbr_axes_rot : "le pst ne supporte q'un axe rotatif"
s_erreur_choix_cycle_palpage : "CYCLES DE PALPAGES NON AUTORISE, VEUILLEZ CONTACTER FICAM POUR LES UTILISER"
s_erreur_tock_cyl_axis : "ERREUR - Brut cylindrique doit Etre autour de Z pour du fraisage 3 axes, ou autour de X-Y en 4 axes" + no2asc(13) + no2asc(13) +
                       "Erreur de brut dans l'ISO."
s_erreur_tock_shape : "ERREUR - CONFIG. DU BRUT - Seulement rectangulaire ou Cylindrique supportEs CN." + no2asc(13) + no2asc(13) + "Info dans l'ISO, Solide-Maillage, Stl"

perreurTaraud   #"Erreur - Taraud avec un autre cycle"
    if paramT2 = 4 | paramT2 = 5, [     #if tool_typ$ = 3 | tool_typ$ = 4,
	    "ATTENTION ERREUR 1 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
	    result = mprint(serreurTar)
	    exitpost$
	    ]

perreurPalp1    #"ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"
    if drl_prm1$ <> 1 & drl_prm2$ <> 1, [
	    "ATTENTION ERREUR 2 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
	    result = mprint(serreurPalp1)
	    exitpost$
	    ]

perreurPalp2    #"ATTENTION SENS DE PALPAGE X ERRONE"
    if peck1$ =0, [
	    "ATTENTION ERREUR 3 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
	    result = mprint(serreurPalp2)
	    exitpost$
	    ]

perreurPalp3    #"ATTENTION SENS DE PALPAGE Y ERRONE"
	if peck1$ < 0 | peck1$ > 1, [
	    "ATTENTION ERREUR 4 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
	    result = mprint(serreurPalp3)
	    exitpost$
	    ]

perreurPalp4    #"ATTENTION IL MANQUE UNE VALEUR DE PALPAGE ORIGINE X/Y 2 FACES"
    if (drillcyc$ = 15 & peck1$ = 0) | (drillcyc$ = 16 & peck2$ = 0), erreur = 41
    if ((drl_prm1$ + drl_prm2$) <> 1), erreur = 42
    if erreur = 41, result = mprint(serreurPalp4_1)
    if erreur = 42, result = mprint(serreurPalp4_2)
    if erreur = 41 | erreur = 42,
        [
        "ATTENTION ERREUR 5 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
        exitpost$
        ]

perreur_Aff_Ori #"ATTENTION INFORMER LES VALEURS D ORIGINE ET RELANCER LE PST"
    if axeA <> 0 & (workofs$ < 1 | mr4$ <> 1), [
	    "ATTENTION ERREUR 6 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
	    result = mprint(serreur_Aff_ORI)
	    exitpost$
	    ]
        #"aaa", *workofs$, *mr4$, *axeA

perreur_ANGLE_ROT   #"ATTENTION ANGLE DE ROTATION INFERIEUR A -90° OU SUPERIEUR A 90°"
    if axeA > 90 | axeA < -90, [
	    "ATTENTION ERREUR 7 OP: ", op_id$, " AVEC OUTIL ", *t$, " AXE DE ROTATION 1=X 2=Y 3=Z  ICI:", *diviseur, e$
	    result = mprint(serreur_ANGLE_ROT)
	    #   #exitpost$
	    ]

perreur_ANGLE_ROT2  #"ATTENTION ANGLE DE ROTATION NE CORRESPOND PAS A LA POSSIBILITEE CN"
    if m2$ <> 0 | m4$ <> 0 | m5$ = 0, [
	    "ATTENTION ERREUR 8 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
	    "ATTENTION VERIFIER SI LE NOUVEAU PLAN EST BIEN D EQUERRE PAR RAPPORT AU RUD", e$
	    "SOLUTION CREER LE NOUVEAU PAR RAPPORT AU RUD AVEC -PLAN ROTATION- DE X DEG. EN X,Y OU Z", e$
	    n$, *m1$, *m2$, *m3$, *m4$, *m5$, *m5$, *m7$, *m8$, *m9$, e$
	    result = mprint(serreur_ANGLE_ROT2)
	    #exitpost$
	    ]

perreur_PAS_Taraud  #"Erreur - ATTENTION LE PAS A UNE VALEUR DECIMAL"
    if err_pas <> pas, [
	    "ATTENTION ERREUR 9 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
	    result = mprint(serreur_av_taraudage)
	    exitpost$
	    ]

perreur_H   #"ATTENTION RENUMEROTER TOUT -outil et H/D DIFFERENTS"
    if paramT1 <> tlngno$, [
	    "T", paramT1, "H", *correcteur_H, e$
	    "ATTENTION ERREUR 10 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
	    result = mprint(serreur_H_et_D)
	    exitpost$
	    ]

perreur_D   #"ATTENTION RENUMEROTER TOUT -outil et H/D DIFFERENTS"
    if paramT1 <> correcteur_D, [
	    "T", paramT1, "D", *correcteur_D, e$
	    "ATTENTION ERREUR 11 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
	    result = mprint(serreur_H_et_D)
	    exitpost$
	    ]

perreur_vit_broche #"ATTENTION -BROCHE SANS VITESSE-"
    if ssa = 0, [
	    #"ATTENTION ERREUR 12 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
	    result = mprint(serreur_vit_broche)
	    #exitpost$
	    ]

Perreur_origine_plan    #0079
	if Val_origine_Z <> Old_Val_origine_Z | Val_origine_Y <> Old_Val_origine_Y | Val_origine_X <> Old_Val_origine_X,
        [
        "ATTENTION ERREUR 13 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
        s_erreur_origine_plan, e$
        result = mprint(s_erreur_origine_plan)
        #exitpost$
        ]

Perreur_nom_RUD         #0080
	if snom_RUD <> Sold_snom_RUD,
        [
        "ATTENTION ERREUR 14 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
        s_erreur_Nom_RUD, e$
        result = mprint(s_erreur_Nom_RUD)
        #exitpost$
        ]
Sold_snom_RUD = snom_RUD

perreur_pas_fil  #0090 "ATTENTION RENSEIGNER LE PAS DU FILETAGE à la fraise"
    if tool_op$ = 100,
        [
        if pas_filetage = 9.999, [  #0090 "ATTENTION RENSEIGNER LE PAS DU FILETAGE à la fraise"
            "ATTENTION ERREUR 15 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
            result = mprint(s_erreur_pas_fil)
            exitpost$
            ]
        if pas_filetage <> paramT7, [   #0093 ""ATTENTION l'outil et l'opération non pas le meme PAS !""
            "ATTENTION ERREUR 16 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
            result = mprint(s_erreur_pas_fil2)
            exitpost$
            ]
        p_erreur_avance_fil #99
        ]

p_erreur_dif_T_H_D #0097 "ATTENTION num. d'outil est different du num -H- ou -D- !"
    if t$ <> tloffno$ | t$ <> tlngno$,
        [
        "ATTENTION ERREUR 17 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
        s_erreur_dif_T_H_D, e$
        result = mprint(s_erreur_dif_T_H_D)
        #exitpost$
        ]


p_erreur_avance_fil #0099 "ATTENTION l'avance de filetage à la fraise est TROP importante !" #0099
    if fr$ > 500,
        [
        "ATTENTION ERREUR 18 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
        result = mprint(s_erreur_avance_fil)
        ]

p_erreur_avanceS    #: "ATTENTION **INFORMER LA VALEUR DE --F-- DANS L OUTIL***" #0102
    if drillcyc$ > 0 & frplunge$ = 0,
        [
        "ATTENTION l'avance -F- EST A --0-- !", e$
        "ATTENTION ERREUR 19 OP: ", op_id$, " AVEC OUTIL ", *t$, e$
        #*drillcyc$, *frplunge$, *drillcyc$, *fr_pos$, e$
        result = mprint(s_erreur_avanceS)
        ]

p_erreur_cycle_palpage
	n$, "CYCLES DE PALPAGES NON AUTORISE, VEUILLEZ CONTACTER FICAM POUR LES UTILISER", e$
	result = mprint(s_erreur_choix_cycle_palpage)
#endregion

#region percages_simples_et_continus

#region percages_simples
#--------------- PERCAGES
pdrill0$ 
	sav_dgcode = gcode$ #Capture gcode for 5 axis drill	

pdrill_param
	if sav_dgcode = 81,
        [
        result = newfs (2, zinc)
        if drillcyc$ = three, drlgsel = fsg1(-ss$) + drillcyc$ * two
        else, drlgsel = fsg2(dwell$) + drillcyc$ * two
        if initht$ <> refht$, drillref = 0
        else, drillref = 1
        #prv_refht_a = -9999
        #prv_refht_i = -9999
        #prv_dwell$ = 0
        ]
	  
pdrill$      # Cycle de percage G81 G82
	if drill4axes = 1, pdrl4    #0072
	pdrill_param
	if CN_textes <> 0, [
		if numcoment = 0, omitseq$ = 1
		if typcycle = 0 & dwell$ = 0,  n$, sdcom, "POINTAGE-PERCAGE", sfcom, e$
		if typcycle = 0 & dwell$ <> 0, n$, sdcom, "POINTAGE-PERCAGE-TEMPO", sfcom, e$
		omitseq$ = old_omitseq
		]
	typcycle = 1
	p_casse_modalite        # casser la modalité de xy
	p_casse_modalite_perce      # casser la modalité de la garde et la prof
	if dwell$ <1, [
	    tempo = dwell$
	    tempo = tempo*100   #0042
	    ]
	if dwell$ = 0, n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, pavanceperce, e$
	else, n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, *tempo, pavanceperce, e$
	if drill4axes = 1, pdril4x_annul    #0072
	perreurTaraud   #0200

ppeck$      # Cycle de débourrage G83
	if drill4axes = 1, pdrl4    #0072
	pdrill_param
	if CN_textes <> 0, [
		if numcoment = 0, omitseq$ = 1
		if typcycle = 0, n$, sdcom, "DEBOURRAGE", sfcom, e$
		omitseq$ = old_omitseq
	    ]
	typcycle = 1
	p_casse_modalite        # casser la modalité de xyzra
	p_casse_modalite_perce      # casser la modalité de la garde et la prof
	n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, *peck1$, pavanceperce, e$
	if drill4axes = 1, pdril4x_annul
	perreurTaraud   #0200

pchpbrk$    # Cycle de brise copeaux G73
    if drill4axes = 1, pdrl4    #0072
	pdrill_param
    if CN_textes <> 0, [
	    if numcoment = 0, omitseq$ = 1
	    if typcycle = 0,  n$, sdcom, "BRISE COPEAUX", sfcom, e$
	    omitseq$ = old_omitseq
	    ]
    typcycle = 1
    p_casse_modalite        # casser la modalité de xyzra
    p_casse_modalite_perce      # casser la modalité de la garde et la prof
    if dwell$ <1, [
        tempo = dwell$
        tempo = tempo*100   #0042
        ]
    n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, retr$, peckclr$, pavanceperce, tempo, e$
    if drill4axes = 1, pdril4x_annul    #0072
    perreurTaraud   #0200

ptap$       # Cycle de taraudage G84
	if drill4axes = 1, pdrl4    #0072
	pdrill_param
	if CN_textes <> 0, [
		if numcoment = 0, omitseq$ = 1
		if typcycle = 0,  n$, sdcom, "TARAUDAGE", sfcom, e$
		omitseq$ = old_omitseq
		]
	if dwell$ <1, [
	    tempo = dwell$
	    tempo = tempo*100   #0042
	    ]
	typcycle = 1
	p_casse_modalite        # casser la modalité de xyzra
	p_casse_modalite_perce      # casser la modalité de la garde et la prof
	if tldia$ = 2, pas = 0.4     #0039
	if tldia$ = 3, pas = 0.5
	if tldia$ = 4, pas = 0.7
	if tldia$ = 5, pas = 0.8
	if tldia$ = 6, pas = 1
	if tldia$ = 8, pas = 1.25
	if tldia$ = 10, pas = 1.5
	if tldia$ = 12, pas = 1.75
	if tldia$ = 14, pas = 2
	if tldia$ = 16, pas = 2
	#--------
    if n_tap_thds$ <> 0, pas = n_tap_thds$
    if tool_typ$ = 5, ss$ = (abs(ss$))*-1
    pas = pas * abs(ss$)
	#0200
	err_pas = pas
	err_pas = abs(err_pas)
	perreur_PAS_Taraud
	n$, "M29", *ssa, e$
	if ss$ >= 0, [
	    if peck1$ = 0,  n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, *pas, tempo, e$
	    else, [
	        n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, *peck1$, *pas, tempo, e$
	        result = mprint(savert_taraud_brise_c)  #AFFICHAGE D UN MESSAGE POUR TARAUDAGE AVEC BRISE COPEAUX
	        ]
	    ]
	else,   [
	    if peck1$ = 0,  n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, *pas, tempo, e$
	    else, [
	        n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, *peck1$, *pas, tempo, e$
	        result = mprint(savert_taraud_brise_c)  #AFFICHAGE D UN MESSAGE POUR TARAUDAGE AVEC BRISE COPEAUX
	        ]
	    ]
	if drill4axes = 1, pdril4x_annul    #0072

pbore1$     # Cycle d'alésage G85
	pdrill_param
	if drill4axes = 1, pdrl4    #0072
	if CN_textes <> 0, [
		if numcoment = 0, omitseq$ = 1
		if typcycle = 0, n$, sdcom, "ALESAGE ALESOIR", sfcom, e$
		omitseq$ = old_omitseq
		]
	typcycle = 1
	p_casse_modalite        	# casser la modalité de xyzra
	p_casse_modalite_perce      # casser la modalité de la garde et la prof
	if dwell$ <1,	[
	    tempo = dwell$
	    tempo = tempo*100   #0042
	    ]
	n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, pavanceperce, !tempo, e$
	if drill4axes = 1, pdril4x_annul    #0072
	perreurTaraud   #0200

p_bore2     # Cycle d'alésage G86
	if drill4axes = 1, pdrl4_2  #0072
	pdrill_param
	if CN_textes <> 0, [
		if numcoment = 0, omitseq$ = 1
		if typcycle = 0, n$, sdcom, "ALESAGE BARE", sfcom, e$
		omitseq$ = old_omitseq
	    ]
	typcycle = 1
	p_casse_modalite        # casser la modalité de xyzra
	p_casse_modalite_perce      # casser la modalité de la garde et la prof
	if dwell$ <1,	[
	    tempo = dwell$
	    tempo = tempo*100   #0042
	    ]
	n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, pavanceperce, !tempo, e$
	if drill4axes = 1, pdril4x_annul    #0072

pbore2$     # Cycle d'alésage indexé G75
	pbore1$ #pas d'alésage indexé
	#if CN_textes <> 0, [
		#if numcoment = 0, omitseq$ = 1
		#if typcycle = 0, n$, sdcom, "ALESAGE INDEXE", sfcom, e$
		#omitseq$ = old_omitseq
		#]
	#typcycle = 1
	#p_casse_modalite       # casser la modalité de xyzra
	#p_casse_modalite_perce     # casser la modalité de la garde et la prof
	#if shftdrl$ = 0, shftdrl$ = 0.1
	#if shftdrl$ <0, shftdrl$ = shftdrl$ * -1
	#if dwell$ <1, [
	#   tempo = dwell$
	#   tempo = tempo*100   #0042
	#   ]
	#n$, sinc_abs, "G86", *sgdrlref, ppercexy, *shftdrl$, "P0.", pavanceperce, !tempo, e$
	if drill4axes = 1, pdril4x_annul    #0072

pmisc1$     # Cycle

pmisc2$     # Cycle

pdrill_2$   # Percage suivant
	if drill4axes = 1, pdrl4_2  #0072
	pdrill_param
	phole,e$
	if drill4axes = 1, pdril4x_annul    #0072
	if drill4axes = 1, [
	    p_casse_modalite        # casser la modalité de xyzra
	    p_casse_modalite_perce      # casser la modalité de la garde et la prof
	    if dwell$ = 0, n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, pavanceperce, e$
	    else, n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, pavanceperce, *tempo, e$
	    pdril4x_annul
	    ]

ppeck_2$    # Canned Peck Drill Cycle
    if drill4axes = 1, pdrl4_2  #0072
    phole,e$
    if drill4axes = 1, [
        p_casse_modalite        # casser la modalité de xyzra
        p_casse_modalite_perce      # casser la modalité de la garde et la prof
        n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, *peck1$, pavanceperce, e$
        pdril4x_annul
        ]

pchpbrk_2$  # Canned Chip Break Cycle
	if drill4axes = 1, pdrl4_2  #0072
	pdrill_param
	phole,e$
	if drill4axes = 1, [
	    p_casse_modalite        # casser la modalité de xyzra
	    p_casse_modalite_perce      # casser la modalité de la garde et la prof
	    if dwell$ <1,	[
	        tempo = dwell$
	        tempo = tempo*100   #0042
	        ]
	    n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, retr$, peckclr$, pavanceperce, tempo, e$
	    pdril4x_annul
	    ]

ptap_2$     # Canned Tap Cycle
	if drill4axes = 1, pdrl4_2  #0072
	pdrill_param
	n$, sinc_abs, ppercexy, e$
	if drill4axes = 1, #0072
	    [
	    p_casse_modalite        # casser la modalité de xyzra
	    p_casse_modalite_perce      # casser la modalité de la garde et la prof
	    if ss$ >= 0, [
	        if peck1$ = 0,  n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, *pas, tempo, e$
	        else,
	            [
	            n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, *peck1$, *pas, tempo, e$
	            result = mprint(savert_taraud_brise_c)  #AFFICHAGE D UN MESSAGE POUR TARAUDAGE AVEC BRISE COPEAUX
	            ]
	        ]
	    else,   [
	        if peck1$ = 0,  n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, *pas, tempo, e$
	        else,
	            [
	            n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, *peck1$, *pas, tempo, e$
	            result = mprint(savert_taraud_brise_c)  #AFFICHAGE D UN MESSAGE POUR TARAUDAGE AVEC BRISE COPEAUX
	            ]
	        ]
	    pdril4x_annul
	    ]

pbore1_2$   # Canned Bore #1 Cycle
	pdrill_param
	if drill4axes = 1, pdrl4_2  #0072
	phole,e$
	if drill4axes = 1, [
	    p_casse_modalite        # casser la modalité de xyzra
	    p_casse_modalite_perce      # casser la modalité de la garde et la prof
	    if dwell$ <1, [
	        tempo = dwell$
	        tempo = tempo*100   #0042
	        ]
	    n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, pavanceperce, !tempo, e$
	    pdril4x_annul
	    ]

pbore2_2$   # Canned Bore #2 Cycle
	if drill4axes = 1, pdrl4_2  #0072
	pdrill_param
	phole,e$
	if drill4axes = 1, [
	    p_casse_modalite        # casser la modalité de xyzra
	    p_casse_modalite_perce      # casser la modalité de la garde et la prof
	    if dwell$ <1,  [
	        tempo = dwell$
	        tempo = tempo*100   #0042
	        ]
	    n$, sinc_abs, *sgdrill, *sgdrlref, ppercexy, pavanceperce, !tempo, e$
	    pdril4x_annul
	    ]

pmisc1_2$   # Canned Misc #1 Cycle
	if drill4axes = 1, pdrl4_2  #0072
	pdrill_param
	phole,e$
	if drill4axes = 1, pdril4x_annul    #0072

pmisc2_2$   # Canned Misc #2 Cycle
	if drill4axes = 1, pdrl4_2  #0072
	pdrill_param
	phole,e$
	if drill4axes = 1, pdril4x_annul    #0072

#region percages_continus
#-------------------------------------------------------------------------
#0072   perçage 4 axes continu
pdrl4   # ecriture  1 er percage en 4 axes continu
       n$, "( PERCAGE 4 AXES )", e$
       gcode$ = 0
       vx = u$ - x$
       vy = v$ - y$
       vz = w$ - z$
       longvec=sqrt(vx * vx + vy * vy + vz * vz)
       vx2 = (vx/longvec)
       vy2 = (vy/longvec)
       vz2 = (vz/longvec)
       if vx = 0 & vy = 0, [
             m9$ = 1
             m1$ = 1
             m2$ = 0
             ]
           else,
             [
             m7$ = vx2
             m8$ = vy2
             m9$ = vz2
             ]
      #perreur_ANGLE_ROT
      prot1
      if HV =  0, [
            if t$ <> old_t, [
                n$, "G52 X0. Y0. Z0.", e$
                #n$, *vx2, *vy2, *vz2, e$  #pour info
                p_degage_4_axes
                #if degdebut = 1,
                    #[
                    #if abc = 1, n$, "L A+0 B+0 FMAX", e$
                    #if abc = 2, n$, "L A+0 C+0 FMAX", e$
                    #if abc = 3, n$, "L B+0 C+0 FMAX", e$
                    #]
                old_t = t$
                ]
           comment$
           tox4$ = ((vx2 * abs(depth$)) + x$)
           toy4$ = ((vy2 * abs(depth$)) + y$)
           toz4$ = ((vz2 * abs(depth$)) + z$)
           prot2
           n$, "G52", *tox4$, *toy4$,*toz4$, e$
           xnci$ = 0
           ynci$ = 0
           @xp,@yp
           @initht$, e$
           zinitht = initht$
           @zinitht, e$
           z$ = refht$
           @z$
           z_ = z$
           prot1
           n$, sgcode, spdlon, *xp, *yp, e$
           n$, sgcode, *zinitht, e$     #pfr,
           n$, sgcode, pcorh, *z_, p_lubrif_ON, e$     #*zp, pfr,
           ]
      if HV = 1, [
            comment$
            x_h = x$ *  -1
            y_h = y$
            z_h = z$
            xr_h = xr$ *  -1
            yr_h = yr$
            zr_h = zr$

            old_x_h = x_h
            old_y_h = y_h
            old_z_h = z_h
            vx2_h = vx2 *  -1

            n$, p_lubrif_ON, e$
            tox4$ = ((vx2 * abs(depth$)) + x$)
            toy4$ = ((vy2 * abs(depth$)) + y$)
            toz4$ = ((vz2 * abs(depth$)) + z$)

            n$, "G52", *tox4$, *toy4$,*toz4$, e$
            prot2
            x_h = 0
            y_h = 0
            @initht$,e$
            zinitht_h = initht$
            @zinitht,e$
            z_h = refht$
            @z$
            n$, sgcode, spdlon, *x_h, *y_h, e$
            n$, sgcode , pcorh, *zinitht_h, e$  #pfr,
            n$, sgcode , pcorh, ,*z_h, e$   #pfr,
            ]
      old_tox4 = tox4$    #memorisation pour affichage si changement dans ptlchg ou ptlchg 0
      old_toy4 = toy4$
      old_toz4 = toz4$
      old_x=xr$
      old_y=yr$
      old_z=zr$
      x$ = 0
      y$ = 0
      !x$,!y$,!z$,!xr$,!yr$,!zr$

pdrl4_2   # ecriture  des percages suivant en 4 axes
	gcode$ = 0
	vx = u$ - x$
	vy = v$ - y$
	vz = w$ - z$
	longvec=sqrt(vx * vx + vy * vy + vz * vz)
	vx2 = (vx/longvec)
	vy2 = (vy/longvec)
	vz2 = (vz/longvec)
	if vx = 0 & vy = 0,	[
	   m9$ = 1
	   m1$ = 1
	   m2$ = 0
	   ]
    else,	[
       m7$ = vx2
       m8$ = vy2
       m9$ = vz2
       ]
   	#perreur_ANGLE_ROT
	prot1
	if HV =  0,	[
		if old_HV = 1,	[
		    comment$
		    ]
        tox4$ = ((vx2 * abs(depth$)) + x$)
        toy4$ = ((vy2 * abs(depth$)) + y$)
        toz4$ = ((vz2 * abs(depth$)) + z$)
        prot2
        n$, "G52", *tox4$, *toy4$,*toz4$, e$
        #n$, *vx2, *vy2, *vz2, e$   #pour info
        xnci$ = 0
        ynci$ = 0
        @xp,@yp
        @initht$,e$
        zinitht = initht$
        @zinitht,e$
        z$ = refht$
        @z$
        z_ = z$
        #pcalxyz3d
        prot1
        n$, sgcode, spdlon, *xp, *yp, e$
        n$, sgcode, *zinitht, e$    #pfr,
        n$, sgcode, pcorh, *z_, p_lubrif_ON, e$     #*zp, pfr,
        ]
	if HV = 1,	[
		if old_HV = 0,	[
		    comment$
		    ]
		x_h = x$ * -1
		y_h = y$
		z_h = z$
		xr_h = xr$ *  -1
		yr_h = yr$
		zr_h = zr$
		old_x_h = x_h
		old_y_h = y_h
		old_z_h = z_h
		vx2_h = vx2 * -1
		n$, p_lubrif_ON, e$
		tox4$ = ((vx2 * abs(depth$)) + x$)
		toy4$ = ((vy2 * abs(depth$)) + y$)
		toz4$ = ((vz2 * abs(depth$)) + z$)
		prot2
		n$, "G52", *tox4$, *toy4$,*toz4$, e$
		x_h = 0
		y_h = 0
		@initht$,e$
		zinitht_h = initht$
		@zinitht,e$
		z_h = refht$
		@z$
		n$, sgcode, spdlon, *x_h, *y_h, e$
		n$, sgcode , pcorh, *zinitht_h, pfr,e$
		n$, sgcode , pcorh, ,*z_h, pfr,e$
		]
    old_tox4 = tox4$    #memorisation pour affichage si changement dans ptlchg ou ptlchg 0
    old_toy4 = toy4$
    old_toz4 = toz4$
    old_x=xr$
    old_y=yr$
    old_z=zr$
    x$ = 0
    y$ = 0

pdril4x_annul   # annulation percage 5 axe
	@zinitht_h
	@zinitht
	#n$, "( ANNULATION DES CYCLES )", e$   #0052
	#n$, sgcode , pcorh, *zinitht_h, e$    #pfr,
	#pxyzhori
	n$, "G80", e$  #0052
	if HV =  0, n$, sgcode, pcorh, xp, yp, *zinitht, pfr, e$
	if HV =  1, n$, sgcode, pcorh, x_h, y_h, *zinitht_h, pfr,e$
	panulldecalageg52
	#n$, "(FIN ANNULATION DES CYCLES )", e$    #0052

#--------------- fin du traitemant 5 axes --------------------------------
#endregion

#region perCage_tres_profond_et_palpages
pdrlcst$     # Test de l'appel des cycles  et embranchements #0047
    if Cycles_palpage_YN = yes$, [
		#if dwell$ < 1, "----",e$,		"ATTENTION PAS DE DECALAGE D ACTIVE _KNUM", op_id$," AVEC LE PALPEUR", e$, "---",e$ ,exitpost$
	    if drillcyc$ = 8, pdrlcst8   		#Cycle de palpage Pt de réf. int. (exter) rectangulaire"
	    if drillcyc$ = 9, pdrlcst9   		#Cycle de palpage Pt de réf. int. (exter) Diamètre"
	    #if drillcyc$ = 10, pdrlcst10 		#Cycle de palpage Pt de réf. exter Coin"
	    #if drillcyc$ = 11, pdrlcst11 		#Cycle de palpage Pt de réf. inter Coin"
	    if drillcyc$ = 12, pdrlcst12  		#Cycle de palpage Pt de réf. EN Z"
	    if drillcyc$ = 13, pdrlcst13 		#Cycle de palpage Pt de réf. FACE EN X"
	    if drillcyc$ = 14, pdrlcst14 		#Cycle de palpage Pt de réf. FACE EN Y"
	    if drillcyc$ = 15, pdrlcst15 		#Cycle de palpage Pt de réf. EN X IN-OUT"
	    if drillcyc$ = 16, pdrlcst16 		#Cycle de palpage Pt de réf. EN Y IN-OUT"
		]
	else, p_erreur_cycle_palpage
    if drillcyc$ = 18, pdrlcst7 		#0091 perçage très profond avec trous d'huile
    #n$, "M71 ;Desactivation du palpeur", e$  #0033
    #_scycle = 0             
    gcode$ = 0               

pdrlcst_2$   #0047 Test de l'appel des cycles  et embranchements pour X palpages #0047
    #if dwell$ < 1, "----",e$,"ATTENTION PAS DE DECALAGE D ACTIVE _KNUM", op_id$," AVEC LE PALPEUR", e$, "---",e$ ,exitpost$
    #n$, ";*************", e$
    #if drillcyc$ = 8, pdrlcst8_2   	#Cycle de palpage Pt de réf. int. (exter) rectangulaire"
    #if drillcyc$ = 9, pdrlcst9_2   	#Cycle de palpage Pt de réf. int. (exter) Diamètre"
        #if drillcyc$ = 10, pdrlcst10_2 #Cycle de palpage Pt de réf. exter Coin"
        #if drillcyc$ = 11, pdrlcst11_2 #Cycle de palpage Pt de réf. inter Coin"
        #if drillcyc$ = 12, pdrlcst12_2 #Cycle de palpage Pt de réf. EN Z"
    #if drillcyc$ = 13, pdrlcst13_2   	#Cycle de palpage Pt de réf. FACE EN X"
    #if drillcyc$ = 14, pdrlcst14_2   	#Cycle de palpage Pt de réf. FACE EN Y"
    if drillcyc$ = 14, pdrlcst7_2   	#0091 perçage très profond avec trous d'huile
        #if drillcyc >= 8, palpeur = 0  #0033 #0037 Pour désactiver le palpeur
        #n$, "M71 ;Desactivation du palpeur", e$
        #_scycle = 0
    gcode$ = 0

pdrlcst7    # perçage très profond avec trous d'huile   #0091
	gcode$ = 0
	#result = mprint(s_mess_per_prof)
	#result = mprint(s_mess_per_prof2)
	#if ssa > 500, result = mprint(s_mess_per_prof3)    # "ATTENTION -S- DE DEPART > 500 Tr/mn A MODIFIER DANS L'ISO !"#0092
	f_p_profond = abs(frplunge$ *2)
	depth_ = depth$
	tosz_ = tosz$
	initht_ = initht$
	refht_ = refht$
	z_dep_p_prof = tosz$ +2
	if dwell$ <1,	[
	    tempo = dwell$
	    tempo = tempo*1000   #0042
	    ]
	n$, "( PERCAGE TRES PROFOND )", e$
	n$, "M4",  e$
	n$, "G1", *refht_, f_p_profond, e$   # Z secu dehors
	n$, *z_dep_p_prof, "(Z DEPART PLUS 2MM)", e$    # Z départ
	n$, "M3", *ssa, e$
	n$, "G4X1.", e$
	n$, "M3", *_ssa, e$
	n$, "M7 (ARROSAGE AU CENTRE)", e$
	n$, "G4X1.", e$
	n$, *depth_, pavanceperce, e$
	#n$, *tempo, e$
	n$, "M9", e$
	n$, *tosz_, "F1000", e$
	n$, "M3", *ssa, e$
	n$, initht_, e$
	drillcyc$ = -1
	drlcst7 = 1
    perreurTaraud #0200

pdrlcst7_2    # perçage très profond avec trous d'huile   #0091
	gcode$ = 0
	phole
	#result = mprint(s_mess_per_prof)
	#result = mprint(s_mess_per_prof2)
	f_p_profond = abs(frplunge$ *2)
	z_dep_p_prof = tosz$ +2
	depth_ = depth$
	tosz_ = tosz$
	initht_ = initht$
	refht_ = refht$
	if dwell$ <1, [
	    tempo = dwell$
	    tempo = tempo*1000   #0042
	    ]
	n$, "( PERCAGE TRES PROFOND )", e$
	n$, "M4",  e$
	n$, "G1", *refht_, f_p_profond, e$   # Z secu dehors
	n$, *z_dep_p_prof, "(Z DEPART PLUS 2MM)", e$    # Z départ
	n$, "M3", *ssa, e$
	n$, "G4X1.", e$
	n$, "M3", *_ssa, e$
	n$, "M7 (ARROSAGE AU CENTRE)", e$
	n$, "G4X1.", e$
	n$, *depth_, pavanceperce, e$
	#n$, *tempo, e$
	n$, "M9", e$
	n$, *tosz_, "F1000", e$
	n$, "M3", *ssa, e$
	n$, initht_, e$
	drillcyc$ = -1
	drlcst7 = 1

pdrlcst8    #Cycle de palpage Pt de réf. int. (exter) rectangulaire"    #0047
	gcode$ = 0
	#profrelatif = (initht$-depth$) * ( -1)
	if drl_prm1$ = 1 | drl_prm2$ = 1, [
		u_palpage = peck1$
		v_palpage = peck2$
		z_palpage = z$
		w_palpage = dwell$
		a_palpage = x$
		b_palpage = y$
		a_palpage = a_palpage * -1
		b_palpage = b_palpage * -1
		w_palpage = w_palpage + 53
		if w_palpage > 69, w_palpage = w_palpage - 59
		]
	if drl_prm1$ = 1, n$, "(REF. INTER RECTANGLE)", e$
	if drl_prm2$ = 1, [
		u_palpage = u_palpage * -1
		v_palpage = v_palpage * -1
		n$, "(REF. EXTER RECTANGLE)", e$
		]
	perreurPalp1  #0200
	if drl_prm1$ = 1 | drl_prm2$ = 1, [
		n$, "G320 ", u_palpage, v_palpage, z_palpage, "E5. ", w_palpage, a_palpage, b_palpage, "Q2. R2 T9998", e$
		n$, sdcom, *u_palpage, " - LONGUEUR EN X )", e$
		n$, sdcom, *v_palpage, " - LARGEUR EN Y )", e$
		n$, sdcom, *z_palpage, " - PROFONDEUR EN Z )", e$
		n$, "( E5 - VALEUR D APPROCHE )", e$
		n$, sdcom, *w_palpage, " - ORIGINE DO )", e$
		n$, sdcom, *a_palpage, " - DISTANCE A L ORIGINE EN X )", e$
		n$, sdcom, *b_palpage, " - DISTANCE A L ORIGINE EN Y )", e$
		n$, "( Q2 - LIMITE DE PALPAGE )", e$
		n$, "( R2 - NOMBRE DE MESURES )", e$
		n$, "( T9998 - NUM. BLOC DE RETOUR SI PARCOUR SUP. A Q )", e$
		]
	#n$, "M82 ; soufflage OFF", e$
	#poriusi
	_scycle = 0

pdrlcst9    #Cycle de palpage Pt de réf. int. (exter) Diamètre" #0047
	gcode$ = 0
	#profrelatif = (initht$-depth$) * ( -1)
	if drl_prm1$ = 1 | drl_prm2$ = 1, [
	    d_palpage = peck1$
	    z_palpage = z$
	    w_palpage = dwell$
	    a_palpage = x$
	    b_palpage = y$
	    a_palpage = a_palpage * -1
	    b_palpage = b_palpage * -1
	    w_palpage = w_palpage + 53
	    if w_palpage > 69, w_palpage = w_palpage - 59
		]
	if drl_prm1$ = 1, n$, "(REF. INT. DIAMETRE)", e$
	if drl_prm2$ = 1,	[
		d_palpage = d_palpage * -1
		n$, "(REF. EXT. DIAMETRE)", e$
		]
	perreurPalp1  #0200
	if drl_prm1$ = 1 | drl_prm2$ = 1,	[
		n$, "G320 ", d_palpage, z_palpage, "E3. ", w_palpage, a_palpage, b_palpage, "Q2. R2 T9998", e$
		n$, sdcom, *d_palpage, " - DIAMETRE DE PALPAGE )", e$
		n$, sdcom, *z_palpage, " - PROFONDEUR EN Z )", e$
		n$, "( E3 - VALEUR D APPROCHE )", e$
		n$, sdcom, *w_palpage, " - ORIGINE DO )", e$
		n$, sdcom, *a_palpage, " - DISTANCE A L ORIGINE EN X )", e$
		n$, sdcom, *b_palpage, " - DISTANCE A L ORIGINE EN Y )", e$
		n$, "( Q2 - LIMITE DE PALPAGE )", e$
		n$, "( R2 - NOMBRE DE MESURES )", e$
		n$, "( T9998 - NUM. BLOC DE RETOUR SI PARCOUR SUP. A Q )", e$
		]
	#n$, "M82 ; soufflage OFF", e$
	#poriusi
	_scycle = 0

pdrlcst12    #Cycle de palpage Pt de réf. EN Z" #0047
	gcode$ = 0
	#profrelatif = (initht$-depth$) * ( -1)
	a_palpage = x$
	b_palpage = y$
	z_palpage = z$
	w_palpage = dwell$
	w_palpage = w_palpage + 53
	if w_palpage > 69, w_palpage = w_palpage - 59
	#perreurPalp1   #0200
	n$, "(REF. EN Z)", e$
	n$, "( G100=APPEL DU SOUS-PROG. 9010 )", e$
	n$, "( H=DISTANCE A PALPER JUSQU AU CENTRE PALETTE )", e$
	n$, "( W=ORIGINE CONCERNE )", e$
	n$, "( S=SUREPAISSEUR )", e$
	n$, "(INFORMER LA VALEUR DU --H-- )", e$
	n$, "(POUR INFO PALPAGE A : ", *z_palpage, sfcom, e$
	n$, " ", e$
	n$, *xabs, *yabs, e$
	n$, "G100 H00", w_palpage, "S0. T9998", e$
	#n$, "M82 ; soufflage OFF", e$
	_scycle = 0

pdrlcst13   #Cycle de palpage Pt de réf. FACE EN X" #0047
	gcode$ = 0
	z_palpage = z$
	w_palpage = dwell$
	a_palpage = x$
	a_palpage = a_palpage * -1
	w_palpage = w_palpage + 53
	if w_palpage > 69, w_palpage = w_palpage - 59
	#perreurPalp1   #0200
	if peck1$ = 1, [
	    if x$ < 0, x_palpage = x$ -3
	    if x$ > 0, x_palpage = x$ +3
	    ]
	if peck1$ = -1,[
	    if x$ < 0, x_palpage = x$ +3
	    if x$ > 0, x_palpage = x$ -3
	    ]
	n$, "(REF. EN X)", e$
	n$, "( G320 APPEL DU CYCLE )", e$
	n$, "( X EN + = APPROCHE VERS LE X+ )", e$
	n$, "( X EN - = APPROCHE VERS LE X- )", e$
	n$, "( Z - HAUTEUR DE PALPAGE )", e$
	n$, "( W = ORIGINE CONCERNE )", e$
	n$, sdcom, *a_palpage, " - DISTANCE A L ORIGINE EN X )", e$
	n$, "( Q2 - LIMITE DE PALPAGE )", e$
	n$, "( R2 - NOMBRE DE MESURES )", e$
	n$, "( T9998 - NUM. BLOC DE RETOUR SI PARCOUR SUP. A Q )", e$
	n$, " ", e$
	n$, *x_palpage, e$
	n$, "G320 ", *z_palpage, *w_palpage, *a_palpage, "Q2. R2 T9998", e$
	perreurPalp2    #0200
	_scycle = 0

pdrlcst14   #Cycle de palpage Pt de réf. FACE EN Y" #0047
	gcode$ = 0
	z_palpage = z$
	w_palpage = dwell$
	b_palpage = y$
	b_palpage = b_palpage * -1
	w_palpage = w_palpage + 53
	if w_palpage > 69, w_palpage = w_palpage - 59
	#perreurPalp1   #0200
	if peck1$ = 1, [
	    if y$ < 0, y_palpage = y$ -3
	    if y$ > 0, y_palpage = y$ +3
	    ]
	if peck1$ = -1, [
	    if y$ < 0, y_palpage = y$ +3
	    if y$ > 0, y_palpage = y$ -3
	    ]
	n$, "(REF. EN Y)", e$
	n$, "( G320 APPEL DU CYCLE )", e$
	n$, "( Y EN + = APPROCHE VERS LE Y+ )", e$
	n$, "( Y EN - = APPROCHE VERS LE Y- )", e$
	n$, "( Z - HAUTEUR DE PALPAGE )", e$
	n$, "( W = ORIGINE CONCERNE )", e$
	n$, sdcom, *b_palpage, " - DISTANCE A L ORIGINE EN Y )", e$
	n$, "( Q2 - LIMITE DE PALPAGE )", e$
	n$, "( R2 - NOMBRE DE MESURES )", e$
	n$, "( T9998 - NUM. BLOC DE RETOUR SI PARCOUR SUP. A Q )", e$
	n$, " ", e$
	n$, *y_palpage, e$
	n$, "G320 ", *z_palpage, *w_palpage, *b_palpage, "Q2. R2 T9998", e$
	perreurPalp2    #0200
	_scycle = 0

pdrlcst15   #Cycle de palpage Pt de réf. EN X IN-OUT" #0047
	gcode$ = 0
	z_palpage = z$
	k_palpage = depth$ - tosz$
	u_palpage = peck1$
	w_palpage = dwell$
	w_palpage = w_palpage + 53
	if w_palpage > 69, w_palpage = w_palpage - 59
	#perreurPalp1   #0200
	if drl_prm1$ = 1,n$, "( REF. INTER X )", e$
	if drl_prm2$ = 1, [
	    u_palpage = u_palpage * -1
	    #v_palpage = v_palpage * -1
	    n$, "( REF. EXTER X )", e$
	    ]
	n$, "(REF. EN X ENTRE 2 FACES)", e$
	n$, "( G320 APPEL DU CYCLE )", e$
	n$, "( U = COTE A MESURER EN X )", e$
	n$, "( U EN - = MESURE EXTER )", e$
	n$, "( U EN + = MESURE INTER )", e$
	n$, "( K - HAUTEUR DE PALPAGE )", e$
	n$, "( EN RELATIF -Z- DEPART )", e$
	n$, "( W = ORIGINE CONCERNE )", e$
	n$, "( Q2 - LIMITE DE PALPAGE )", e$
	n$, "( R2 - NOMBRE DE MESURES )", e$
	n$, "( T9998 - NUM. BLOC DE RETOUR SI PARCOUR SUP. A Q )", e$
	n$, " ", e$
	n$, "G320", *u_palpage, *k_palpage, *w_palpage, "Q2. R2 T9998", e$
	perreurPalp4    #0200
	_scycle = 0

pdrlcst16   #Cycle de palpage Pt de réf. EN Y IN-OUT" #0047
	gcode$ = 0
	z_palpage = z$
	k_palpage = depth$ - tosz$
	v_palpage = peck2$
	#b_palpage = y$
	#b_palpage = b_palpage * -1
	w_palpage = dwell$
	w_palpage = w_palpage + 53
	if w_palpage > 69, w_palpage = w_palpage - 59
	#perreurPalp1   #0200
	if drl_prm1$ = 1, n$, "( REF. INTER Y )", e$
	if drl_prm2$ = 1, [
		v_palpage = v_palpage * -1
		#v_palpage = v_palpage * -1
		n$, "( REF. EXTER Y )", e$
		]
	n$, "(REF. EN Y ENTRE 2 FACES)", e$
	n$, "( G320 APPEL DU CYCLE )", e$
	n$, "( V = COTE A MESURER EN Y )", e$
	n$, "( V EN - = MESURE EXTER )", e$
	n$, "( V EN + = MESURE INTER )", e$
	n$, "( K - HAUTEUR DE PALPAGE )", e$
	n$, "( EN RELATIF -Z- DEPART )", e$
	n$, "( W = ORIGINE CONCERNE )", e$
	n$, "( Q2 - LIMITE DE PALPAGE )", e$
	n$, "( R2 - NOMBRE DE MESURES )", e$
	n$, "( T9998 - NUM. BLOC DE RETOUR SI PARCOUR SUP. A Q )", e$
	n$, " ", e$
	n$, "G320", *v_palpage, *k_palpage, *w_palpage, "Q2. R2 T9998", e$
	perreurPalp4    #0200
	_scycle = 0

pdrlcst8_2
    n$, ";CYCLE DE PALPAGE N 1 ***", e$
    n$, ";A completer", e$

pdrlcst9_2
    n$, ";CYCLE DE PALPAGE N 2 ***", e$
    n$, ";A completer", e$

pdrlcst13_2
    n$, ";CYCLE DE PALPAGE N 6 ***", e$
    n$, ";A completer", e$

pdrlcst14_2
    n$, ";CYCLE DE PALPAGE N 7 ***", e$
    n$, ";A completer", e$

#endregion

#region positions_percages_et_annulation
ppercexy     # ecriture des x, y en abs ou incremental pour percage
	xabs = x$
	yabs = y$
	if rotaxis$ = 0,  [   # XY CLASIQUE
	    @depth$
	    @refht$
	    prof_abs = depth$
	    prof_inc = depth$ - refht$
	    garde_abs = refht$
	    garde_inc = refht$ - initht$
	    !depth$
	    !refht$
	    if incremental = 0,  xabs, yabs, prof_abs, garde_abs, !xinc, !yinc, !prof_inc, !garde_inc
	    else,           !xabs, !yabs, !prof_abs, !garde_abs, xinc, yinc, prof_inc, garde_inc
	    ]
	if rotaxis$ <> 0, [    # SUBSTITUTION Y par A (diviseur tourne autour de X)
	    p_Apos
	    @depth$
	    @refht$
	    prof_abs = depth$ + (rotdia$/2)
	    prof_inc = depth$ - refht$
	    garde_abs = refht$ + (rotdia$/2)
	    garde_inc = refht$-initht$
	    !depth$
	    !refht$
	    if incremental = 0, xabs, yabs, axeA, prof_abs, garde_abs, !xinc, !yinc, !axeAi, !prof_inc, !garde_inc
	    else, !xabs, !yabs, !axeA, !prof_abs, !garde_abs, xinc, yinc, axeAi, prof_inc, garde_inc
	    old_axeA  = axeA
	    nbrtour = int (axeA / 360)
	    ]
    p_modal     # afficher en format modal
    !x$, !y$    # mise a jour XY
    old_x = xabs
    old_y = yabs

phole       # trous suivants
    n$, sinc_abs, ppercexy, e$

pcanceldc$  # Anuulation de cyle fixe
    if opcode$ = 16, ex$    #0072
    z$ = initht$      		# z au plan de secu
    prof_abs = -99999    	# raz des prof garde tempo
    garde_abs = -99999
    tempo = 0
    !prof_abs
    !garde_abs
    !tempo
    if rotaxis$ = 0, zabs = z$   # XYZ CLASIQUE
    else, zabs = z$ + (rotdia$/2)
	gcode$ =5    # choix du gcode pour ecrire G80
	if palpeur = 0, [
		if incremental = 0, n$, sinc_abs, *sgcode, *zabs, !zinc, e$
		if incremental = 1, n$, sinc_abs, *sgcode, !zabs, zinc, e$
	    ]
	palpeur = 0
	!z$      # Raz de Z
	old_z = zabs
#endregion
#endregion

#endregion

#region infos_outils_liste
#------------------Liste des OUTILS---------------------------------------------------
smanu : ""       				#0017 string info outil texte dans "mandrin" (manufactured)
smand : ""           			#0003 string info outil texte dans "mandrin" (chuck name)
snom_porte_outil : "" 			#0101
sposi_porte_out : "Porte"   	#0101   string test présence "porte outil par défaut"
fmt   7 posi_porte_out_defaut   #0101
fmt   7 longsnom_P_O    		#0101
fmt   2 long_smanu
fmt   2 longsmand 				#0003
fmt   5 paramT1      			# N° outil
fmt   5 paramT2      			# Type d'outil
fmt   5 paramT3      			# Matiere de l'outil 1=Rapide 2=carbure 3=carbure revetu 4=cermet 5=borzon
fmt   5 paramT4      			# Type de rayon de bout 0=aucun 1=torique 2=spherique
fmt "D=" 3 paramT5   			# Diametre
fmt "R=" 3 paramT6   			# Rayon de bout
fmt "P=" 3 paramT7      		# PAS / Nombre de filet par mm
fmt "A=" 3 paramT8   			# Angle de bout
fmt   5 paramT9      			# N° de correcteur de rayon
fmt   5 paramT10     			# N° de correcteur de longeur
fmt   3 paramT11     			# Avance travail
fmt   3 paramT12     			# Avance plongee
fmt   3 paramT13     			# Avance retraction
fmt   5 paramT14     			# Vitesse de broche
fmt   5 paramT15     			# Type de lubrification 0=arret 1=eau 2=air 3=broche 4=les 2
fmt "NBR-DENTS="  5 paramT16 	# Nombre de dents

# géométrie de l'outil
fmt   3 paramT20     			# Diamètre pilote
fmt   "EP=" 3 paramT21     		# Hauteur de coupe
fmt   "HS=" 3 paramT22     		# Hauteur de sortie totale
fmt   3 paramT23     			# Hauteur helice
fmt   3 paramT24     			# Diametre de queue
fmt   3 paramT25     			# Diametre porte-outil
fmt   3 paramT26     			# Hauteur porte-outil
fmt   5 paramT27     			# 0=sens horaire 1=sens horaire
fmt   5 paramT28     			# % de la vitesse de coupe
fmt   5 paramT29     			# % de l'avance par dent
fmt   4 paramT30     			# 0=pouces 1=metrique

stypT00 : "FORME"
stypT01 : "FORET A C."
stypT02 : "FORET A P."
stypT03 : "FORET"
stypT04 : "TARAUD A D."
stypT05 : "TARAUD A G."
stypT06 : "ALESOIR"
stypT07 : "BARRE D ALES."
stypT08 : "FR. COUTEAU"
stypT09 : "FR. A EBAVUR."
stypT10 : "FR."
stypT11 : "FR. BOULE"
stypT12 : "FR. A CHANF."
stypT13 : "TOURTEAU"
stypT14 : "FR. 3 T."
stypT15 : "FR. CONCAVE"
stypT16 : "FR. QUEUE D ARONDE"
stypT17 : "FR. CONIQUE TRONQUEE"
stypT18 : "FR. SPHERIQUE"
stypT19 : "FR. TORIQUE"
stypT20 : "SPECIALE"
stypT21 : "FRAISE A GRAVER"
stypT22 : "FORET BRAD"
stypT23 : "BARRE D ALESAGE"
stypT24 : "FRAISE A FILETER"
stypT25 : "FRAISE TONNEAU"

stypeT : ""
fstrsel stypT00 paramT2 stypeT 26 -1

smatT0  : ""
smatT1  : "HSS"
smatT2  : "CA."
smatT3  : "CA. REVETU"
smatT4  : "CERMET"
smatT5  : "BORZON"
smatT6  : "BORZON"
smatT7  : "BORZON"
smatT8  : "BORZON"
smatT9  : "BORZON"
smatT10 : "INCONNU"
smatT : ""
fstrsel smatT0 paramT3 smatT 11 -1

#ptypeBoutT # afficher on non le rayon de bout
   #if paramT4 <> 0, space, paramT6

ppas       # afficher ou non le pas
    if paramT7 > 0, *paramT7

ptypeBoutT # afficher on non le rayon de bout
   if paramT4 <> 0, *paramT6

pangleT    # afficher on non l'angle de l'outil
   if paramT2 = 2 | paramT2 = 3 | paramT2 = 9 | paramT2 = 12 | paramT2 = 13 | paramT2 = 16 | paramT2 = 17, *paramT8

phauteurT  # afficher la hauteur de dent pour une fraise 3 tailles
   if paramT2 = 14, paramT21

ptype      # Pour afficher le texte des outils perso suivant comment. dans "mandrin" (chuck name)#0003#0027
	@longsmand
	#if longsmand > 5, *smand   # attention pas d'espaces dans cette case "mandrin"
	#else, *stypeT
	if longsmand > 3, *strtool$,
	else, *stypeT
	longsmand = 0

pporte_outil #0101
	if Nom_porte_outil_entete = 1, [
		longsnom_P_O = strlen(snom_porte_outil)
		posi_porte_out_defaut = strstr(sposi_porte_out, snom_porte_outil)
		if longsnom_P_O > 10 & posi_porte_out_defaut < 1, n$, sdcom, "PORTE OUTIL - ", snom_porte_outil, *paramT22, sfcom, e$   #*longsnom_P_O, *posi_porte_out_defaut,
		longsnom_P_O = 0
		]

pwrttparam$    # lire les parametres des outils
    if affiche_prmcodes = 1, "-->pwrttparam DONNEES OUTILS", ~prmcode$, ~sparameter$, e$
	if syncaxis$ <> old_syncaxis, nbr_combi = nbr_combi + 1
	old_syncaxis = syncaxis$
	if prmcode$ = 20002, smanu = sparameter$
	if prmcode$ = 20003, smand = sparameter$   #0003
	if prmcode$ = 20004, paramT1 = rpar(sparameter$, 16)
	if prmcode$ = 20007, paramT20 = rpar(sparameter$, 11)
	if prmcode$ = 12727, snom_porte_outil = sparameter$         #0101
	longsmand = strlen(smand)

parrosage  # affichage de "arrosage au centre"
    if paramT15 = 2, "ARROSAGE AU CENTRE"    #0028
	
pwrtt$      # Lite des outils
    strtool$ = ucase(strtool$)
	# vErification des rotations avant le traitement ISO
    if m9$ <> 1, rotation_axe = 1               # Inclinaison des axes
    if m5$ <> 1 & m1$ = 1, rotation_A = 1       # incliné en Y uniquement (et Z) = ROTATION SUR L'AXE X
    if m1$ <> 1 & m5$ = 1, rotation_B = 1       # incliné en X uniquement (et Z) = ROTATION SUR L'AXE Y
    if m1$ <> 1 & m5$ <> 1, rotation_axe = 2    # Erreur de plan

	# pour info : Type_infos_outil	 
	# 1 = NOM de l'outil "texte NOM" --> strtool$
	# 3 = NOM MC de l'outil et Infos géométrique réelle de l'outil
	# 4 = NOM de l'outil "texte NOM" & Infos géométrique réelle de l'outil --> = 0 + 2	 	
    if Liste_outils, [
        spaces$ = 1
		if nom_outil = 1, [   #0121
			if t$ > 0, [
		        if strtool$ = svide, n$, sdcom, "ERREUR-OUTIL SANS NOM", sfcom, e$
				else, [
					n$, sdcom, no_spc$,  " T-A DEFINIR ", paramT1, '"', *strtool$, '"',
						if Type_infos_outil	= 1, no_spc$, sfcom, e$
						if Type_infos_outil	= 2 | Type_infos_outil= 4, "--", *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, no_spc$, sfcom, e$ 
						if Type_infos_outil	= 3, "--", ptype, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, no_spc$, sfcom, e$ 
					]
				pporte_outil
				]
	        ]
		if nom_outil = 0, [
	        if outils_param = 0, [   #0050 sans les parametres
	            if t$ > 0, [
					if Type_infos_outil	= 1, n$, sdcom, no_spc$,  "T", paramT1, strtool$, no_spc$, sfcom, e$
					if Type_infos_outil	= 2 | Type_infos_outil	= 3, n$, sdcom, no_spc$,  "T", paramT1, ptype, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, no_spc$, sfcom, e$  			
					if Type_infos_outil	= 4, n$, sdcom, no_spc$,  "T", paramT1, strtool$, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, no_spc$, sfcom, e$ 				
					pporte_outil		
	            	]
				]
	        if outils_param = 1,  [  #0050 avec les parametres
	            outil_paramT1 = paramT1
	            paramT1 = paramT1 + 500
	            if t$ > 0, [
					if Type_infos_outil	= 1, n$, 35, paramT1, "=", outil_paramT1, sdcom, no_spc$,  "T", paramT1, strtool$, no_spc$, sfcom, e$ 	
					if Type_infos_outil	= 2 | Type_infos_outil	= 3, n$, 35, paramT1, "=", outil_paramT1, sdcom, no_spc$,  no_spc$, ptype, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, no_spc$, sfcom, e$  
					if Type_infos_outil	= 4, n$, 35, paramT1, "=", outil_paramT1, sdcom, no_spc$,  strtool$, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, no_spc$, sfcom, e$  				
					pporte_outil
	        		]
	        	]
	    	]
		]
    last_op_id = op_id$
	# Compteur d'opErations dans le programme
	if op_id$ > 0, nbr_opErations = nbr_opErations + 1
    #0085
    ptravel
    pwritbuf5
#endregion 

#region entete_OP_commentaires
#0025**************************** Affichage des commentaires de début d'OP en entete Prog.
stextentete : ""
stextecoupe : ""
svirgule : ","
sposiNomprog : "/PROGRAMMEUR/"
sposiClient : "/CLIENT/"
sposiPiece : "/NOM PIECE/"
sposiNumplan : "/NUM PLAN/"
sposiIndiceplan : "/INDICE/"
#Textes origines
sposiX  : "/X/"
sposiY  : "/Y/"
sposiZ  : "/Z/"
#Texte Orientation
sposiOrient : "/ORIENTATION/"
#Texte Divers
sposInfos : "/INFO/"
#sposivirgule : ""    # la virgule indique le saut à la ligne
sSlash : "/"    #0120
sposiA  : "/A/"       #0041
ssansA  : "PAS DE A"

fmt 7 posiNomprog
fmt 7 posiClient
fmt 7 posiNomPiece
fmt 7 posiNumplan
fmt 7 posiIndiceplan
fmt 7 posiX
fmt 7 posiY
fmt 7 posiZ
fmt 7 posiOrientation
fmt 7 posiInfo
fmt 7 posivirgule
fmt 7 posicoupe
#0041
fmt 7 posiA
fmt 7 posiSlash #0120
fmt 7 long_TEXTE

ptextentete
    stextentete = scomm$
    long_TEXTE = strlen(stextentete)    #0120
    posiNomprog = strstr(sposiNomprog, stextentete)
    posiClient = strstr(sposiClient, stextentete)
    posiNomPiece = strstr(sposiPiece, stextentete)
    posiNumplan = strstr(sposiNumplan, stextentete)
    posiIndiceplan = strstr(sposiIndiceplan, stextentete)
    posiX = strstr(sposiX, stextentete)
    posiY = strstr(sposiY, stextentete)
    posiZ = strstr(sposiZ, stextentete)
    posiOrientation = strstr(sposiOrient, stextentete)
    posiInfo = strstr(sposInfos, stextentete)
    posivirgule = strstr(svirgule, stextentete)
    posiA = strstr(sposiA, stextentete) #0041
    #posivirgule = strstr(svirgule, stextentete)
    posiSlash = strstr(sSlash, stextentete) #0120
    longTexte = 1           #0026
    spaces$ = 1
    if posiNomprog <>0,
        [
        posicoupe = posiNomprog+13
        pcoupetexte
        n$, " ( PAR.", stextecoupe, sfcom, e$
        ]
    if posiClient >0,
        [
        posicoupe = posiClient+8
        pcoupetexte
        n$, " ( CLIENT.", stextecoupe, sfcom, e$
        ]
    if posiNomPiece >0,
        [
        posicoupe = posiNomPiece+11
        pcoupetexte
        n$, " ( PIECE.", stextecoupe, sfcom, e$
        ]
    if posiNumplan >0,
        [
        posicoupe = posiNumplan+10
        pcoupetexte
        n$, " ( PLAN.",stextecoupe, sfcom, e$
        ]
    if posiIndiceplan >0,
        [
        posicoupe = posiIndiceplan+8
        pcoupetexte
        n$, " ( INDICE.",stextecoupe, sfcom, e$
        ]
    if posiX >0,
        [
        posicoupe = posiX+3
        pcoupetexte
        n$, " ( ORIGINE.)", e$, n$, " ( X.", stextecoupe, sfcom, e$
        ]
    if posiY >0,
        [
        posicoupe = posiY+3
        pcoupetexte
        n$, " ( Y.", stextecoupe, sfcom, e$
        ]
    if posiZ >0,
        [
        posicoupe = posiZ+3
        pcoupetexte
        n$, " ( Z.",stextecoupe, sfcom, e$
        ]
    if posiA >0,                #0041
        [
        posicoupe = posiA+3
        pcoupetexte
        if stextecoupe <> ssansA, n$, " ( A.",stextecoupe, sfcom, e$, useaxe = 1
        ]
    if posiOrientation >0,
        [
        posicoupe = posiOrientation+13
        pcoupetexte
        n$, " ( ORIENTATION PIECE. )",e$, n$, " (", stextecoupe, sfcom, e$
        ]
    if posiInfo >0,
        [
        posicoupe = posiInfo+6
        pcoupetexte
        n$, " ( *****************************)",e$
        n$, " (", stextecoupe, sfcom, e$
        ]
    #if posivirgule > 0,
        #[
        #posicoupe = posivirgule+1
        #pcoupetexte
        #n$, " (",stextecoupe, sfcom, e$
        #]
    if posiSlash = 0 & long_TEXTE > 0,  #0120
        [
        n$, " (", scomm$, sfcom, e$
        ]
        spaces$ = 0

pcoupetexte #coupe le texte
            stextecoupe = brksps(posicoupe, stextentete)
			
#endregion

#region modif_nom_fichiers
#0030------------------------ RENOMMER LE FICHIER NC EN FONCTION DU NUMERO DE PROGRAMME -------------------------
snom_nc : ""         	# STRING de stockage du non du NC complet avec chemin et extension style c:\cfao\prog-cn\TOTO.NC
snom_numero : ""     	# STRING de stockage du non du NC sous forme O0123.nc avec chemin et extesion style c:\cfao\prog-cn\ous forme O0123.NC
spoint : ""      		# STRING du POINT pour l'extenssion (.NC)
#stringo        		# STRING du O pour le non (O0123) en nom du Numero PRG
#seditor : 	"C:\WINNT\system32\notepad.exe" # non de l'editeur pour les prog en nom du Numero PRG (avec chemin complet si pas dans Windows)
#seditor :  "C:\WINDOWS\notepad.exe"    #XP non de l'editeur pour les prog en nom du Numero PRG (avec chemin complet si pas dans Windows)
#seditor :  "C:\Program Files\Microsoft Office\Office\WINWORD.EXE"  #ouvrir avec WORD
#seditor :  "C:\Mcam91\Common\Editors\Cedit\CIMCOEdit.exe"  #ouvrir avec CIMCOEDIT (ne fonctionne pas)
seditor : 	"D:\Program Files\Mcam2022\Extensions\CodeExpert.exe"    #NOUVEL EDITEUR MC"
sdebut : "F"
smachine : "-SNH"
snouv_nom : ""
schange_nom_fichier : "" #nouveau nom uniquement, sans le chemin
snomprogentete : ""
#sfraisage_ "\FRAISAGE\"
#stous_clients "\TOUS_CLIENTS\"
sext : ""    		# extention
spoint2 : "."      	#0040 STRING du POINT pour l'extenssion (.NC) UNIQUEMENT pour les entêtes prog.
fmt 7 posipoint
#fmt 7 posiFraisage_
#fmt 7 posiTous_clients
sfileops : ""           				# string du nom du fichier OPS
sops : ".ops"           				# extention des fichier OPS
spathnc_ : "C:\MASTERCAM FICAM\ISO\" 	# chemin pour les fichiers ISO
sdebut2 : "PR"    		#0300
snom_entete : ""     	#0300
#sprogno = progno$

pnom_nc     # Génération des noms du fichier NC
    #snom_fichier = sdebut+snamenci+smachine+spoint+sextnc
    snom_nc = spathnc_+snamenc$+spoint+sextnc$             #spathnc$ Fichier NC en cours de creation sous forme toto.nc
    #snom_numero = no2str (progno)
    snouv_nom = spathnc_+sdebut2+snamenci$+spoint+sextnc$  #spathnc$ nouveau non de fichier NC sous forme F15662-A-2-HE.H
    schange_nom_fichier = snouv_nom
    snom_entete = sdebut+smcname$+smachine+spoint+sextnc$ #0300 nouveau non de fichier NC sous forme F15662-A-2-HE.H  AFFICHE EN COMMENTAIRE
    #smcpath$ = ucase (smcpath$)        #retourne le chemin du fichier CN
    #smcname$ = ucase (smcname$)    #Nom du fichier NC
    #smcext$ = ucase (smcext$)      #retourne l'extention du pst
    #snamepst$ = ucase (snamepst$)  #retourne le nom du pst

ptest_nom   # test du non du fichier NC si O0123.NC
    #progno2 = progno
    if fexist (snouv_nom), pchange_nom
        #[
        #Q10
     	#pchange_nom   #ex #snom_numero
    	#if remplace = 0, pchange_nom
    	#if remplace = 1, result = remove (snouv_nom)
        #pchange_nom
        #snouv_nom = schange_nom_fichier
        #]
    pmodif_nom_entete

pchange_nom     # changer le numéro de prog si fichier exite déja
    while fexist (snouv_nom),       #(snom_numero)
        [
        q20
        #snom_numero = no2str (progno)
        #snouv_nom = spathnc+sdebut+snouv_nom+smachine+spoint+sextnc
    	snouv_nom = schange_nom_fichier
        ]
    pmodif_nom_entete

pmodif_nom_entete   #modif nom au début et fin de l'ISO
    snomprogentete = snouv_nom
    #posiTous_clients = strstr(stous_clients, snomprogentete)
    #posiTous_clients = posiTous_clients + 14
    snomprogentete = brksps(25,snomprogentete)
    #if posiTous_clients > 15,
        #[
        #snomprogentete = brksps(posiTous_clients,snomprogentete)
        #]
    #else,
        #[
        #posiFraisage_ = strstr(sfraisage_, snomprogentete)
        #posiFraisage_ = posiFraisage_ + 10
        #snomprogentete = brksps(posiFraisage_,snomprogentete)
        #]
    #enlever l'extention de fichier ex: .H
    #ex. string2 = brksps (posipoint, string1)
    #   string1 = O1235     string2 = txt
    posipoint = strstr(spoint2, snomprogentete) #0040
    sext = brksps (posipoint, snomprogentete)

ppost$       # traitement après post pro pour effacer le fichier OPS et renommer le fichier NC
    if change_nom = 0, ex$           # pour 0 = pas de changement sur le fichier
    snouv_nom = ucase(snouv_nom)
    sfileops = spathnci$ + snamenci$ + sops     #non du fichier ops
    result = remove (sfileops)                  #éfface le fichier ops (si existant, en fonction de la question 1524 du PST
                                                #ou d'après la config MC, fichier utile pour les params surep...
    result = remove (snouv_nom)                 #efface fichier en nom numero
    result = rename (snom_nc, snouv_nom)        #renomer fichier NC en nom numero
    snouv_nom = sguillemet + snouv_nom + sguillemet #0040
    result = launch (seditor, snouv_nom)        #lancer le blocnote
#endregion

#region infos_limites_parcours
ptravel    #0085 Tool travel limit calculation
	if x_min$ < x_tmin, x_tmin = x_min$
	if x_max$ > x_tmax, x_tmax = x_max$
	if y_min$ < y_tmin, y_tmin = y_min$
	if y_max$ > y_tmax, y_tmax = y_max$
	if z_min$ < z_tmin, z_tmin = z_min$
	if z_max$ > z_tmax, z_tmax = z_max$

# --------------------------------------------------------------------------
#0085 Buffer 5  Read / Write Routines
# --------------------------------------------------------------------------
pwritbuf5   # Write Buffer 1
    b5_gcode = gcode$
    b5_zmin = z_min$
    b5_zmax = z_max$
    b5_gcode = wbuf(5, wc5)

preadbuf5   # Read Buffer 1
    size5 = rbuf(5,0)
    b5_gcode = 1000
    min_depth = 999
    max_depth = -999
    while rc5 <= size5 & b5_gcode = 1000, [
      if rc5 <= size5, b5_gcode = rbuf(5,rc5)
      if b5_zmin < min_depth, min_depth = b5_zmin
      if b5_zmax > max_depth, max_depth = b5_zmax
	    ]
#endregion

[ENDBIN]

#region TEXTES_XML
#---------------------------------------------------------------------
[CTRL_TEXT_XML_BEGIN]  # All post text edits must be made through Control Definition Manager
<?xml version="1.0" encoding="UTF-8"?>
<mp_xml_post_text xml:space="preserve">
#region DEFAULT
	<control>
		<control_label>CTRL_MILL|DEFAULT</control_label>
		<language>fr-FR</language>
		<misc_integers>
			<misc_1>
				<text>Origine d'usinage</text>
			</misc_1>
			<misc_2>
				<text>Utiliser plan de sécu pour rotation diviseur 1=OUI 0=NON</text>
			</misc_2>
			<misc_3>
				<text>Ne pas bloquer le diviseur 1=OUI 0=NON</text>
			</misc_3>
			<misc_4>
				<text>""</text>
				#<value>0</value>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>""</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>""</text>
			</misc_10>
		</misc_integers>
		<misc_reals>
			<misc_1>
				<text>""</text>
			</misc_1>
			<misc_2>
				<text>""</text>
			</misc_2>
			<misc_3>
				<text>""</text>
			</misc_3>
			<misc_4>
				<text>G55... à activer/toutes les OPS 1=oui 0=nom"    #0045</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>""</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>""</text>
			</misc_10>
		</misc_reals>
		<simple_drill>
			<description>
				<text>Perçage Lamage G81 G82</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</simple_drill>
		<peck_drill>
			<description>
				<text>Débourrage G83</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Inc Q</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</peck_drill>
		<chip_break>
			<description>
				<text>Brise copeaux G73</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>Remonté D</text>
			</peck_clearance>
			<retract_amount>
				<text>Inc Q</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</chip_break>
		<tap>
			<description>
				<text>Taraudage G84</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Inc Q</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</tap>
		<bore1>
			<description>
				<text>Alésage G85</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</bore1>
		<bore2>
			<description>
				<text>Alésage indexe G75</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</bore2>
		<misc1>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</misc1>
		<misc2>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</misc2>
		<drill_cycle_9>
			<description>
				<text>Réf. Inter Exter rectangle</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Long. en X</text>
			</first_peck>
			<subsequent_peck>
				<text>Larg. en Y</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_9>
		<drill_cycle_10>
			<description>
				<text>Réf. Inter Exter Cercle</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Diametre nominal</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_10>
		<drill_cycle_11>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_11>
		<drill_cycle_12>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_12>
		<drill_cycle_13>
			<description>
				<text>Réf. PALPAGE en Z</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_13>
		<drill_cycle_14>
			<description>
				<text>Réf. PALPAGE FACE X</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>VERS X+=1/X-=-1</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_14>
		<drill_cycle_15>
			<description>
				<text>Réf. PALPAGE FACE Y</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>VERS Y+=1/Y-=-1</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_15>
		<drill_cycle_16>
			<description>
				<text>Réf. ENTRE 2 FACES X</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Z BOUT PALP.</text>
			</first_peck>
			<subsequent_peck>
				<text>LONG. A PALPER</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_16>
		<drill_cycle_17>
			<description>
				<text>Réf. ENTRE 2 FACES Y</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Z BOUT PALP.</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>LONG. A PALPER</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_17>
		<drill_cycle_18>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_18>
		<drill_cycle_19>
			<description>
				<text>Percage tres profond</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>Z HORS MAT.</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_19>
		<drill_cycle_20>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_20>
		<simple_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 1</text>
			</description>
		</simple_drill_custom_parameters>
		<peck_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 2</text>
			</description>
		</peck_drill_custom_parameters>
		<chip_break_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 3</text>
			</description>
		</chip_break_drill_custom_parameters>
		<tap_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 4</text>
			</description>
		</tap_custom_parameters>
		<bore1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 5</text>
			</description>
		</bore1_custom_parameters>
		<bore2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 6</text>
			</description>
		</bore2_custom_parameters>
		<misc1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 7</text>
			</description>
		</misc1_custom_parameters>
		<misc2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 8</text>
			</description>
		</misc2_custom_parameters>
		<drill_cycle_9_custom_parameters>
			<description>
				<text>Réf. Int./Ext. Rectangle</text>
			</description>
			<parameter_1>
				<text>Réf. Inter rectangle = 1</text>
			</parameter_1>
			<parameter_2>
				<text>Réf. Exter rectangle = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_9_custom_parameters>
		<drill_cycle_10_custom_parameters>
			<description>
				<text>Réf. Int./Ext. Cercle</text>
			</description>
			<parameter_1>
				<text>Réf. Inter Cercle = 1</text>
			</parameter_1>
			<parameter_2>
				<text>Réf. Exter Cercle = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_10_custom_parameters>
		<drill_cycle_11_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 11</text>
			</description>
		</drill_cycle_11_custom_parameters>
		<drill_cycle_12_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 12</text>
			</description>
		</drill_cycle_12_custom_parameters>
		<drill_cycle_13_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 13</text>
			</description>
		</drill_cycle_13_custom_parameters>
		<drill_cycle_14_custom_parameters>
			<description>
				<text>Réf. FACE en X</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_14_custom_parameters>
		<drill_cycle_15_custom_parameters>
			<description>
				<text>Réf. FACE en Y</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_15_custom_parameters>
		<drill_cycle_16_custom_parameters>
			<description>
				<text>Réf. Int./Ext. EN X</text>
			</description>
			<parameter_1>
				<text>Réf. Inter FACES = 1</text>
			</parameter_1>
			<parameter_2>
				<text>Réf. Exter FACES = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_16_custom_parameters>
		<drill_cycle_17_custom_parameters>
			<description>
				<text>Réf. Int./Ext. EN Y</text>
			</description>
			<parameter_1>
				<text>Réf. Inter FACES = 1</text>
			</parameter_1>
			<parameter_2>
				<text>Réf. Exter FACES = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_17_custom_parameters>
		<drill_cycle_18_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 18</text>
			</description>
		</drill_cycle_18_custom_parameters>
		<drill_cycle_19_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 19</text>
			</description>
		</drill_cycle_19_custom_parameters>
		<drill_cycle_20_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 20</text>
			</description>
		</drill_cycle_20_custom_parameters>
		<drill_cycle_descriptions>
			<simple_drill>
				<text>Perçage G81 G82</text>
			</simple_drill>
			<peck_drill>
				<text>Débourrage G83</text>
			</peck_drill>
			<chip_break>
				<text>Brise copeaux G73</text>
			</chip_break>
			<tapping>
				<text>Taraudage G84</text>
			</tapping>
			<boring_1>
				<text>Alésage G85</text>
			</boring_1>
			<boring_2>
				<text>Alésage Indexe G75</text>
			</boring_2>
			<misc_drill_1>
				<text>""</text>
			</misc_drill_1>
			<misc_drill_2>
				<text>""</text>
			</misc_drill_2>
			<custom_drill_9>
				<text>Ref. Inter Exter. Rectangle</text>
			</custom_drill_9>
			<custom_drill_10>
				<text>Réf. Inter Exter. Cercle</text>
			</custom_drill_10>
			<custom_drill_11>
				<text>""</text>
			</custom_drill_11>
			<custom_drill_12>
				<text>""</text>
			</custom_drill_12>
			<custom_drill_13>
				<text>Réf. FACE EN Z</text>
			</custom_drill_13>
			<custom_drill_14>
				<text>Réf. FACE EN Y</text>
			</custom_drill_14>
			<custom_drill_15>
				<text>Réf. FACE EN X</text>
			</custom_drill_15>
			<custom_drill_16>
				<text>Réf. FACES EN X</text>
			</custom_drill_16>
			<custom_drill_17>
				<text>Réf. FACES EN Y</text>
			</custom_drill_17>
			<custom_drill_18>
				<text>""</text>
			</custom_drill_18>
			<custom_drill_19>
				<text>Percage tres profond</text>
			</custom_drill_19>
			<custom_drill_20>
				<text>""</text>
			</custom_drill_20>
		</drill_cycle_descriptions>
		<canned_text>
			<canned_text_1>
				<text>""</text>
			</canned_text_1>
			<canned_text_2>
				<text>""</text>
			</canned_text_2>
			<canned_text_3>
				<text>""</text>
			</canned_text_3>
			<canned_text_4>
				<text>""</text>
			</canned_text_4>
			<canned_text_5>
				<text>""</text>
			</canned_text_5>
			<canned_text_6>
				<text>""</text>
			</canned_text_6>
			<canned_text_7>
				<text>""</text>
			</canned_text_7>
			<canned_text_8>
				<text>""</text>
			</canned_text_8>
			<canned_text_9>
				<text>""</text>
			</canned_text_9>
			<canned_text_10>
				<text>""</text>
			</canned_text_10>
		</canned_text>
	</control>
#endregion

#region MILL_ST_FANUC_ROTATION-A-OU-B
<control>
		<control_label>CTRL_MILL|MILL_ST_FANUC_ROTATION-A-OU-B</control_label>
		<language>fr-FR</language>
		<misc_integers>
			<misc_1>
				<text>Origine d'usinage</text>
			</misc_1>
			<misc_2>
				<text>Utiliser plan de sécu pour rotation diviseur 1=OUI 0=NON</text>
			</misc_2>
			<misc_3>
				<text>Ne pas bloquer le diviseur 1=OUI 0=NON</text>
			</misc_3>
			<misc_4>
				<text>""</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>""</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>""</text>
			</misc_10>
		</misc_integers>
		<misc_reals>
			<misc_1>
				<text>""</text>
			</misc_1>
			<misc_2>
				<text>""</text>
			</misc_2>
			<misc_3>
				<text>""</text>
			</misc_3>
			<misc_4>
				<text>G55... à activer/toutes les OPS 1=oui 0=nom"    #0045</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>""</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>""</text>
			</misc_10>
		</misc_reals>
		<simple_drill>
			<description>
				<text>Perçage Lamage G81 G82</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</simple_drill>
		<peck_drill>
			<description>
				<text>Débourrage G83</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Inc Q</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</peck_drill>
		<chip_break>
			<description>
				<text>Brise copeaux G73</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>Remonté D</text>
			</peck_clearance>
			<retract_amount>
				<text>Inc Q</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</chip_break>
		<tap>
			<description>
				<text>Taraudage G84</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Inc Q</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</tap>
		<bore1>
			<description>
				<text>Alésage G85</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</bore1>
		<bore2>
			<description>
				<text>Alésage indexe G75</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</bore2>
		<misc1>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</misc1>
		<misc2>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</misc2>
		<drill_cycle_9>
			<description>
				<text>Réf. Inter Exter rectangle</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Long. en X</text>
			</first_peck>
			<subsequent_peck>
				<text>Larg. en Y</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_9>
		<drill_cycle_10>
			<description>
				<text>Réf. Inter Exter Cercle</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Diametre nominal</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_10>
		<drill_cycle_11>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_11>
		<drill_cycle_12>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_12>
		<drill_cycle_13>
			<description>
				<text>Réf. PALPAGE en Z</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_13>
		<drill_cycle_14>
			<description>
				<text>Réf. PALPAGE FACE X</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>VERS X+=1/X-=-1</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_14>
		<drill_cycle_15>
			<description>
				<text>Réf. PALPAGE FACE Y</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>VERS Y+=1/Y-=-1</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_15>
		<drill_cycle_16>
			<description>
				<text>Réf. ENTRE 2 FACES X</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Z BOUT PALP.</text>
			</first_peck>
			<subsequent_peck>
				<text>LONG. A PALPER</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_16>
		<drill_cycle_17>
			<description>
				<text>Réf. ENTRE 2 FACES Y</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Z BOUT PALP.</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>LONG. A PALPER</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_17>
		<drill_cycle_18>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_18>
		<drill_cycle_19>
			<description>
				<text>Percage tres profond</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>Z HORS MAT.</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_19>
		<drill_cycle_20>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_20>
		<simple_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 1</text>
			</description>
		</simple_drill_custom_parameters>
		<peck_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 2</text>
			</description>
		</peck_drill_custom_parameters>
		<chip_break_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 3</text>
			</description>
		</chip_break_drill_custom_parameters>
		<tap_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 4</text>
			</description>
		</tap_custom_parameters>
		<bore1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 5</text>
			</description>
		</bore1_custom_parameters>
		<bore2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 6</text>
			</description>
		</bore2_custom_parameters>
		<misc1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 7</text>
			</description>
		</misc1_custom_parameters>
		<misc2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 8</text>
			</description>
		</misc2_custom_parameters>
		<drill_cycle_9_custom_parameters>
			<description>
				<text>Réf. Int./Ext. Rectangle</text>
			</description>
			<parameter_1>
				<text>Réf. Inter rectangle = 1</text>
			</parameter_1>
			<parameter_2>
				<text>Réf. Exter rectangle = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_9_custom_parameters>
		<drill_cycle_10_custom_parameters>
			<description>
				<text>Réf. Int./Ext. Cercle</text>
			</description>
			<parameter_1>
				<text>Réf. Inter Cercle = 1</text>
			</parameter_1>
			<parameter_2>
				<text>Réf. Exter Cercle = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_10_custom_parameters>
		<drill_cycle_11_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 11</text>
			</description>
		</drill_cycle_11_custom_parameters>
		<drill_cycle_12_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 12</text>
			</description>
		</drill_cycle_12_custom_parameters>
		<drill_cycle_13_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 13</text>
			</description>
		</drill_cycle_13_custom_parameters>
		<drill_cycle_14_custom_parameters>
			<description>
				<text>Réf. FACE en X</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_14_custom_parameters>
		<drill_cycle_15_custom_parameters>
			<description>
				<text>Réf. FACE en Y</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_15_custom_parameters>
		<drill_cycle_16_custom_parameters>
			<description>
				<text>Réf. Int./Ext. EN X</text>
			</description>
			<parameter_1>
				<text>Réf. Inter FACES = 1</text>
			</parameter_1>
			<parameter_2>
				<text>Réf. Exter FACES = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_16_custom_parameters>
		<drill_cycle_17_custom_parameters>
			<description>
				<text>Réf. Int./Ext. EN Y</text>
			</description>
			<parameter_1>
				<text>Réf. Inter FACES = 1</text>
			</parameter_1>
			<parameter_2>
				<text>Réf. Exter FACES = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_17_custom_parameters>
		<drill_cycle_18_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 18</text>
			</description>
		</drill_cycle_18_custom_parameters>
		<drill_cycle_19_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 19</text>
			</description>
		</drill_cycle_19_custom_parameters>
		<drill_cycle_20_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 20</text>
			</description>
		</drill_cycle_20_custom_parameters>
		<drill_cycle_descriptions>
			<simple_drill>
				<text>Perçage G81 G82</text>
			</simple_drill>
			<peck_drill>
				<text>Débourrage G83</text>
			</peck_drill>
			<chip_break>
				<text>Brise copeaux G73</text>
			</chip_break>
			<tapping>
				<text>Taraudage G84</text>
			</tapping>
			<boring_1>
				<text>Alésage G85</text>
			</boring_1>
			<boring_2>
				<text>Alésage Indexe G75</text>
			</boring_2>
			<misc_drill_1>
				<text>""</text>
			</misc_drill_1>
			<misc_drill_2>
				<text>""</text>
			</misc_drill_2>
			<custom_drill_9>
				<text>Ref. Inter Exter. Rectangle</text>
			</custom_drill_9>
			<custom_drill_10>
				<text>Réf. Inter Exter. Cercle</text>
			</custom_drill_10>
			<custom_drill_11>
				<text>""</text>
			</custom_drill_11>
			<custom_drill_12>
				<text>""</text>
			</custom_drill_12>
			<custom_drill_13>
				<text>Réf. FACE EN Z</text>
			</custom_drill_13>
			<custom_drill_14>
				<text>Réf. FACE EN Y</text>
			</custom_drill_14>
			<custom_drill_15>
				<text>Réf. FACE EN X</text>
			</custom_drill_15>
			<custom_drill_16>
				<text>Réf. FACES EN X</text>
			</custom_drill_16>
			<custom_drill_17>
				<text>Réf. FACES EN Y</text>
			</custom_drill_17>
			<custom_drill_18>
				<text>""</text>
			</custom_drill_18>
			<custom_drill_19>
				<text>Percage tres profond</text>
			</custom_drill_19>
			<custom_drill_20>
				<text>""</text>
			</custom_drill_20>
		</drill_cycle_descriptions>
		<canned_text>
			<canned_text_1>
				<text>""</text>
			</canned_text_1>
			<canned_text_2>
				<text>""</text>
			</canned_text_2>
			<canned_text_3>
				<text>""</text>
			</canned_text_3>
			<canned_text_4>
				<text>""</text>
			</canned_text_4>
			<canned_text_5>
				<text>""</text>
			</canned_text_5>
			<canned_text_6>
				<text>""</text>
			</canned_text_6>
			<canned_text_7>
				<text>""</text>
			</canned_text_7>
			<canned_text_8>
				<text>""</text>
			</canned_text_8>
			<canned_text_9>
				<text>""</text>
			</canned_text_9>
			<canned_text_10>
				<text>""</text>
			</canned_text_10>
		</canned_text>
	</control>
#endregion
</mp_xml_post_text>
[CTRL_TEXT_XML_END]
#endregion
